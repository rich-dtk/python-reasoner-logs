Or(Not(CWA_CONSTANTS-2),
   ForAll(c!0,
          Or(Not(source_type(c!0) == file_based),
             c!0 == KubernetesParser.Container.Image-0)))

Or(Not(DISTINCT_CONSTANTS-2),
   Not(COMMON.NONE == getdtk/graph-example1-app))

Or(Not(CWA_CONSTANTS-3),
   ForAll(c!1,
          Or(c!1 == getdtk/graph-example1-app,
             c!1 == COMMON.NONE,
             Not(source_type(c!1) == file_based))))

Or(Not(DISTINCT_CONSTANTS-3), Not(latest == COMMON.NONE))

Or(Not(CWA_CONSTANTS-4),
   ForAll(c!2,
          Or(c!2 == COMMON.NONE,
             c!2 == latest,
             Not(source_type(c!2) == file_based))))

Or(Not(DISTINCT_CONSTANTS-4),
   Distinct(node-app2-dep,
            node-app1-secret,
            node-app1-dep,
            redis,
            node-app2-secret,
            redis-master,
            nginx-ingress-controller,
            node-app-svc,
            node-app2-svc,
            redis-replicas,
            COMMON.NONE,
            example-node-app,
            ingress3-simple-fanout,
            redis-headless,
            node-app1-svc,
            nginx,
            ingress2-simple-service-bad-default,
            ingress1-matches-app1-with-default,
            test2))

Or(Not(CWA_CONSTANTS-5),
   ForAll(c!3,
          Or(Not(source_type(c!3) == file_based),
             c!3 == test2,
             c!3 == ingress1-matches-app1-with-default,
             c!3 == ingress2-simple-service-bad-default,
             c!3 == nginx,
             c!3 == node-app1-svc,
             c!3 == redis-headless,
             c!3 == ingress3-simple-fanout,
             c!3 == example-node-app,
             c!3 == COMMON.NONE,
             c!3 == redis-replicas,
             c!3 == node-app2-svc,
             c!3 == node-app-svc,
             c!3 == nginx-ingress-controller,
             c!3 == redis-master,
             c!3 == node-app2-secret,
             c!3 == redis,
             c!3 == node-app1-dep,
             c!3 == node-app1-secret,
             c!3 == node-app2-dep)))

Or(Not(DISTINCT_CONSTANTS-5),
   Distinct(master,
            node-app1,
            f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
            redis,
            [],
            442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
            ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86,
            False,
            58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58,
            no_match_value,
            node-app2,
            6.2.4-debian-10-r13,
            COMMON.NONE,
            6379,
            /,
            44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
            Helm,
            IfNotPresent,
            node,
            bitnami/redis,
            replica,
            redis-14.4.0,
            ExternalName))

Or(Not(CWA_CONSTANTS-6),
   ForAll(c!4,
          Or(Not(source_type(c!4) == file_based),
             c!4 == ExternalName,
             c!4 == redis-14.4.0,
             c!4 == replica,
             c!4 == bitnami/redis,
             c!4 == node,
             c!4 == IfNotPresent,
             c!4 == Helm,
             c!4 ==
             44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
             c!4 == /,
             c!4 == 6379,
             c!4 == COMMON.NONE,
             c!4 == 6.2.4-debian-10-r13,
             c!4 == node-app2,
             c!4 == no_match_value,
             c!4 ==
             58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58,
             c!4 == False,
             c!4 ==
             ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86,
             c!4 ==
             442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
             c!4 == [],
             c!4 == redis,
             c!4 ==
             f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
             c!4 == node-app1,
             c!4 == master)))

Or(Not(DISTINCT_CONSTANTS-6),
   Distinct(/root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/app/redis.yaml,
            github.com,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/headless-svc.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/ingress/ingress-examples.yaml,
            redis,
            redis/templates/networkpolicy.yaml,
            docker.io/,
            :,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/configmap.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/service.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/redis/templates/servicemonitor.yaml,
            rich_sprint44,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/statefulset.yaml,
            COMMON.NONE,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/secret.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/redis/templates/networkpolicy.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app2.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/scripts-configmap.yaml,
            redis/templates/servicemonitor.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/statefulset.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app1.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/health-configmap.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app1-image.yaml,
            https://github.com/dtk/ai-reasoner.git,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/service.yaml,
            /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/app/app.yaml))

Or(Not(CWA_CONSTANTS-7),
   ForAll(c!5,
          Or(Not(source_type(c!5) == file_based),
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/app/app.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/service.yaml,
             c!5 == https://github.com/dtk/ai-reasoner.git,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app1-image.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/health-configmap.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app1.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/statefulset.yaml,
             c!5 == redis/templates/servicemonitor.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/scripts-configmap.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app2.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/redis/templates/networkpolicy.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/secret.yaml,
             c!5 == COMMON.NONE,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/statefulset.yaml,
             c!5 == rich_sprint44,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/redis/templates/servicemonitor.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/service.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/configmap.yaml,
             c!5 == :,
             c!5 == docker.io/,
             c!5 == redis/templates/networkpolicy.yaml,
             c!5 == redis,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/ingress/ingress-examples.yaml,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/headless-svc.yaml,
             c!5 == github.com,
             c!5 ==
             /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/app/redis.yaml)))

Or(Not(DISTINCT_CONSTANTS-7),
   Distinct(checksum/configmap,
            metrics.useServiceMonitor,
            image.tag,
            image.debug,
            helm.sh/chart,
            master.service.port,
            app.kubernetes.io/managed-by,
            app,
            nginx.ingress.kubernetes.io/rewrite-target,
            checksum/health,
            master.containerPort,
            image.pullSecrets,
            app.kubernetes.io/instance,
            COMMON.NONE,
            networkPolicy.enabled,
            checksum/scripts,
            app.kubernetes.io/name,
            image.pullPolicy,
            app.kubernetes.io/component,
            image.repository,
            metrics.isEnabled,
            checksum/secret,
            master.service.type))

Or(Not(CWA_CONSTANTS-8),
   ForAll(c!6,
          Or(Not(source_type(c!6) == file_based),
             c!6 == master.service.type,
             c!6 == checksum/secret,
             c!6 == metrics.isEnabled,
             c!6 == image.repository,
             c!6 == app.kubernetes.io/component,
             c!6 == image.pullPolicy,
             c!6 == app.kubernetes.io/name,
             c!6 == checksum/scripts,
             c!6 == networkPolicy.enabled,
             c!6 == COMMON.NONE,
             c!6 == app.kubernetes.io/instance,
             c!6 == image.pullSecrets,
             c!6 == master.containerPort,
             c!6 == checksum/health,
             c!6 ==
             nginx.ingress.kubernetes.io/rewrite-target,
             c!6 == app,
             c!6 == app.kubernetes.io/managed-by,
             c!6 == master.service.port,
             c!6 == helm.sh/chart,
             c!6 == image.debug,
             c!6 == image.tag,
             c!6 == metrics.useServiceMonitor,
             c!6 == checksum/configmap)))

Or(Not(DISTINCT_CONSTANTS-8), Not(COMMON.NONE == default))

Or(Not(CWA_CONSTANTS-9),
   ForAll(c!7,
          Or(c!7 == default,
             c!7 == COMMON.NONE,
             Not(source_type(c!7) == file_based))))

Or(Not(DISTINCT_CONSTANTS-9),
   Distinct(COMMON.NONE, 6379, 31112, 8080))

Or(Not(CWA_CONSTANTS-10),
   ForAll(c!8,
          Or(Not(source_type(c!8) == file_based),
             c!8 == 8080,
             c!8 == 31112,
             c!8 == 6379,
             c!8 == COMMON.NONE)))

Or(Not(DISTINCT_CONSTANTS-10),
   Distinct(master,
            node-app1,
            f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
            redis,
            [],
            442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
            ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86,
            no_match_value,
            False,
            58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58,
            node-app2,
            6.2.4-debian-10-r13,
            COMMON.NONE,
            6379,
            /,
            44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
            Helm,
            IfNotPresent,
            node,
            bitnami/redis,
            replica,
            redis-14.4.0,
            ExternalName))

Or(Not(CWA_CONSTANTS-11),
   ForAll(c!9,
          Or(Not(source_type(c!9) == file_based),
             c!9 == ExternalName,
             c!9 == redis-14.4.0,
             c!9 == replica,
             c!9 == bitnami/redis,
             c!9 == node,
             c!9 == IfNotPresent,
             c!9 == Helm,
             c!9 ==
             44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
             c!9 == /,
             c!9 == 6379,
             c!9 == COMMON.NONE,
             c!9 == 6.2.4-debian-10-r13,
             c!9 == node-app2,
             c!9 ==
             58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58,
             c!9 == False,
             c!9 == no_match_value,
             c!9 ==
             ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86,
             c!9 ==
             442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
             c!9 == [],
             c!9 == redis,
             c!9 ==
             f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
             c!9 == node-app1,
             c!9 == master)))

Or(Not(DISTINCT_CONSTANTS-11),
   Distinct(master,
            node-app1,
            8081,
            f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
            redis,
            [],
            442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
            ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86,
            no_match_value,
            False,
            58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58,
            node-app2,
            6.2.4-debian-10-r13,
            80,
            COMMON.NONE,
            6379,
            /,
            44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
            Helm,
            IfNotPresent,
            node,
            bitnami/redis,
            replica,
            redis-14.4.0,
            ExternalName))

Or(Not(CWA_CONSTANTS-12),
   ForAll(c!10,
          Or(Not(source_type(c!10) == file_based),
             c!10 == ExternalName,
             c!10 == redis-14.4.0,
             c!10 == replica,
             c!10 == bitnami/redis,
             c!10 == node,
             c!10 == IfNotPresent,
             c!10 == Helm,
             c!10 ==
             44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
             c!10 == /,
             c!10 == 6379,
             c!10 == COMMON.NONE,
             c!10 == 80,
             c!10 == 6.2.4-debian-10-r13,
             c!10 == node-app2,
             c!10 ==
             58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58,
             c!10 == False,
             c!10 == no_match_value,
             c!10 ==
             ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86,
             c!10 ==
             442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
             c!10 == [],
             c!10 == redis,
             c!10 ==
             f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
             c!10 == 8081,
             c!10 == node-app1,
             c!10 == master)))

Or(Not(DISTINCT_CONSTANTS-12),
   Distinct(http, https, udp, scp, COMMON.NONE, tcp))

Or(Not(CWA_CONSTANTS-13),
   ForAll(c!11,
          Or(Not(source_type(c!11) == file_based),
             c!11 == tcp,
             c!11 == COMMON.NONE,
             c!11 == scp,
             c!11 == udp,
             c!11 == https,
             c!11 == http)))

Or(Not(DISTINCT_CONSTANTS-13),
   Distinct(NODE_ENV,
            ALLOW_EMPTY_PASSWORD,
            REDIS_PORT,
            BITNAMI_DEBUG,
            REDIS_TLS_ENABLED,
            REDIS_MASTER_HOST,
            PORT,
            DB_PORT,
            REDIS_REPLICATION_MODE,
            REDIS_PASSWORD,
            REDIS_MASTER_PASSWORD,
            REDIS_MASTER_PORT_NUMBER,
            DB_HOST,
            DB_PASSWORD))

Or(Not(CWA_CONSTANTS-14),
   ForAll(c!12,
          Or(Not(source_type(c!12) == file_based),
             c!12 == DB_PASSWORD,
             c!12 == DB_HOST,
             c!12 == REDIS_MASTER_PORT_NUMBER,
             c!12 == REDIS_MASTER_PASSWORD,
             c!12 == REDIS_PASSWORD,
             c!12 == REDIS_REPLICATION_MODE,
             c!12 == DB_PORT,
             c!12 == PORT,
             c!12 == REDIS_MASTER_HOST,
             c!12 == REDIS_TLS_ENABLED,
             c!12 == BITNAMI_DEBUG,
             c!12 == REDIS_PORT,
             c!12 == ALLOW_EMPTY_PASSWORD,
             c!12 == NODE_ENV)))

Or(Not(DISTINCT_CONSTANTS-14),
   Distinct(COMMON.NONE, *, foo.bar.com))

Or(Not(CWA_CONSTANTS-15),
   ForAll(c!13,
          Or(Not(source_type(c!13) == file_based),
             c!13 == foo.bar.com,
             c!13 == *,
             c!13 == COMMON.NONE)))

Or(Not(DISTINCT_CONSTANTS-15),
   Distinct(/app2, /app1, /testpath))

Or(Not(CWA_CONSTANTS-16),
   ForAll(c!14,
          Or(Not(source_type(c!14) == file_based),
             c!14 == /testpath,
             c!14 == /app1,
             c!14 == /app2)))

Or(Not(DISTINCT_CONSTANTS-16),
   Distinct(KubernetesParser.Kube.Ingress.Backend.Service-1,
            KubernetesParser.Kube.Ingress.Backend.Service-4,
            KubernetesParser.Kube.Ingress.Backend.Service-2,
            KubernetesParser.Kube.Ingress.Backend.Service-3,
            KubernetesParser.Kube.Ingress.Backend.Service-5,
            KubernetesParser.Kube.Ingress.Backend.Service-0))

Or(Not(CWA_CONSTANTS-17),
   ForAll(c!15,
          Or(Not(source_type(c!15) == file_based),
             c!15 ==
             KubernetesParser.Kube.Ingress.Backend.Service-0,
             c!15 ==
             KubernetesParser.Kube.Ingress.Backend.Service-5,
             c!15 ==
             KubernetesParser.Kube.Ingress.Backend.Service-3,
             c!15 ==
             KubernetesParser.Kube.Ingress.Backend.Service-2,
             c!15 ==
             KubernetesParser.Kube.Ingress.Backend.Service-4,
             c!15 ==
             KubernetesParser.Kube.Ingress.Backend.Service-1)))

Or(Not(DISTINCT_CONSTANTS-17),
   Distinct(COMMON.NONE,
            KubernetesParser.Kube.Ingress.DefaultBackend-0,
            KubernetesParser.Kube.Ingress.DefaultBackend-1))

Or(Not(CWA_CONSTANTS-18),
   ForAll(c!16,
          Or(Not(source_type(c!16) == file_based),
             c!16 ==
             KubernetesParser.Kube.Ingress.DefaultBackend-1,
             c!16 ==
             KubernetesParser.Kube.Ingress.DefaultBackend-0,
             c!16 == COMMON.NONE)))

Or(Not(DISTINCT_CONSTANTS-18),
   Distinct(COMMON.NONE, redis-password, db_password))

Or(Not(CWA_CONSTANTS-19),
   ForAll(c!17,
          Or(Not(source_type(c!17) == file_based),
             c!17 == db_password,
             c!17 == redis-password,
             c!17 == COMMON.NONE)))

Or(Not(CWA_CONSTANTS-20),
   ForAll(c!18,
          Or(Not(source_type(c!18) == file_based),
             c!18 == COMMON.NONE)))

Or(Not(CWA_CONSTANTS-21),
   ForAll(c!19,
          Or(Not(source_type(c!19) == file_based),
             c!19 == cluster.local)))

Or(Not(CWA_CONSTANTS-22),
   ForAll(c!20,
          Or(Not(source_type(c!20) == file_based),
             c!20 == COMMON.NONE)))

Or(Not(CWA_CONSTANTS-23),
   ForAll(c!21,
          Or(Not(source_type(c!21) == file_based),
             c!21 == COMMON.NONE)))

Or(Not(CWA_CONSTANTS-24),
   ForAll(c!22,
          Or(Not(source_type(c!22) == file_based),
             c!22 == COMMON.NONE)))

Or(Not(DISTINCT_CONSTANTS-19), Not(Debug2 == Debug1))

Or(Not(CWA_CONSTANTS-25),
   ForAll(c!23,
          Or(c!23 == Debug1,
             c!23 == Debug2,
             Not(source_type(c!23) == file_based))))

Or(Not(DISTINCT_CONSTANTS-20),
   Not(redis == ingress_controller))

Or(Not(CWA_CONSTANTS-26),
   ForAll(c!24,
          Or(c!24 == ingress_controller,
             c!24 == redis,
             Not(source_type(c!24) == file_based))))

Or(Not(DISTINCT_CONSTANTS-21),
   Distinct(StatefulSet, Deployment, Secret))

Or(Not(CWA_CONSTANTS-27),
   ForAll(c!25,
          Or(Not(source_type(c!25) == file_based),
             c!25 == Secret,
             c!25 == Deployment,
             c!25 == StatefulSet)))

Or(Not(BASE_FACT-2),
   image_name(KubernetesParser.App-0) == COMMON.NONE)

Or(Not(BASE_FACT-3),
   image_tag(KubernetesParser.App-0) == COMMON.NONE)

Or(Not(BASE_FACT-4),
   image_name(KubernetesParser.App-1) == COMMON.NONE)

Or(Not(BASE_FACT-5),
   image_tag(KubernetesParser.App-1) == COMMON.NONE)

Or(Not(BASE_FACT-6),
   name_with_version(redis-4.4.0) == redis-14.4.0)

Or(Not(BASE_FACT-7),
   override_values(redis-14.4.0/redis) ==
   Reasoner.Helm.Chart.Release.Values-1)

Or(Not(BASE_FACT-8),
   value(Reasoner.Helm.Chart.Release.Values-1,
         networkPolicy.enabled) ==
   False)

Or(Not(BASE_FACT-9),
   value(Reasoner.Helm.Chart.Release.Values-1,
         master.service.type) ==
   ExternalName)

Or(Not(BASE_FACT-10),
   value(Reasoner.Helm.Chart.Release.Values-1,
         master.service.port) ==
   6379)

Or(Not(BASE_FACT-11),
   value(Reasoner.Helm.Chart.Release.Values-1,
         master.containerPort) ==
   6379)

Or(Not(BASE_FACT-12),
   value(Reasoner.Helm.Chart.Release.Values-1,
         metrics.isEnabled) ==
   False)

Or(Not(BASE_FACT-13),
   value(Reasoner.Helm.Chart.Release.Values-1,
         metrics.useServiceMonitor) ==
   False)

Or(Not(BASE_FACT-14),
   value(Reasoner.Helm.Chart.Release.Values-1,
         image.repository) ==
   bitnami/redis)

Or(Not(BASE_FACT-15),
   value(Reasoner.Helm.Chart.Release.Values-1, image.tag) ==
   6.2.4-debian-10-r13)

Or(Not(BASE_FACT-16),
   value(Reasoner.Helm.Chart.Release.Values-1,
         image.pullPolicy) ==
   IfNotPresent)

Or(Not(BASE_FACT-17),
   value(Reasoner.Helm.Chart.Release.Values-1,
         image.pullSecrets) ==
   [])

Or(Not(BASE_FACT-18),
   value(Reasoner.Helm.Chart.Release.Values-1, image.debug) ==
   False)

Or(Not(BASE_FACT-19),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           networkPolicy.enabled))

Or(Not(BASE_FACT-20),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           master.service.type))

Or(Not(BASE_FACT-21),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           master.service.port))

Or(Not(BASE_FACT-22),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           master.containerPort))

Or(Not(BASE_FACT-23),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           metrics.isEnabled))

Or(Not(BASE_FACT-24),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           metrics.useServiceMonitor))

Or(Not(BASE_FACT-25),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.repository))

Or(Not(BASE_FACT-26),
   has_key(Reasoner.Helm.Chart.Release.Values-1, image.tag))

Or(Not(BASE_FACT-27),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.pullPolicy))

Or(Not(BASE_FACT-28),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.pullSecrets))

Or(Not(BASE_FACT-29),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.debug))

Or(Not(BASE_FACT-30),
   release(redis-4.4.0, redis-14.4.0/redis))

Or(Not(BASE_FACT-31),
   override_values(redis-14.4.0/redis) ==
   Reasoner.Helm.Chart.Release.Values-1)

Or(Not(BASE_FACT-32),
   value(Reasoner.Helm.Chart.Release.Values-1,
         networkPolicy.enabled) ==
   False)

Or(Not(BASE_FACT-33),
   value(Reasoner.Helm.Chart.Release.Values-1,
         master.service.type) ==
   ExternalName)

Or(Not(BASE_FACT-34),
   value(Reasoner.Helm.Chart.Release.Values-1,
         master.service.port) ==
   6379)

Or(Not(BASE_FACT-35),
   value(Reasoner.Helm.Chart.Release.Values-1,
         master.containerPort) ==
   6379)

Or(Not(BASE_FACT-36),
   value(Reasoner.Helm.Chart.Release.Values-1,
         metrics.isEnabled) ==
   False)

Or(Not(BASE_FACT-37),
   value(Reasoner.Helm.Chart.Release.Values-1,
         metrics.useServiceMonitor) ==
   False)

Or(Not(BASE_FACT-38),
   value(Reasoner.Helm.Chart.Release.Values-1,
         image.repository) ==
   bitnami/redis)

Or(Not(BASE_FACT-39),
   value(Reasoner.Helm.Chart.Release.Values-1, image.tag) ==
   6.2.4-debian-10-r13)

Or(Not(BASE_FACT-40),
   value(Reasoner.Helm.Chart.Release.Values-1,
         image.pullPolicy) ==
   IfNotPresent)

Or(Not(BASE_FACT-41),
   value(Reasoner.Helm.Chart.Release.Values-1,
         image.pullSecrets) ==
   [])

Or(Not(BASE_FACT-42),
   value(Reasoner.Helm.Chart.Release.Values-1, image.debug) ==
   False)

Or(Not(BASE_FACT-43),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           networkPolicy.enabled))

Or(Not(BASE_FACT-44),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           master.service.type))

Or(Not(BASE_FACT-45),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           master.service.port))

Or(Not(BASE_FACT-46),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           master.containerPort))

Or(Not(BASE_FACT-47),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           metrics.isEnabled))

Or(Not(BASE_FACT-48),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           metrics.useServiceMonitor))

Or(Not(BASE_FACT-49),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.repository))

Or(Not(BASE_FACT-50),
   has_key(Reasoner.Helm.Chart.Release.Values-1, image.tag))

Or(Not(BASE_FACT-51),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.pullPolicy))

Or(Not(BASE_FACT-52),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.pullSecrets))

Or(Not(BASE_FACT-53),
   has_key(Reasoner.Helm.Chart.Release.Values-1,
           image.debug))

Or(Not(BASE_FACT-54),
   labels(KubernetesParser.Kube.Deployment-0) ==
   Reasoner.Kube.Labels-4)

Or(Not(BASE_FACT-55),
   value(Reasoner.Kube.Labels-4, app) == node)

Or(Not(BASE_FACT-56), has_key(Reasoner.Kube.Labels-4, app))

Or(Not(BASE_FACT-57),
   annotations(KubernetesParser.Kube.Deployment-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-58),
   match_labels(KubernetesParser.Kube.Deployment-0) ==
   Reasoner.Kube.Labels-5)

Or(Not(BASE_FACT-59),
   value(Reasoner.Kube.Labels-5, app) == node-app2)

Or(Not(BASE_FACT-60), has_key(Reasoner.Kube.Labels-5, app))

Or(Not(BASE_FACT-61),
   labels(KubernetesParser.Kube.Pod.Template-0) ==
   Reasoner.Kube.Labels-6)

Or(Not(BASE_FACT-62),
   value(Reasoner.Kube.Labels-6, app) == node-app2)

Or(Not(BASE_FACT-63), has_key(Reasoner.Kube.Labels-6, app))

Or(Not(BASE_FACT-64),
   annotations(KubernetesParser.Kube.Pod.Template-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-65),
   template(KubernetesParser.Kube.Deployment-0) ==
   KubernetesParser.Kube.Pod.Template-0)

Or(Not(BASE_FACT-66),
   labels(KubernetesParser.Kube.Pod.Template-0) ==
   Reasoner.Kube.Labels-6)

Or(Not(BASE_FACT-67),
   value(Reasoner.Kube.Labels-6, app) == node-app2)

Or(Not(BASE_FACT-68), has_key(Reasoner.Kube.Labels-6, app))

Or(Not(BASE_FACT-69),
   annotations(KubernetesParser.Kube.Pod.Template-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-70),
   env_vars_config(KubernetesParser.Kube.Container-0) ==
   Reasoner.Kube.Container.EnvVarsConfig-1)

Or(Not(BASE_FACT-71),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, NODE_ENV) ==
   {"value": "production"})

Or(Not(BASE_FACT-72),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, PORT) ==
   {"value": "8080"})

Or(Not(BASE_FACT-73),
   value(Reasoner.Kube.Container.EnvVarsConfig-1,
         DB_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "node-app2-secret", "key": "db_password"}}})

Or(Not(BASE_FACT-74),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, DB_HOST) ==
   {"value": "my-release-redis-master"})

Or(Not(BASE_FACT-75),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, DB_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-76),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1,
           NODE_ENV))

Or(Not(BASE_FACT-77),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1, PORT))

Or(Not(BASE_FACT-78),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1,
           DB_PASSWORD))

Or(Not(BASE_FACT-79),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1, DB_HOST))

Or(Not(BASE_FACT-80),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1, DB_PORT))

Or(Not(BASE_FACT-81),
   command(KubernetesParser.Kube.Container-0) == COMMON.NONE)

Or(Not(BASE_FACT-82),
   containers(KubernetesParser.Kube.Pod.Template-0,
              KubernetesParser.Kube.Container-0))

Or(Not(BASE_FACT-83),
   env_vars_config(KubernetesParser.Kube.Container-0) ==
   Reasoner.Kube.Container.EnvVarsConfig-1)

Or(Not(BASE_FACT-84),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, NODE_ENV) ==
   {"value": "production"})

Or(Not(BASE_FACT-85),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, PORT) ==
   {"value": "8080"})

Or(Not(BASE_FACT-86),
   value(Reasoner.Kube.Container.EnvVarsConfig-1,
         DB_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "node-app2-secret", "key": "db_password"}}})

Or(Not(BASE_FACT-87),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, DB_HOST) ==
   {"value": "my-release-redis-master"})

Or(Not(BASE_FACT-88),
   value(Reasoner.Kube.Container.EnvVarsConfig-1, DB_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-89),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1,
           NODE_ENV))

Or(Not(BASE_FACT-90),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1, PORT))

Or(Not(BASE_FACT-91),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1,
           DB_PASSWORD))

Or(Not(BASE_FACT-92),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1, DB_HOST))

Or(Not(BASE_FACT-93),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-1, DB_PORT))

Or(Not(BASE_FACT-94),
   command(KubernetesParser.Kube.Container-0) == COMMON.NONE)

Or(Not(BASE_FACT-95),
   ports(KubernetesParser.Kube.Container-0,
         KubernetesParser.Kube.Container.PortItem-0))

Or(Not(BASE_FACT-96),
   labels(KubernetesParser.Kube.Deployment-1) ==
   Reasoner.Kube.Labels-7)

Or(Not(BASE_FACT-97),
   value(Reasoner.Kube.Labels-7, app) == node-app1)

Or(Not(BASE_FACT-98), has_key(Reasoner.Kube.Labels-7, app))

Or(Not(BASE_FACT-99),
   annotations(KubernetesParser.Kube.Deployment-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-100),
   match_labels(KubernetesParser.Kube.Deployment-1) ==
   Reasoner.Kube.Labels-8)

Or(Not(BASE_FACT-101),
   value(Reasoner.Kube.Labels-8, app) == node-app1)

Or(Not(BASE_FACT-102), has_key(Reasoner.Kube.Labels-8, app))

Or(Not(BASE_FACT-103),
   labels(KubernetesParser.Kube.Pod.Template-1) ==
   Reasoner.Kube.Labels-9)

Or(Not(BASE_FACT-104),
   value(Reasoner.Kube.Labels-9, app) == node-app1)

Or(Not(BASE_FACT-105), has_key(Reasoner.Kube.Labels-9, app))

Or(Not(BASE_FACT-106),
   annotations(KubernetesParser.Kube.Pod.Template-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-107),
   template(KubernetesParser.Kube.Deployment-1) ==
   KubernetesParser.Kube.Pod.Template-1)

Or(Not(BASE_FACT-108),
   labels(KubernetesParser.Kube.Pod.Template-1) ==
   Reasoner.Kube.Labels-9)

Or(Not(BASE_FACT-109),
   value(Reasoner.Kube.Labels-9, app) == node-app1)

Or(Not(BASE_FACT-110), has_key(Reasoner.Kube.Labels-9, app))

Or(Not(BASE_FACT-111),
   annotations(KubernetesParser.Kube.Pod.Template-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-112),
   env_vars_config(KubernetesParser.Kube.Container-1) ==
   Reasoner.Kube.Container.EnvVarsConfig-2)

Or(Not(BASE_FACT-113),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, NODE_ENV) ==
   {"value": "production"})

Or(Not(BASE_FACT-114),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, PORT) ==
   {"value": "8080"})

Or(Not(BASE_FACT-115),
   value(Reasoner.Kube.Container.EnvVarsConfig-2,
         DB_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "node-app1-secret", "key": "db_password"}}})

Or(Not(BASE_FACT-116),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, DB_HOST) ==
   {"value": "my-release-redis-master"})

Or(Not(BASE_FACT-117),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, DB_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-118),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2,
           NODE_ENV))

Or(Not(BASE_FACT-119),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2, PORT))

Or(Not(BASE_FACT-120),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2,
           DB_PASSWORD))

Or(Not(BASE_FACT-121),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2, DB_HOST))

Or(Not(BASE_FACT-122),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2, DB_PORT))

Or(Not(BASE_FACT-123),
   command(KubernetesParser.Kube.Container-1) == COMMON.NONE)

Or(Not(BASE_FACT-124),
   containers(KubernetesParser.Kube.Pod.Template-1,
              KubernetesParser.Kube.Container-1))

Or(Not(BASE_FACT-125),
   env_vars_config(KubernetesParser.Kube.Container-1) ==
   Reasoner.Kube.Container.EnvVarsConfig-2)

Or(Not(BASE_FACT-126),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, NODE_ENV) ==
   {"value": "production"})

Or(Not(BASE_FACT-127),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, PORT) ==
   {"value": "8080"})

Or(Not(BASE_FACT-128),
   value(Reasoner.Kube.Container.EnvVarsConfig-2,
         DB_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "node-app1-secret", "key": "db_password"}}})

Or(Not(BASE_FACT-129),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, DB_HOST) ==
   {"value": "my-release-redis-master"})

Or(Not(BASE_FACT-130),
   value(Reasoner.Kube.Container.EnvVarsConfig-2, DB_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-131),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2,
           NODE_ENV))

Or(Not(BASE_FACT-132),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2, PORT))

Or(Not(BASE_FACT-133),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2,
           DB_PASSWORD))

Or(Not(BASE_FACT-134),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2, DB_HOST))

Or(Not(BASE_FACT-135),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-2, DB_PORT))

Or(Not(BASE_FACT-136),
   command(KubernetesParser.Kube.Container-1) == COMMON.NONE)

Or(Not(BASE_FACT-137),
   ports(KubernetesParser.Kube.Container-1,
         KubernetesParser.Kube.Container.PortItem-1))

Or(Not(BASE_FACT-138),
   annotations(KubernetesParser.Kube.Ingress-0) ==
   Reasoner.Kube.Annotations-1)

Or(Not(BASE_FACT-139),
   value(Reasoner.Kube.Annotations-1,
         nginx.ingress.kubernetes.io/rewrite-target) ==
   /)

Or(Not(BASE_FACT-140),
   has_key(Reasoner.Kube.Annotations-1,
           nginx.ingress.kubernetes.io/rewrite-target))

Or(Not(BASE_FACT-141),
   labels(KubernetesParser.Kube.Ingress-0) == COMMON.NONE)

Or(Not(BASE_FACT-142),
   rules(KubernetesParser.Kube.Ingress-0,
         KubernetesParser.Kube.Ingress.Rule-0))

Or(Not(BASE_FACT-143),
   default_backend(KubernetesParser.Kube.Ingress-0) ==
   KubernetesParser.Kube.Ingress.DefaultBackend-0)

Or(Not(BASE_FACT-144),
   paths(KubernetesParser.Kube.Ingress.Rule-0,
         KubernetesParser.Kube.Ingress.Rule.HttpPath-0))

Or(Not(BASE_FACT-145),
   annotations(KubernetesParser.Kube.Ingress-1) ==
   Reasoner.Kube.Annotations-2)

Or(Not(BASE_FACT-146),
   value(Reasoner.Kube.Annotations-2,
         nginx.ingress.kubernetes.io/rewrite-target) ==
   /)

Or(Not(BASE_FACT-147),
   has_key(Reasoner.Kube.Annotations-2,
           nginx.ingress.kubernetes.io/rewrite-target))

Or(Not(BASE_FACT-148),
   labels(KubernetesParser.Kube.Ingress-1) == COMMON.NONE)

Or(Not(BASE_FACT-149),
   rules(KubernetesParser.Kube.Ingress-1,
         KubernetesParser.Kube.Ingress.Rule-1))

Or(Not(BASE_FACT-150),
   default_backend(KubernetesParser.Kube.Ingress-1) ==
   KubernetesParser.Kube.Ingress.DefaultBackend-1)

Or(Not(BASE_FACT-151),
   paths(KubernetesParser.Kube.Ingress.Rule-1,
         KubernetesParser.Kube.Ingress.Rule.HttpPath-1))

Or(Not(BASE_FACT-152),
   annotations(KubernetesParser.Kube.Ingress-2) ==
   Reasoner.Kube.Annotations-3)

Or(Not(BASE_FACT-153),
   value(Reasoner.Kube.Annotations-3,
         nginx.ingress.kubernetes.io/rewrite-target) ==
   /)

Or(Not(BASE_FACT-154),
   has_key(Reasoner.Kube.Annotations-3,
           nginx.ingress.kubernetes.io/rewrite-target))

Or(Not(BASE_FACT-155),
   labels(KubernetesParser.Kube.Ingress-2) == COMMON.NONE)

Or(Not(BASE_FACT-156),
   default_backend(KubernetesParser.Kube.Ingress-2) ==
   COMMON.NONE)

Or(Not(BASE_FACT-157),
   rules(KubernetesParser.Kube.Ingress-2,
         KubernetesParser.Kube.Ingress.Rule-2))

Or(Not(BASE_FACT-158),
   And(paths(KubernetesParser.Kube.Ingress.Rule-2,
             KubernetesParser.Kube.Ingress.Rule.HttpPath-2),
       paths(KubernetesParser.Kube.Ingress.Rule-2,
             KubernetesParser.Kube.Ingress.Rule.HttpPath-3)))

Or(Not(BASE_FACT-159),
   labels(HelmParser.Kube.Secret-0) ==
   Reasoner.Kube.Labels-10)

Or(Not(BASE_FACT-160),
   value(Reasoner.Kube.Labels-10, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-161),
   value(Reasoner.Kube.Labels-10, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-162),
   value(Reasoner.Kube.Labels-10,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-163),
   value(Reasoner.Kube.Labels-10,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-164),
   has_key(Reasoner.Kube.Labels-10, app.kubernetes.io/name))

Or(Not(BASE_FACT-165),
   has_key(Reasoner.Kube.Labels-10, helm.sh/chart))

Or(Not(BASE_FACT-166),
   has_key(Reasoner.Kube.Labels-10,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-167),
   has_key(Reasoner.Kube.Labels-10,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-168),
   annotations(HelmParser.Kube.Secret-0) == COMMON.NONE)

Or(Not(BASE_FACT-169),
   key_names(HelmParser.Kube.Secret-0, redis-password))

Or(Not(BASE_FACT-170),
   string_data_key(HelmParser.Kube.Secret-0) == COMMON.NONE)

Or(Not(BASE_FACT-171),
   labels(KubernetesParser.Kube.Secret-0) == COMMON.NONE)

Or(Not(BASE_FACT-172),
   annotations(KubernetesParser.Kube.Secret-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-173),
   key_names(KubernetesParser.Kube.Secret-0, db_password))

Or(Not(BASE_FACT-174),
   string_data_key(KubernetesParser.Kube.Secret-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-175),
   labels(KubernetesParser.Kube.Secret-1) == COMMON.NONE)

Or(Not(BASE_FACT-176),
   annotations(KubernetesParser.Kube.Secret-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-177),
   key_names(KubernetesParser.Kube.Secret-1, db_password))

Or(Not(BASE_FACT-178),
   string_data_key(KubernetesParser.Kube.Secret-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-179),
   labels(HelmParser.Kube.Service-0) ==
   Reasoner.Kube.Labels-11)

Or(Not(BASE_FACT-180),
   value(Reasoner.Kube.Labels-11, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-181),
   value(Reasoner.Kube.Labels-11, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-182),
   value(Reasoner.Kube.Labels-11,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-183),
   value(Reasoner.Kube.Labels-11,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-184),
   has_key(Reasoner.Kube.Labels-11, app.kubernetes.io/name))

Or(Not(BASE_FACT-185),
   has_key(Reasoner.Kube.Labels-11, helm.sh/chart))

Or(Not(BASE_FACT-186),
   has_key(Reasoner.Kube.Labels-11,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-187),
   has_key(Reasoner.Kube.Labels-11,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-188),
   annotations(HelmParser.Kube.Service-0) == COMMON.NONE)

Or(Not(BASE_FACT-189),
   type(HelmParser.Kube.Service-0) == ClusterIP)

Or(Not(BASE_FACT-190),
   selector(HelmParser.Kube.Service-0) ==
   Reasoner.Kube.Labels-12)

Or(Not(BASE_FACT-191),
   value(Reasoner.Kube.Labels-12, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-192),
   value(Reasoner.Kube.Labels-12,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-193),
   has_key(Reasoner.Kube.Labels-12, app.kubernetes.io/name))

Or(Not(BASE_FACT-194),
   has_key(Reasoner.Kube.Labels-12,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-195),
   ports(HelmParser.Kube.Service-0,
         HelmParser.Kube.Service.ServicePort-0))

Or(Not(BASE_FACT-196),
   labels(HelmParser.Kube.Service-1) ==
   Reasoner.Kube.Labels-13)

Or(Not(BASE_FACT-197),
   value(Reasoner.Kube.Labels-13, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-198),
   value(Reasoner.Kube.Labels-13, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-199),
   value(Reasoner.Kube.Labels-13,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-200),
   value(Reasoner.Kube.Labels-13,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-201),
   value(Reasoner.Kube.Labels-13,
         app.kubernetes.io/component) ==
   master)

Or(Not(BASE_FACT-202),
   has_key(Reasoner.Kube.Labels-13, app.kubernetes.io/name))

Or(Not(BASE_FACT-203),
   has_key(Reasoner.Kube.Labels-13, helm.sh/chart))

Or(Not(BASE_FACT-204),
   has_key(Reasoner.Kube.Labels-13,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-205),
   has_key(Reasoner.Kube.Labels-13,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-206),
   has_key(Reasoner.Kube.Labels-13,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-207),
   annotations(HelmParser.Kube.Service-1) == COMMON.NONE)

Or(Not(BASE_FACT-208),
   type(HelmParser.Kube.Service-1) == ExternalName)

Or(Not(BASE_FACT-209),
   selector(HelmParser.Kube.Service-1) ==
   Reasoner.Kube.Labels-14)

Or(Not(BASE_FACT-210),
   value(Reasoner.Kube.Labels-14, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-211),
   value(Reasoner.Kube.Labels-14,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-212),
   value(Reasoner.Kube.Labels-14,
         app.kubernetes.io/component) ==
   master)

Or(Not(BASE_FACT-213),
   has_key(Reasoner.Kube.Labels-14, app.kubernetes.io/name))

Or(Not(BASE_FACT-214),
   has_key(Reasoner.Kube.Labels-14,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-215),
   has_key(Reasoner.Kube.Labels-14,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-216),
   ports(HelmParser.Kube.Service-1,
         HelmParser.Kube.Service.ServicePort-1))

Or(Not(BASE_FACT-217),
   labels(HelmParser.Kube.Service-2) ==
   Reasoner.Kube.Labels-15)

Or(Not(BASE_FACT-218),
   value(Reasoner.Kube.Labels-15, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-219),
   value(Reasoner.Kube.Labels-15, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-220),
   value(Reasoner.Kube.Labels-15,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-221),
   value(Reasoner.Kube.Labels-15,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-222),
   value(Reasoner.Kube.Labels-15,
         app.kubernetes.io/component) ==
   replica)

Or(Not(BASE_FACT-223),
   has_key(Reasoner.Kube.Labels-15, app.kubernetes.io/name))

Or(Not(BASE_FACT-224),
   has_key(Reasoner.Kube.Labels-15, helm.sh/chart))

Or(Not(BASE_FACT-225),
   has_key(Reasoner.Kube.Labels-15,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-226),
   has_key(Reasoner.Kube.Labels-15,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-227),
   has_key(Reasoner.Kube.Labels-15,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-228),
   annotations(HelmParser.Kube.Service-2) == COMMON.NONE)

Or(Not(BASE_FACT-229),
   type(HelmParser.Kube.Service-2) == ClusterIP)

Or(Not(BASE_FACT-230),
   selector(HelmParser.Kube.Service-2) ==
   Reasoner.Kube.Labels-16)

Or(Not(BASE_FACT-231),
   value(Reasoner.Kube.Labels-16, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-232),
   value(Reasoner.Kube.Labels-16,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-233),
   value(Reasoner.Kube.Labels-16,
         app.kubernetes.io/component) ==
   replica)

Or(Not(BASE_FACT-234),
   has_key(Reasoner.Kube.Labels-16, app.kubernetes.io/name))

Or(Not(BASE_FACT-235),
   has_key(Reasoner.Kube.Labels-16,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-236),
   has_key(Reasoner.Kube.Labels-16,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-237),
   ports(HelmParser.Kube.Service-2,
         HelmParser.Kube.Service.ServicePort-2))

Or(Not(BASE_FACT-238),
   labels(KubernetesParser.Kube.Service-0) ==
   Reasoner.Kube.Labels-17)

Or(Not(BASE_FACT-239),
   value(Reasoner.Kube.Labels-17, app) == node)

Or(Not(BASE_FACT-240),
   has_key(Reasoner.Kube.Labels-17, app))

Or(Not(BASE_FACT-241),
   annotations(KubernetesParser.Kube.Service-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-242),
   type(KubernetesParser.Kube.Service-0) == NodePort)

Or(Not(BASE_FACT-243),
   selector(KubernetesParser.Kube.Service-0) ==
   Reasoner.Kube.Labels-18)

Or(Not(BASE_FACT-244),
   value(Reasoner.Kube.Labels-18, app) == node-app2)

Or(Not(BASE_FACT-245),
   has_key(Reasoner.Kube.Labels-18, app))

Or(Not(BASE_FACT-246),
   ports(KubernetesParser.Kube.Service-0,
         KubernetesParser.Kube.Service.ServicePort-0))

Or(Not(BASE_FACT-247),
   labels(KubernetesParser.Kube.Service-1) ==
   Reasoner.Kube.Labels-19)

Or(Not(BASE_FACT-248),
   value(Reasoner.Kube.Labels-19, app) == node)

Or(Not(BASE_FACT-249),
   has_key(Reasoner.Kube.Labels-19, app))

Or(Not(BASE_FACT-250),
   annotations(KubernetesParser.Kube.Service-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-251),
   type(KubernetesParser.Kube.Service-1) == NodePort)

Or(Not(BASE_FACT-252),
   selector(KubernetesParser.Kube.Service-1) ==
   Reasoner.Kube.Labels-20)

Or(Not(BASE_FACT-253),
   value(Reasoner.Kube.Labels-20, app) == node)

Or(Not(BASE_FACT-254),
   has_key(Reasoner.Kube.Labels-20, app))

Or(Not(BASE_FACT-255),
   ports(KubernetesParser.Kube.Service-1,
         KubernetesParser.Kube.Service.ServicePort-1))

Or(Not(BASE_FACT-256),
   labels(HelmParser.Kube.StatefulSet-0) ==
   Reasoner.Kube.Labels-21)

Or(Not(BASE_FACT-257),
   value(Reasoner.Kube.Labels-21, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-258),
   value(Reasoner.Kube.Labels-21, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-259),
   value(Reasoner.Kube.Labels-21,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-260),
   value(Reasoner.Kube.Labels-21,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-261),
   value(Reasoner.Kube.Labels-21,
         app.kubernetes.io/component) ==
   master)

Or(Not(BASE_FACT-262),
   has_key(Reasoner.Kube.Labels-21, app.kubernetes.io/name))

Or(Not(BASE_FACT-263),
   has_key(Reasoner.Kube.Labels-21, helm.sh/chart))

Or(Not(BASE_FACT-264),
   has_key(Reasoner.Kube.Labels-21,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-265),
   has_key(Reasoner.Kube.Labels-21,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-266),
   has_key(Reasoner.Kube.Labels-21,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-267),
   annotations(HelmParser.Kube.StatefulSet-0) == COMMON.NONE)

Or(Not(BASE_FACT-268),
   match_labels(HelmParser.Kube.StatefulSet-0) ==
   Reasoner.Kube.Labels-22)

Or(Not(BASE_FACT-269),
   value(Reasoner.Kube.Labels-22, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-270),
   value(Reasoner.Kube.Labels-22,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-271),
   value(Reasoner.Kube.Labels-22,
         app.kubernetes.io/component) ==
   master)

Or(Not(BASE_FACT-272),
   has_key(Reasoner.Kube.Labels-22, app.kubernetes.io/name))

Or(Not(BASE_FACT-273),
   has_key(Reasoner.Kube.Labels-22,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-274),
   has_key(Reasoner.Kube.Labels-22,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-275),
   annotations(HelmParser.Kube.Pod.Template-0) ==
   Reasoner.Kube.Annotations-4)

Or(Not(BASE_FACT-276),
   value(Reasoner.Kube.Annotations-4, checksum/configmap) ==
   442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634)

Or(Not(BASE_FACT-277),
   value(Reasoner.Kube.Annotations-4, checksum/health) ==
   44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6)

Or(Not(BASE_FACT-278),
   value(Reasoner.Kube.Annotations-4, checksum/scripts) ==
   f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9)

Or(Not(BASE_FACT-279),
   value(Reasoner.Kube.Annotations-4, checksum/secret) ==
   ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86)

Or(Not(BASE_FACT-280),
   has_key(Reasoner.Kube.Annotations-4, checksum/configmap))

Or(Not(BASE_FACT-281),
   has_key(Reasoner.Kube.Annotations-4, checksum/health))

Or(Not(BASE_FACT-282),
   has_key(Reasoner.Kube.Annotations-4, checksum/scripts))

Or(Not(BASE_FACT-283),
   has_key(Reasoner.Kube.Annotations-4, checksum/secret))

Or(Not(BASE_FACT-284),
   labels(HelmParser.Kube.Pod.Template-0) ==
   Reasoner.Kube.Labels-24)

Or(Not(BASE_FACT-285),
   value(Reasoner.Kube.Labels-24, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-286),
   value(Reasoner.Kube.Labels-24, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-287),
   value(Reasoner.Kube.Labels-24,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-288),
   value(Reasoner.Kube.Labels-24,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-289),
   value(Reasoner.Kube.Labels-24,
         app.kubernetes.io/component) ==
   master)

Or(Not(BASE_FACT-290),
   has_key(Reasoner.Kube.Labels-24, app.kubernetes.io/name))

Or(Not(BASE_FACT-291),
   has_key(Reasoner.Kube.Labels-24, helm.sh/chart))

Or(Not(BASE_FACT-292),
   has_key(Reasoner.Kube.Labels-24,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-293),
   has_key(Reasoner.Kube.Labels-24,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-294),
   has_key(Reasoner.Kube.Labels-24,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-295),
   template(HelmParser.Kube.StatefulSet-0) ==
   HelmParser.Kube.Pod.Template-0)

Or(Not(BASE_FACT-296),
   annotations(HelmParser.Kube.Pod.Template-0) ==
   Reasoner.Kube.Annotations-4)

Or(Not(BASE_FACT-297),
   value(Reasoner.Kube.Annotations-4, checksum/configmap) ==
   442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634)

Or(Not(BASE_FACT-298),
   value(Reasoner.Kube.Annotations-4, checksum/health) ==
   44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6)

Or(Not(BASE_FACT-299),
   value(Reasoner.Kube.Annotations-4, checksum/scripts) ==
   f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9)

Or(Not(BASE_FACT-300),
   value(Reasoner.Kube.Annotations-4, checksum/secret) ==
   ec5782aa2c2a32b47c1260c39980563a7d808d9c4ed4cdab14bcc2b59b89eb86)

Or(Not(BASE_FACT-301),
   has_key(Reasoner.Kube.Annotations-4, checksum/configmap))

Or(Not(BASE_FACT-302),
   has_key(Reasoner.Kube.Annotations-4, checksum/health))

Or(Not(BASE_FACT-303),
   has_key(Reasoner.Kube.Annotations-4, checksum/scripts))

Or(Not(BASE_FACT-304),
   has_key(Reasoner.Kube.Annotations-4, checksum/secret))

Or(Not(BASE_FACT-305),
   labels(HelmParser.Kube.Pod.Template-0) ==
   Reasoner.Kube.Labels-24)

Or(Not(BASE_FACT-306),
   value(Reasoner.Kube.Labels-24, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-307),
   value(Reasoner.Kube.Labels-24, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-308),
   value(Reasoner.Kube.Labels-24,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-309),
   value(Reasoner.Kube.Labels-24,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-310),
   value(Reasoner.Kube.Labels-24,
         app.kubernetes.io/component) ==
   master)

Or(Not(BASE_FACT-311),
   has_key(Reasoner.Kube.Labels-24, app.kubernetes.io/name))

Or(Not(BASE_FACT-312),
   has_key(Reasoner.Kube.Labels-24, helm.sh/chart))

Or(Not(BASE_FACT-313),
   has_key(Reasoner.Kube.Labels-24,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-314),
   has_key(Reasoner.Kube.Labels-24,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-315),
   has_key(Reasoner.Kube.Labels-24,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-316),
   env_vars_config(HelmParser.Kube.Container-0) ==
   Reasoner.Kube.Container.EnvVarsConfig-3)

Or(Not(BASE_FACT-317),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         BITNAMI_DEBUG) ==
   {"value": "false"})

Or(Not(BASE_FACT-318),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_REPLICATION_MODE) ==
   {"value": "master"})

Or(Not(BASE_FACT-319),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         ALLOW_EMPTY_PASSWORD) ==
   {"value": "no"})

Or(Not(BASE_FACT-320),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(BASE_FACT-321),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_TLS_ENABLED) ==
   {"value": "no"})

Or(Not(BASE_FACT-322),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-323),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           BITNAMI_DEBUG))

Or(Not(BASE_FACT-324),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_REPLICATION_MODE))

Or(Not(BASE_FACT-325),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           ALLOW_EMPTY_PASSWORD))

Or(Not(BASE_FACT-326),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_PASSWORD))

Or(Not(BASE_FACT-327),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_TLS_ENABLED))

Or(Not(BASE_FACT-328),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_PORT))

Or(Not(BASE_FACT-329),
   command(HelmParser.Kube.Container-0) == ["/bin/bash"])

Or(Not(BASE_FACT-330),
   containers(HelmParser.Kube.Pod.Template-0,
              HelmParser.Kube.Container-0))

Or(Not(BASE_FACT-331),
   env_vars_config(HelmParser.Kube.Container-0) ==
   Reasoner.Kube.Container.EnvVarsConfig-3)

Or(Not(BASE_FACT-332),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         BITNAMI_DEBUG) ==
   {"value": "false"})

Or(Not(BASE_FACT-333),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_REPLICATION_MODE) ==
   {"value": "master"})

Or(Not(BASE_FACT-334),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         ALLOW_EMPTY_PASSWORD) ==
   {"value": "no"})

Or(Not(BASE_FACT-335),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(BASE_FACT-336),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_TLS_ENABLED) ==
   {"value": "no"})

Or(Not(BASE_FACT-337),
   value(Reasoner.Kube.Container.EnvVarsConfig-3,
         REDIS_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-338),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           BITNAMI_DEBUG))

Or(Not(BASE_FACT-339),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_REPLICATION_MODE))

Or(Not(BASE_FACT-340),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           ALLOW_EMPTY_PASSWORD))

Or(Not(BASE_FACT-341),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_PASSWORD))

Or(Not(BASE_FACT-342),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_TLS_ENABLED))

Or(Not(BASE_FACT-343),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-3,
           REDIS_PORT))

Or(Not(BASE_FACT-344),
   command(HelmParser.Kube.Container-0) == ["/bin/bash"])

Or(Not(BASE_FACT-345),
   ports(HelmParser.Kube.Container-0,
         HelmParser.Kube.Container.PortItem-0))

Or(Not(BASE_FACT-346),
   labels(HelmParser.Kube.StatefulSet-1) ==
   Reasoner.Kube.Labels-25)

Or(Not(BASE_FACT-347),
   value(Reasoner.Kube.Labels-25, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-348),
   value(Reasoner.Kube.Labels-25, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-349),
   value(Reasoner.Kube.Labels-25,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-350),
   value(Reasoner.Kube.Labels-25,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-351),
   value(Reasoner.Kube.Labels-25,
         app.kubernetes.io/component) ==
   replica)

Or(Not(BASE_FACT-352),
   has_key(Reasoner.Kube.Labels-25, app.kubernetes.io/name))

Or(Not(BASE_FACT-353),
   has_key(Reasoner.Kube.Labels-25, helm.sh/chart))

Or(Not(BASE_FACT-354),
   has_key(Reasoner.Kube.Labels-25,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-355),
   has_key(Reasoner.Kube.Labels-25,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-356),
   has_key(Reasoner.Kube.Labels-25,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-357),
   annotations(HelmParser.Kube.StatefulSet-1) == COMMON.NONE)

Or(Not(BASE_FACT-358),
   match_labels(HelmParser.Kube.StatefulSet-1) ==
   Reasoner.Kube.Labels-26)

Or(Not(BASE_FACT-359),
   value(Reasoner.Kube.Labels-26, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-360),
   value(Reasoner.Kube.Labels-26,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-361),
   value(Reasoner.Kube.Labels-26,
         app.kubernetes.io/component) ==
   replica)

Or(Not(BASE_FACT-362),
   has_key(Reasoner.Kube.Labels-26, app.kubernetes.io/name))

Or(Not(BASE_FACT-363),
   has_key(Reasoner.Kube.Labels-26,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-364),
   has_key(Reasoner.Kube.Labels-26,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-365),
   annotations(HelmParser.Kube.Pod.Template-1) ==
   Reasoner.Kube.Annotations-5)

Or(Not(BASE_FACT-366),
   value(Reasoner.Kube.Annotations-5, checksum/configmap) ==
   442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634)

Or(Not(BASE_FACT-367),
   value(Reasoner.Kube.Annotations-5, checksum/health) ==
   44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6)

Or(Not(BASE_FACT-368),
   value(Reasoner.Kube.Annotations-5, checksum/scripts) ==
   f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9)

Or(Not(BASE_FACT-369),
   value(Reasoner.Kube.Annotations-5, checksum/secret) ==
   58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58)

Or(Not(BASE_FACT-370),
   has_key(Reasoner.Kube.Annotations-5, checksum/configmap))

Or(Not(BASE_FACT-371),
   has_key(Reasoner.Kube.Annotations-5, checksum/health))

Or(Not(BASE_FACT-372),
   has_key(Reasoner.Kube.Annotations-5, checksum/scripts))

Or(Not(BASE_FACT-373),
   has_key(Reasoner.Kube.Annotations-5, checksum/secret))

Or(Not(BASE_FACT-374),
   labels(HelmParser.Kube.Pod.Template-1) ==
   Reasoner.Kube.Labels-28)

Or(Not(BASE_FACT-375),
   value(Reasoner.Kube.Labels-28, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-376),
   value(Reasoner.Kube.Labels-28, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-377),
   value(Reasoner.Kube.Labels-28,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-378),
   value(Reasoner.Kube.Labels-28,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-379),
   value(Reasoner.Kube.Labels-28,
         app.kubernetes.io/component) ==
   replica)

Or(Not(BASE_FACT-380),
   has_key(Reasoner.Kube.Labels-28, app.kubernetes.io/name))

Or(Not(BASE_FACT-381),
   has_key(Reasoner.Kube.Labels-28, helm.sh/chart))

Or(Not(BASE_FACT-382),
   has_key(Reasoner.Kube.Labels-28,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-383),
   has_key(Reasoner.Kube.Labels-28,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-384),
   has_key(Reasoner.Kube.Labels-28,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-385),
   template(HelmParser.Kube.StatefulSet-1) ==
   HelmParser.Kube.Pod.Template-1)

Or(Not(BASE_FACT-386),
   annotations(HelmParser.Kube.Pod.Template-1) ==
   Reasoner.Kube.Annotations-5)

Or(Not(BASE_FACT-387),
   value(Reasoner.Kube.Annotations-5, checksum/configmap) ==
   442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634)

Or(Not(BASE_FACT-388),
   value(Reasoner.Kube.Annotations-5, checksum/health) ==
   44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6)

Or(Not(BASE_FACT-389),
   value(Reasoner.Kube.Annotations-5, checksum/scripts) ==
   f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9)

Or(Not(BASE_FACT-390),
   value(Reasoner.Kube.Annotations-5, checksum/secret) ==
   58872dd4fd1428da8f6cf996a8e11d24b639309b344d99470697ca57d6e6ff58)

Or(Not(BASE_FACT-391),
   has_key(Reasoner.Kube.Annotations-5, checksum/configmap))

Or(Not(BASE_FACT-392),
   has_key(Reasoner.Kube.Annotations-5, checksum/health))

Or(Not(BASE_FACT-393),
   has_key(Reasoner.Kube.Annotations-5, checksum/scripts))

Or(Not(BASE_FACT-394),
   has_key(Reasoner.Kube.Annotations-5, checksum/secret))

Or(Not(BASE_FACT-395),
   labels(HelmParser.Kube.Pod.Template-1) ==
   Reasoner.Kube.Labels-28)

Or(Not(BASE_FACT-396),
   value(Reasoner.Kube.Labels-28, app.kubernetes.io/name) ==
   redis)

Or(Not(BASE_FACT-397),
   value(Reasoner.Kube.Labels-28, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(BASE_FACT-398),
   value(Reasoner.Kube.Labels-28,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(BASE_FACT-399),
   value(Reasoner.Kube.Labels-28,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(BASE_FACT-400),
   value(Reasoner.Kube.Labels-28,
         app.kubernetes.io/component) ==
   replica)

Or(Not(BASE_FACT-401),
   has_key(Reasoner.Kube.Labels-28, app.kubernetes.io/name))

Or(Not(BASE_FACT-402),
   has_key(Reasoner.Kube.Labels-28, helm.sh/chart))

Or(Not(BASE_FACT-403),
   has_key(Reasoner.Kube.Labels-28,
           app.kubernetes.io/instance))

Or(Not(BASE_FACT-404),
   has_key(Reasoner.Kube.Labels-28,
           app.kubernetes.io/managed-by))

Or(Not(BASE_FACT-405),
   has_key(Reasoner.Kube.Labels-28,
           app.kubernetes.io/component))

Or(Not(BASE_FACT-406),
   env_vars_config(HelmParser.Kube.Container-1) ==
   Reasoner.Kube.Container.EnvVarsConfig-4)

Or(Not(BASE_FACT-407),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         BITNAMI_DEBUG) ==
   {"value": "false"})

Or(Not(BASE_FACT-408),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_REPLICATION_MODE) ==
   {"value": "slave"})

Or(Not(BASE_FACT-409),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_MASTER_HOST) ==
   {"value": "redis-master-0.redis-headless.default.svc.cluster.local"})

Or(Not(BASE_FACT-410),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_MASTER_PORT_NUMBER) ==
   {"value": "6379"})

Or(Not(BASE_FACT-411),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         ALLOW_EMPTY_PASSWORD) ==
   {"value": "no"})

Or(Not(BASE_FACT-412),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(BASE_FACT-413),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_MASTER_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(BASE_FACT-414),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_TLS_ENABLED) ==
   {"value": "no"})

Or(Not(BASE_FACT-415),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-416),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           BITNAMI_DEBUG))

Or(Not(BASE_FACT-417),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_REPLICATION_MODE))

Or(Not(BASE_FACT-418),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_MASTER_HOST))

Or(Not(BASE_FACT-419),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_MASTER_PORT_NUMBER))

Or(Not(BASE_FACT-420),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           ALLOW_EMPTY_PASSWORD))

Or(Not(BASE_FACT-421),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_PASSWORD))

Or(Not(BASE_FACT-422),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_MASTER_PASSWORD))

Or(Not(BASE_FACT-423),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_TLS_ENABLED))

Or(Not(BASE_FACT-424),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_PORT))

Or(Not(BASE_FACT-425),
   command(HelmParser.Kube.Container-1) == ["/bin/bash"])

Or(Not(BASE_FACT-426),
   containers(HelmParser.Kube.Pod.Template-1,
              HelmParser.Kube.Container-1))

Or(Not(BASE_FACT-427),
   env_vars_config(HelmParser.Kube.Container-1) ==
   Reasoner.Kube.Container.EnvVarsConfig-4)

Or(Not(BASE_FACT-428),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         BITNAMI_DEBUG) ==
   {"value": "false"})

Or(Not(BASE_FACT-429),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_REPLICATION_MODE) ==
   {"value": "slave"})

Or(Not(BASE_FACT-430),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_MASTER_HOST) ==
   {"value": "redis-master-0.redis-headless.default.svc.cluster.local"})

Or(Not(BASE_FACT-431),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_MASTER_PORT_NUMBER) ==
   {"value": "6379"})

Or(Not(BASE_FACT-432),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         ALLOW_EMPTY_PASSWORD) ==
   {"value": "no"})

Or(Not(BASE_FACT-433),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(BASE_FACT-434),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_MASTER_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(BASE_FACT-435),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_TLS_ENABLED) ==
   {"value": "no"})

Or(Not(BASE_FACT-436),
   value(Reasoner.Kube.Container.EnvVarsConfig-4,
         REDIS_PORT) ==
   {"value": "6379"})

Or(Not(BASE_FACT-437),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           BITNAMI_DEBUG))

Or(Not(BASE_FACT-438),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_REPLICATION_MODE))

Or(Not(BASE_FACT-439),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_MASTER_HOST))

Or(Not(BASE_FACT-440),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_MASTER_PORT_NUMBER))

Or(Not(BASE_FACT-441),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           ALLOW_EMPTY_PASSWORD))

Or(Not(BASE_FACT-442),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_PASSWORD))

Or(Not(BASE_FACT-443),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_MASTER_PASSWORD))

Or(Not(BASE_FACT-444),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_TLS_ENABLED))

Or(Not(BASE_FACT-445),
   has_key(Reasoner.Kube.Container.EnvVarsConfig-4,
           REDIS_PORT))

Or(Not(BASE_FACT-446),
   command(HelmParser.Kube.Container-1) == ["/bin/bash"])

Or(Not(BASE_FACT-447),
   ports(HelmParser.Kube.Container-1,
         HelmParser.Kube.Container.PortItem-1))

Or(Not(STRUCT_FACT-2),
   name(KubernetesParser.Container.Image-0) ==
   getdtk/graph-example1-app)

Or(Not(STRUCT_FACT-3),
   tag(KubernetesParser.Container.Image-0) == latest)

Or(Not(STRUCT_FACT-4),
   source_type(KubernetesParser.Container.Image-0) ==
   file_based)

Or(Not(STRUCT_FACT-5),
   name(KubernetesParser.App-0) == example-node-app)

Or(Not(STRUCT_FACT-6),
   source_type(KubernetesParser.App-0) == file_based)

Or(Not(STRUCT_FACT-7),
   name(KubernetesParser.App-1) == redis)

Or(Not(STRUCT_FACT-8),
   source_type(KubernetesParser.App-1) == file_based)

Or(Not(STRUCT_FACT-9),
   source_type(redis-4.4.0) == file_based)

Or(Not(STRUCT_FACT-10),
   release_name(redis-14.4.0/redis) == redis)

Or(Not(STRUCT_FACT-11),
   source_type(redis-14.4.0/redis) == file_based)

Or(Not(STRUCT_FACT-12),
   path(HelmParser.Helm.Template-0) ==
   redis/templates/networkpolicy.yaml)

Or(Not(STRUCT_FACT-13),
   source_type(HelmParser.Helm.Template-0) == file_based)

Or(Not(STRUCT_FACT-14),
   exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0) ==
   cast_to_builtin_sort_bool(default_manifest_value(networkPolicy.enabled)))

Or(Not(TYPE_CAST_FACT-2),
   cast_to_builtin_sort_bool(default_manifest_value(networkPolicy.enabled)) ==
   False)

Or(Not(STRUCT_FACT-15),
   source_type(HelmParser.Helm.Template.Condition-0) ==
   file_based)

Or(Not(STRUCT_FACT-16),
   path(HelmParser.Helm.Template-1) ==
   redis/templates/servicemonitor.yaml)

Or(Not(STRUCT_FACT-17),
   source_type(HelmParser.Helm.Template-1) == file_based)

Or(Not(STRUCT_FACT-18),
   exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1) ==
   __and(default_manifest_value(metrics.isEnabled),
         __not(default_manifest_value(metrics.useServiceMonitor))))

Or(Not(STRUCT_FACT-19),
   source_type(HelmParser.Helm.Template.Condition-1) ==
   file_based)

Or(Not(STRUCT_FACT-20),
   name(KubernetesParser.Kube.Deployment-0) == node-app2-dep)

Or(Not(STRUCT_FACT-21),
   api_version(KubernetesParser.Kube.Deployment-0) ==
   apps/v1)

Or(Not(STRUCT_FACT-22),
   source_type(KubernetesParser.Kube.Deployment-0) ==
   file_based)

Or(Not(STRUCT_FACT-23),
   name(KubernetesParser.Kube.Pod.Template-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-24),
   namespace(KubernetesParser.Kube.Pod.Template-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-25),
   source_type(KubernetesParser.Kube.Pod.Template-0) ==
   file_based)

Or(Not(STRUCT_FACT-26),
   image(KubernetesParser.Kube.Container-0) ==
   getdtk/graph-example2-app)

Or(Not(STRUCT_FACT-27),
   image_pull_policy(KubernetesParser.Kube.Container-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-28),
   name(KubernetesParser.Kube.Container-0) ==
   Concat(Unit(110),
          Concat(Unit(111), Concat(Unit(100), Unit(101)))))

Or(Not(STRUCT_FACT-29),
   args(KubernetesParser.Kube.Container-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-30),
   source_type(KubernetesParser.Kube.Container-0) ==
   file_based)

Or(Not(STRUCT_FACT-31),
   container_port(KubernetesParser.Kube.Container.PortItem-0) ==
   8080)

Or(Not(STRUCT_FACT-32),
   host_ip(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-33),
   host_port(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-34),
   name(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-35),
   protocol(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-36),
   source_type(KubernetesParser.Kube.Container.PortItem-0) ==
   file_based)

Or(Not(STRUCT_FACT-37),
   name(KubernetesParser.Kube.Deployment-1) == node-app1-dep)

Or(Not(STRUCT_FACT-38),
   api_version(KubernetesParser.Kube.Deployment-1) ==
   apps/v1)

Or(Not(STRUCT_FACT-39),
   source_type(KubernetesParser.Kube.Deployment-1) ==
   file_based)

Or(Not(STRUCT_FACT-40),
   name(KubernetesParser.Kube.Pod.Template-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-41),
   namespace(KubernetesParser.Kube.Pod.Template-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-42),
   source_type(KubernetesParser.Kube.Pod.Template-1) ==
   file_based)

Or(Not(STRUCT_FACT-43),
   image(KubernetesParser.Kube.Container-1) ==
   getdtk/graph-example1-app)

Or(Not(STRUCT_FACT-44),
   image_pull_policy(KubernetesParser.Kube.Container-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-45),
   name(KubernetesParser.Kube.Container-1) ==
   Concat(Unit(110),
          Concat(Unit(111), Concat(Unit(100), Unit(101)))))

Or(Not(STRUCT_FACT-46),
   args(KubernetesParser.Kube.Container-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-47),
   source_type(KubernetesParser.Kube.Container-1) ==
   file_based)

Or(Not(STRUCT_FACT-48),
   container_port(KubernetesParser.Kube.Container.PortItem-1) ==
   8080)

Or(Not(STRUCT_FACT-49),
   host_ip(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-50),
   host_port(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-51),
   name(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-52),
   protocol(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-53),
   source_type(KubernetesParser.Kube.Container.PortItem-1) ==
   file_based)

Or(Not(STRUCT_FACT-54),
   name(KubernetesParser.Kube.Ingress-0) ==
   ingress1-matches-app1-with-default)

Or(Not(STRUCT_FACT-55),
   namespace(KubernetesParser.Kube.Ingress-0) == default)

Or(Not(STRUCT_FACT-56),
   ingress_class_name(KubernetesParser.Kube.Ingress-0) ==
   nginx)

Or(Not(STRUCT_FACT-57),
   api_version(KubernetesParser.Kube.Ingress-0) ==
   networking.k8s.io/v1)

Or(Not(STRUCT_FACT-58),
   source_type(KubernetesParser.Kube.Ingress-0) ==
   file_based)

Or(Not(STRUCT_FACT-59),
   host(KubernetesParser.Kube.Ingress.Rule-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-60),
   source_type(KubernetesParser.Kube.Ingress.Rule-0) ==
   file_based)

Or(Not(STRUCT_FACT-61),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   /testpath)

Or(Not(STRUCT_FACT-62),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   Prefix)

Or(Not(PARENT_FACT-2),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0)

Or(Not(PARENT_FACT-3),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-0,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(STRUCT_FACT-63),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   file_based)

Or(Not(PARENT_FACT-4),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
   KubernetesParser.Kube.Ingress.Backend.Service-1)

Or(Not(PARENT_FACT-5),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-64),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
   file_based)

Or(Not(STRUCT_FACT-65),
   name(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
   node-app1-svc)

Or(Not(PARENT_FACT-6),
   port(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-1)

Or(Not(PARENT_FACT-7),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
       KubernetesParser.Kube.Ingress.Backend.Service-1,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-66),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
   file_based)

Or(Not(STRUCT_FACT-67),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-68),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
   80)

Or(Not(STRUCT_FACT-69),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
   file_based)

Or(Not(PARENT_FACT-8),
   service(KubernetesParser.Kube.Ingress.DefaultBackend-0) ==
   KubernetesParser.Kube.Ingress.Backend.Service-0)

Or(Not(PARENT_FACT-9),
   And(_parent.Kube.Ingress.DefaultBackend(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
       KubernetesParser.Kube.Ingress.DefaultBackend-0,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
       Kube.Ingress.DefaultBackend))

Or(Not(STRUCT_FACT-70),
   source_type(KubernetesParser.Kube.Ingress.DefaultBackend-0) ==
   file_based)

Or(Not(STRUCT_FACT-71),
   name(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
   nginx-ingress-controller)

Or(Not(PARENT_FACT-10),
   port(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-0)

Or(Not(PARENT_FACT-11),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
       KubernetesParser.Kube.Ingress.Backend.Service-0,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-72),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
   file_based)

Or(Not(STRUCT_FACT-73),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-74),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
   80)

Or(Not(STRUCT_FACT-75),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
   file_based)

Or(Not(STRUCT_FACT-76),
   name(KubernetesParser.Kube.Ingress-1) ==
   ingress2-simple-service-bad-default)

Or(Not(STRUCT_FACT-77),
   ingress_class_name(KubernetesParser.Kube.Ingress-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-78),
   api_version(KubernetesParser.Kube.Ingress-1) ==
   networking.k8s.io/v1)

Or(Not(STRUCT_FACT-79),
   source_type(KubernetesParser.Kube.Ingress-1) ==
   file_based)

Or(Not(STRUCT_FACT-80),
   host(KubernetesParser.Kube.Ingress.Rule-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-81),
   source_type(KubernetesParser.Kube.Ingress.Rule-1) ==
   file_based)

Or(Not(STRUCT_FACT-82),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   /testpath)

Or(Not(STRUCT_FACT-83),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   Prefix)

Or(Not(PARENT_FACT-12),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1)

Or(Not(PARENT_FACT-13),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-1,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(STRUCT_FACT-84),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   file_based)

Or(Not(PARENT_FACT-14),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
   KubernetesParser.Kube.Ingress.Backend.Service-3)

Or(Not(PARENT_FACT-15),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-85),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
   file_based)

Or(Not(STRUCT_FACT-86),
   name(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
   node-app-svc)

Or(Not(PARENT_FACT-16),
   port(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-3)

Or(Not(PARENT_FACT-17),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
       KubernetesParser.Kube.Ingress.Backend.Service-3,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-87),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
   file_based)

Or(Not(STRUCT_FACT-88),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-89),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
   80)

Or(Not(STRUCT_FACT-90),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
   file_based)

Or(Not(PARENT_FACT-18),
   service(KubernetesParser.Kube.Ingress.DefaultBackend-1) ==
   KubernetesParser.Kube.Ingress.Backend.Service-2)

Or(Not(PARENT_FACT-19),
   And(_parent.Kube.Ingress.DefaultBackend(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
       KubernetesParser.Kube.Ingress.DefaultBackend-1,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
       Kube.Ingress.DefaultBackend))

Or(Not(STRUCT_FACT-91),
   source_type(KubernetesParser.Kube.Ingress.DefaultBackend-1) ==
   file_based)

Or(Not(STRUCT_FACT-92),
   name(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
   test2)

Or(Not(PARENT_FACT-20),
   port(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-2)

Or(Not(PARENT_FACT-21),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
       KubernetesParser.Kube.Ingress.Backend.Service-2,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-93),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
   file_based)

Or(Not(STRUCT_FACT-94),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-95),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
   80)

Or(Not(STRUCT_FACT-96),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
   file_based)

Or(Not(STRUCT_FACT-97),
   name(KubernetesParser.Kube.Ingress-2) ==
   ingress3-simple-fanout)

Or(Not(STRUCT_FACT-98),
   ingress_class_name(KubernetesParser.Kube.Ingress-2) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-99),
   api_version(KubernetesParser.Kube.Ingress-2) ==
   networking.k8s.io/v1)

Or(Not(STRUCT_FACT-100),
   source_type(KubernetesParser.Kube.Ingress-2) ==
   file_based)

Or(Not(STRUCT_FACT-101),
   host(KubernetesParser.Kube.Ingress.Rule-2) == foo.bar.com)

Or(Not(STRUCT_FACT-102),
   source_type(KubernetesParser.Kube.Ingress.Rule-2) ==
   file_based)

Or(Not(STRUCT_FACT-103),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   /app1)

Or(Not(STRUCT_FACT-104),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   Prefix)

Or(Not(PARENT_FACT-22),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2)

Or(Not(PARENT_FACT-23),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-2,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(STRUCT_FACT-105),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   file_based)

Or(Not(PARENT_FACT-24),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
   KubernetesParser.Kube.Ingress.Backend.Service-4)

Or(Not(PARENT_FACT-25),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-106),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
   file_based)

Or(Not(STRUCT_FACT-107),
   name(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
   node-app1-svc)

Or(Not(PARENT_FACT-26),
   port(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-4)

Or(Not(PARENT_FACT-27),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
       KubernetesParser.Kube.Ingress.Backend.Service-4,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-108),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
   file_based)

Or(Not(STRUCT_FACT-109),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-110),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
   80)

Or(Not(STRUCT_FACT-111),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
   file_based)

Or(Not(STRUCT_FACT-112),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   /app2)

Or(Not(STRUCT_FACT-113),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   Prefix)

Or(Not(PARENT_FACT-28),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3)

Or(Not(PARENT_FACT-29),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-3,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(STRUCT_FACT-114),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   file_based)

Or(Not(PARENT_FACT-30),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
   KubernetesParser.Kube.Ingress.Backend.Service-5)

Or(Not(PARENT_FACT-31),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-115),
   source_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
   file_based)

Or(Not(STRUCT_FACT-116),
   name(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
   node-app2-svc)

Or(Not(PARENT_FACT-32),
   port(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-5)

Or(Not(PARENT_FACT-33),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
       KubernetesParser.Kube.Ingress.Backend.Service-5,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-117),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
   file_based)

Or(Not(STRUCT_FACT-118),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-119),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
   80)

Or(Not(STRUCT_FACT-120),
   source_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
   file_based)

Or(Not(STRUCT_FACT-121),
   _exists(HelmParser.Kube.NetworkPolicy-0) ==
   cast_to_builtin_sort_bool(exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0)))

Or(Not(TYPE_CAST_FACT-3),
   cast_to_builtin_sort_bool(exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0)) ==
   False)

Or(Not(STRUCT_FACT-122),
   source_type(HelmParser.Kube.NetworkPolicy-0) ==
   file_based)

Or(Not(STRUCT_FACT-123),
   name(HelmParser.Kube.Secret-0) == redis)

Or(Not(STRUCT_FACT-124),
   namespace(HelmParser.Kube.Secret-0) == default)

Or(Not(STRUCT_FACT-125),
   api_version(HelmParser.Kube.Secret-0) == v1)

Or(Not(STRUCT_FACT-126),
   source_type(HelmParser.Kube.Secret-0) == file_based)

Or(Not(STRUCT_FACT-127),
   name(KubernetesParser.Kube.Secret-0) == node-app2-secret)

Or(Not(STRUCT_FACT-128),
   api_version(KubernetesParser.Kube.Secret-0) == v1)

Or(Not(STRUCT_FACT-129),
   source_type(KubernetesParser.Kube.Secret-0) == file_based)

Or(Not(STRUCT_FACT-130),
   name(KubernetesParser.Kube.Secret-1) == node-app1-secret)

Or(Not(STRUCT_FACT-131),
   api_version(KubernetesParser.Kube.Secret-1) == v1)

Or(Not(STRUCT_FACT-132),
   source_type(KubernetesParser.Kube.Secret-1) == file_based)

Or(Not(STRUCT_FACT-133),
   _exists(HelmParser.Kube.ServiceMonitor-0) ==
   cast_to_builtin_sort_bool(exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1)))

Or(Not(TYPE_CAST_FACT-4),
   cast_to_builtin_sort_bool(exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1)) ==
   False)

Or(Not(STRUCT_FACT-134),
   source_type(HelmParser.Kube.ServiceMonitor-0) ==
   file_based)

Or(Not(STRUCT_FACT-135),
   name(HelmParser.Kube.Service-0) == redis-headless)

Or(Not(STRUCT_FACT-136),
   namespace(HelmParser.Kube.Service-0) == default)

Or(Not(STRUCT_FACT-137),
   api_version(HelmParser.Kube.Service-0) == v1)

Or(Not(STRUCT_FACT-138),
   source_type(HelmParser.Kube.Service-0) == file_based)

Or(Not(STRUCT_FACT-139),
   name(HelmParser.Kube.Service.ServicePort-0) ==
   Concat(Unit(116),
          Concat(Unit(99),
                 Concat(Unit(112),
                        Concat(Unit(45),
                               Concat(Unit(114),
                                      Concat(Unit(101),
                                        Concat(Unit(100),
                                        Concat(Unit(105),
                                        Unit(115))))))))))

Or(Not(STRUCT_FACT-140),
   node_port(HelmParser.Kube.Service.ServicePort-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-141),
   port(HelmParser.Kube.Service.ServicePort-0) == 6379)

Or(Not(STRUCT_FACT-142),
   target_port(HelmParser.Kube.Service.ServicePort-0) ==
   redis)

Or(Not(STRUCT_FACT-143),
   source_type(HelmParser.Kube.Service.ServicePort-0) ==
   file_based)

Or(Not(STRUCT_FACT-144),
   name(HelmParser.Kube.Service-1) == redis-master)

Or(Not(STRUCT_FACT-145),
   namespace(HelmParser.Kube.Service-1) == default)

Or(Not(STRUCT_FACT-146),
   api_version(HelmParser.Kube.Service-1) == v1)

Or(Not(STRUCT_FACT-147),
   source_type(HelmParser.Kube.Service-1) == file_based)

Or(Not(STRUCT_FACT-148),
   name(HelmParser.Kube.Service.ServicePort-1) ==
   Concat(Unit(116),
          Concat(Unit(99),
                 Concat(Unit(112),
                        Concat(Unit(45),
                               Concat(Unit(114),
                                      Concat(Unit(101),
                                        Concat(Unit(100),
                                        Concat(Unit(105),
                                        Unit(115))))))))))

Or(Not(STRUCT_FACT-149),
   node_port(HelmParser.Kube.Service.ServicePort-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-150),
   port(HelmParser.Kube.Service.ServicePort-1) == 6379)

Or(Not(STRUCT_FACT-151),
   target_port(HelmParser.Kube.Service.ServicePort-1) ==
   redis)

Or(Not(STRUCT_FACT-152),
   source_type(HelmParser.Kube.Service.ServicePort-1) ==
   file_based)

Or(Not(STRUCT_FACT-153),
   name(HelmParser.Kube.Service-2) == redis-replicas)

Or(Not(STRUCT_FACT-154),
   namespace(HelmParser.Kube.Service-2) == default)

Or(Not(STRUCT_FACT-155),
   api_version(HelmParser.Kube.Service-2) == v1)

Or(Not(STRUCT_FACT-156),
   source_type(HelmParser.Kube.Service-2) == file_based)

Or(Not(STRUCT_FACT-157),
   name(HelmParser.Kube.Service.ServicePort-2) ==
   Concat(Unit(116),
          Concat(Unit(99),
                 Concat(Unit(112),
                        Concat(Unit(45),
                               Concat(Unit(114),
                                      Concat(Unit(101),
                                        Concat(Unit(100),
                                        Concat(Unit(105),
                                        Unit(115))))))))))

Or(Not(STRUCT_FACT-158),
   node_port(HelmParser.Kube.Service.ServicePort-2) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-159),
   port(HelmParser.Kube.Service.ServicePort-2) == 6379)

Or(Not(STRUCT_FACT-160),
   target_port(HelmParser.Kube.Service.ServicePort-2) ==
   redis)

Or(Not(STRUCT_FACT-161),
   source_type(HelmParser.Kube.Service.ServicePort-2) ==
   file_based)

Or(Not(STRUCT_FACT-162),
   name(KubernetesParser.Kube.Service-0) == node-app2-svc)

Or(Not(STRUCT_FACT-163),
   api_version(KubernetesParser.Kube.Service-0) == v1)

Or(Not(STRUCT_FACT-164),
   source_type(KubernetesParser.Kube.Service-0) ==
   file_based)

Or(Not(STRUCT_FACT-165),
   name(KubernetesParser.Kube.Service.ServicePort-0) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-166),
   node_port(KubernetesParser.Kube.Service.ServicePort-0) ==
   31112)

Or(Not(STRUCT_FACT-167),
   port(KubernetesParser.Kube.Service.ServicePort-0) == 8080)

Or(Not(STRUCT_FACT-168),
   target_port(KubernetesParser.Kube.Service.ServicePort-0) ==
   8081)

Or(Not(STRUCT_FACT-169),
   source_type(KubernetesParser.Kube.Service.ServicePort-0) ==
   file_based)

Or(Not(STRUCT_FACT-170),
   name(KubernetesParser.Kube.Service-1) == node-app1-svc)

Or(Not(STRUCT_FACT-171),
   api_version(KubernetesParser.Kube.Service-1) == v1)

Or(Not(STRUCT_FACT-172),
   source_type(KubernetesParser.Kube.Service-1) ==
   file_based)

Or(Not(STRUCT_FACT-173),
   name(KubernetesParser.Kube.Service.ServicePort-1) ==
   Concat(Unit(67),
          Concat(Unit(79),
                 Concat(Unit(77),
                        Concat(Unit(77),
                               Concat(Unit(79),
                                      Concat(Unit(78),
                                        Concat(Unit(46),
                                        Concat(Unit(78),
                                        Concat(Unit(79),
                                        Concat(Unit(78),
                                        Unit(69))))))))))))

Or(Not(STRUCT_FACT-174),
   node_port(KubernetesParser.Kube.Service.ServicePort-1) ==
   31112)

Or(Not(STRUCT_FACT-175),
   port(KubernetesParser.Kube.Service.ServicePort-1) == 8080)

Or(Not(STRUCT_FACT-176),
   target_port(KubernetesParser.Kube.Service.ServicePort-1) ==
   8081)

Or(Not(STRUCT_FACT-177),
   source_type(KubernetesParser.Kube.Service.ServicePort-1) ==
   file_based)

Or(Not(STRUCT_FACT-178),
   name(HelmParser.Kube.StatefulSet-0) == redis-master)

Or(Not(STRUCT_FACT-179),
   namespace(HelmParser.Kube.StatefulSet-0) == default)

Or(Not(STRUCT_FACT-180),
   replicas(HelmParser.Kube.StatefulSet-0) == 1)

Or(Not(STRUCT_FACT-181),
   service_name(HelmParser.Kube.StatefulSet-0) ==
   redis-headless)

Or(Not(STRUCT_FACT-182),
   api_version(HelmParser.Kube.StatefulSet-0) == apps/v1)

Or(Not(STRUCT_FACT-183),
   source_type(HelmParser.Kube.StatefulSet-0) == file_based)

Or(Not(STRUCT_FACT-184),
   name(HelmParser.Kube.Pod.Template-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-185),
   namespace(HelmParser.Kube.Pod.Template-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-186),
   source_type(HelmParser.Kube.Pod.Template-0) == file_based)

Or(Not(STRUCT_FACT-187),
   image(HelmParser.Kube.Container-0) ==
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))))

Or(Not(CONCAT_FACT-2),
   __concat(docker.io/,
            helm_name_value_info(redis,
                                 image.repository,
                                 bitnami/redis),
            :,
            helm_name_value_info(redis,
                                 image.tag,
                                 6.2.4-debian-10-r13)) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(TYPE_CAST_FACT-5),
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(STRUCT_FACT-188),
   image_pull_policy(HelmParser.Kube.Container-0) ==
   IfNotPresent)

Or(Not(STRUCT_FACT-189),
   name(HelmParser.Kube.Container-0) ==
   Concat(Unit(114),
          Concat(Unit(101),
                 Concat(Unit(100),
                        Concat(Unit(105), Unit(115))))))

Or(Not(STRUCT_FACT-190),
   args(HelmParser.Kube.Container-0) ==
   ["-c", "/opt/bitnami/scripts/start-scripts/start-master.sh"])

Or(Not(STRUCT_FACT-191),
   source_type(HelmParser.Kube.Container-0) == file_based)

Or(Not(STRUCT_FACT-192),
   container_port(HelmParser.Kube.Container.PortItem-0) ==
   6379)

Or(Not(STRUCT_FACT-193),
   host_ip(HelmParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-194),
   host_port(HelmParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-195),
   name(HelmParser.Kube.Container.PortItem-0) == redis)

Or(Not(STRUCT_FACT-196),
   protocol(HelmParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-197),
   source_type(HelmParser.Kube.Container.PortItem-0) ==
   file_based)

Or(Not(STRUCT_FACT-198),
   name(HelmParser.Kube.StatefulSet-1) == redis-replicas)

Or(Not(STRUCT_FACT-199),
   namespace(HelmParser.Kube.StatefulSet-1) == default)

Or(Not(STRUCT_FACT-200),
   replicas(HelmParser.Kube.StatefulSet-1) == 3)

Or(Not(STRUCT_FACT-201),
   service_name(HelmParser.Kube.StatefulSet-1) ==
   redis-headless)

Or(Not(STRUCT_FACT-202),
   api_version(HelmParser.Kube.StatefulSet-1) == apps/v1)

Or(Not(STRUCT_FACT-203),
   source_type(HelmParser.Kube.StatefulSet-1) == file_based)

Or(Not(STRUCT_FACT-204),
   name(HelmParser.Kube.Pod.Template-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-205),
   namespace(HelmParser.Kube.Pod.Template-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-206),
   source_type(HelmParser.Kube.Pod.Template-1) == file_based)

Or(Not(STRUCT_FACT-207),
   image(HelmParser.Kube.Container-1) ==
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))))

Or(Not(CONCAT_FACT-3),
   __concat(docker.io/,
            helm_name_value_info(redis,
                                 image.repository,
                                 bitnami/redis),
            :,
            helm_name_value_info(redis,
                                 image.tag,
                                 6.2.4-debian-10-r13)) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(TYPE_CAST_FACT-6),
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(STRUCT_FACT-208),
   image_pull_policy(HelmParser.Kube.Container-1) ==
   IfNotPresent)

Or(Not(STRUCT_FACT-209),
   name(HelmParser.Kube.Container-1) ==
   Concat(Unit(114),
          Concat(Unit(101),
                 Concat(Unit(100),
                        Concat(Unit(105), Unit(115))))))

Or(Not(STRUCT_FACT-210),
   args(HelmParser.Kube.Container-1) ==
   ["-c", "/opt/bitnami/scripts/start-scripts/start-replica.sh"])

Or(Not(STRUCT_FACT-211),
   source_type(HelmParser.Kube.Container-1) == file_based)

Or(Not(STRUCT_FACT-212),
   container_port(HelmParser.Kube.Container.PortItem-1) ==
   6379)

Or(Not(STRUCT_FACT-213),
   host_ip(HelmParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-214),
   host_port(HelmParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-215),
   name(HelmParser.Kube.Container.PortItem-1) == redis)

Or(Not(STRUCT_FACT-216),
   protocol(HelmParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-217),
   source_type(HelmParser.Kube.Container.PortItem-1) ==
   file_based)

Or(Not(STRUCT_FACT-218),
   Source.FilePath(HelmParser.Source.FilePath-0) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests)

Or(Not(STRUCT_FACT-219),
   source_type(HelmParser.Source.FilePath-0) == file_based)

Or(Not(STRUCT_FACT-220),
   Source.FilePath(HelmParser.Source.FilePath-1) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/redis/templates/networkpolicy.yaml)

Or(Not(STRUCT_FACT-221),
   source_type(HelmParser.Source.FilePath-1) == file_based)

Or(Not(STRUCT_FACT-222),
   Source.FilePath(HelmParser.Source.FilePath-2) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/redis/templates/servicemonitor.yaml)

Or(Not(STRUCT_FACT-223),
   source_type(HelmParser.Source.FilePath-2) == file_based)

Or(Not(STRUCT_FACT-224),
   url(Source.GitRepo-0) ==
   https://github.com/dtk/ai-reasoner.git)

Or(Not(STRUCT_FACT-225), public(Source.GitRepo-0) == True)

Or(Not(STRUCT_FACT-226),
   provider(Source.GitRepo-0) == github.com)

Or(Not(STRUCT_FACT-227),
   branch(Source.GitRepo-0) == rich_sprint44)

Or(Not(STRUCT_FACT-228),
   source_type(Source.GitRepo-0) == file_based)

Or(Not(STRUCT_FACT-229),
   path(Source.FilePath-0) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/app/app.yaml)

Or(Not(STRUCT_FACT-230),
   source_type(Source.FilePath-0) == file_based)

Or(Not(STRUCT_FACT-231),
   path(Source.FilePath-1) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/app/redis.yaml)

Or(Not(STRUCT_FACT-232),
   source_type(Source.FilePath-1) == file_based)

Or(Not(STRUCT_FACT-233),
   path(Source.FilePath-2) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app2.yaml)

Or(Not(STRUCT_FACT-234),
   source_type(Source.FilePath-2) == file_based)

Or(Not(STRUCT_FACT-235),
   path(Source.FilePath-3) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app1.yaml)

Or(Not(STRUCT_FACT-236),
   source_type(Source.FilePath-3) == file_based)

Or(Not(STRUCT_FACT-237),
   path(Source.FilePath-4) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/ingress/ingress-examples.yaml)

Or(Not(STRUCT_FACT-238),
   source_type(Source.FilePath-4) == file_based)

Or(Not(STRUCT_FACT-239),
   path(Source.FilePath-5) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/secret.yaml)

Or(Not(STRUCT_FACT-240),
   source_type(Source.FilePath-5) == file_based)

Or(Not(STRUCT_FACT-241),
   path(Source.FilePath-6) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/configmap.yaml)

Or(Not(STRUCT_FACT-242),
   source_type(Source.FilePath-6) == file_based)

Or(Not(STRUCT_FACT-243),
   path(Source.FilePath-7) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/health-configmap.yaml)

Or(Not(STRUCT_FACT-244),
   source_type(Source.FilePath-7) == file_based)

Or(Not(STRUCT_FACT-245),
   path(Source.FilePath-8) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/scripts-configmap.yaml)

Or(Not(STRUCT_FACT-246),
   source_type(Source.FilePath-8) == file_based)

Or(Not(STRUCT_FACT-247),
   path(Source.FilePath-9) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/headless-svc.yaml)

Or(Not(STRUCT_FACT-248),
   source_type(Source.FilePath-9) == file_based)

Or(Not(STRUCT_FACT-249),
   path(Source.FilePath-10) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/service.yaml)

Or(Not(STRUCT_FACT-250),
   source_type(Source.FilePath-10) == file_based)

Or(Not(STRUCT_FACT-251),
   path(Source.FilePath-11) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/service.yaml)

Or(Not(STRUCT_FACT-252),
   source_type(Source.FilePath-11) == file_based)

Or(Not(STRUCT_FACT-253),
   path(Source.FilePath-12) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/statefulset.yaml)

Or(Not(STRUCT_FACT-254),
   source_type(Source.FilePath-12) == file_based)

Or(Not(STRUCT_FACT-255),
   path(Source.FilePath-13) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/statefulset.yaml)

Or(Not(STRUCT_FACT-256),
   source_type(Source.FilePath-13) == file_based)

Or(Not(STRUCT_FACT-257),
   path(Source.FilePath-14) ==
   /root/ai_reasoner_parser/examples/kube-ingress-no-controllers/manifests/kube/app/app1-image.yaml)

Or(Not(STRUCT_FACT-258),
   source_type(Source.FilePath-14) == file_based)


