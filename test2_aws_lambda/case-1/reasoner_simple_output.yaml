type: Config.ManifestSet.Instantiation
logical_id: Config.ManifestSet.Instantiation-0
attributes:
  namespace:
    type: Kube.Namespace

---
type: Container.Image
logical_id: docker.io/bitnami/redis:6.2.4-debian-10-r13
attributes:
  name:
    value: docker.io/bitnami/redis
    type: Container.Image.Name
  tag:
    value: 6.2.4-debian-10-r13
    type: Container.Tag.Name

---
type: Container.Image
logical_id: getdtk/graph-example1-app:latest
attributes:
  name:
    value: getdtk/graph-example1-app
    type: Container.Image.Name
  tag:
    value: latest
    type: Container.Tag.Name

---
type: Container.Image
logical_id: getdtk/graph-example2-app:latest
attributes:
  name:
    value: getdtk/graph-example2-app
    type: Container.Image.Name
  tag:
    value: latest
    type: Container.Tag.Name

---
type: Kube.Deployment
logical_id: KubernetesParser.Kube.Deployment-0
components:
- type: Kube.Pod.Template
  logical_id: KubernetesParser.Kube.Pod.Template-0
  components:
  - type: Kube.Container
    logical_id: KubernetesParser.Kube.Container-0
    links:
      container_image:
      - Container.Image[getdtk/graph-example2-app:latest]

---
type: Kube.Deployment
logical_id: KubernetesParser.Kube.Deployment-1
components:
- type: Kube.Pod.Template
  logical_id: KubernetesParser.Kube.Pod.Template-1
  components:
  - type: Kube.Container
    logical_id: KubernetesParser.Kube.Container-1
    links:
      container_image:
      - Container.Image[getdtk/graph-example1-app:latest]

---
type: Kube.Ingress.Class
logical_id: ShadowIngressClass

---
type: Kube.Ingress
logical_id: KubernetesParser.Kube.Ingress-0
attributes:
  rewrite_target:
    value:
    - /
    type:
      array: Config.Value
links:
  ingress_class:
  - Kube.Ingress.Class[ShadowIngressClass]
components:
- type: Kube.Ingress.DefaultBackend
  logical_id: KubernetesParser.Kube.Ingress.DefaultBackend-0
  fqdn: default_backend

---
type: Kube.Ingress
logical_id: KubernetesParser.Kube.Ingress-1
attributes:
  rewrite_target:
    value:
    - /
    type:
      array: Config.Value
links:
  ingress_class:
  - Kube.Ingress.Class[ShadowIngressClass]
components:
- type: Kube.Ingress.DefaultBackend
  logical_id: KubernetesParser.Kube.Ingress.DefaultBackend-1
  fqdn: default_backend

---
type: Kube.Ingress
logical_id: KubernetesParser.Kube.Ingress-2
attributes:
  rewrite_target:
    value:
    - /
    type:
      array: Config.Value
links:
  ingress_class:
  - Kube.Ingress.Class[ShadowIngressClass]
components:
- type: Kube.Ingress.DefaultBackend
  logical_id: KubernetesParser.Kube.Ingress-2/default_backend
  fqdn: default_backend

---
type: Kube.Service
logical_id: HelmParser.Kube.Service-0
attributes:
  name:
    value: redis-headless
    type: Kube.Name
  namespace:
    value: default
    type: Kube.Namespace
  managed_by_helm:
    value: 'True'
    type: bool

---
type: Kube.Service
logical_id: HelmParser.Kube.Service-1
attributes:
  name:
    value: redis-master
    type: Kube.Name
  namespace:
    value: default
    type: Kube.Namespace
  managed_by_helm:
    value: 'True'
    type: bool

---
type: Kube.Service
logical_id: HelmParser.Kube.Service-2
attributes:
  name:
    value: redis-replicas
    type: Kube.Name
  namespace:
    value: default
    type: Kube.Namespace
  managed_by_helm:
    value: 'True'
    type: bool

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress-2/default_backend/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  namespace:
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress.DefaultBackend-0/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  name:
    value: nginx-ingress-controller
    type: Kube.Name
  namespace:
    value: default
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress.DefaultBackend-1/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  name:
    value: test2
    type: Kube.Name
  namespace:
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  name:
    value: node-app1-svc
    type: Kube.Name
  namespace:
    value: or(namespace,default)
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  name:
    value: node-app-svc
    type: Kube.Name
  namespace:
    value: or(namespace,default)
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  name:
    value: node-app1-svc
    type: Kube.Name
  namespace:
    value: or(namespace,default)
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3/kube_service
attributes:
  _shadow_component:
    value: 'True'
    type: bool
  name:
    value: node-app2-svc
    type: Kube.Name
  namespace:
    value: or(namespace,default)
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Service-0
attributes:
  name:
    value: node-app2-svc
    type: Kube.Name
  namespace:
    type: Kube.Namespace

---
type: Kube.Service
logical_id: KubernetesParser.Kube.Service-1
attributes:
  name:
    value: node-app1-svc
    type: Kube.Name
  namespace:
    type: Kube.Namespace

---
type: Kube.StatefulSet
logical_id: HelmParser.Kube.StatefulSet-0
attributes:
  managed_by_helm:
    value: 'True'
    type: bool
  stable_network_id_url:
    value: redis-master-0.redis-headless.default.?
    type: string
links:
  namespace_match:
  - Kube.Service[HelmParser.Kube.Service-2]
  - Kube.Service[HelmParser.Kube.Service-0]
  - Kube.Service[HelmParser.Kube.Service-1]
  service_label_match:
  - Kube.Service[HelmParser.Kube.Service-0]
  - Kube.Service[HelmParser.Kube.Service-1]
components:
- type: Kube.StableNetworkId
  logical_id: HelmParser.Kube.StatefulSet-0/stable_network_id
  fqdn: stable_network_id

---
type: Kube.StatefulSet
logical_id: HelmParser.Kube.StatefulSet-1
attributes:
  managed_by_helm:
    value: 'True'
    type: bool
  stable_network_id_url:
    value: redis-replicas-{0..2}.redis-headless.default.?
    type: string
links:
  namespace_match:
  - Kube.Service[HelmParser.Kube.Service-2]
  - Kube.Service[HelmParser.Kube.Service-0]
  - Kube.Service[HelmParser.Kube.Service-1]
  service_label_match:
  - Kube.Service[HelmParser.Kube.Service-2]
  - Kube.Service[HelmParser.Kube.Service-0]
components:
- type: Kube.StableNetworkId
  logical_id: HelmParser.Kube.StatefulSet-1/stable_network_id
  fqdn: stable_network_id

---
type: Source.Reasoner
logical_id: Source.Reasoner-0
attributes:
  name:
    value: ai-reasoner
    type: string

---
