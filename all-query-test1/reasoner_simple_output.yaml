type: Config.ManifestSet.Instantiation
logical_id: Config.ManifestSet.Instantiation-0
links:
  kube_cluster:
  - KubeCluster[KubeCluster-0]

---
type: Kube.NamespaceSecrets
logical_id: default
links:
  member:
  - Kube.Secret[KubeParser.Kube.Secret-1]

---
type: Kube.Secret
logical_id: KubeParser.Kube.Secret-1
components:
- type: Kube.Secret.Keys
  logical_id: KubeParser.Kube.Secret-1/keys
  fqdn: keys

---
type: Kube.Service
logical_id: KubeParser.Kube.Service-1
components:
- type: Kube.Service.ServicePort
  logical_id: KubeParser.Kube.Service.ServicePort-1
  fqdn: ports
  attributes:
    debug_cross_namespace_endpoints_user:
      value:
      - release-name-redis-headless
      type:
        array: Kube.Name

---
type: Kube.Service
logical_id: KubeParser.Kube.Service-2
components:
- type: Kube.Service.ServicePort
  logical_id: KubeParser.Kube.Service.ServicePort-2
  fqdn: ports
  attributes:
    debug_cross_namespace_endpoints_user:
      value:
      - release-name-redis-master
      type:
        array: Kube.Name

---
type: Kube.Service
logical_id: KubeParser.Kube.Service-3
components:
- type: Kube.Service.ServicePort
  logical_id: KubeParser.Kube.Service.ServicePort-3
  fqdn: ports
  attributes:
    debug_cross_namespace_endpoints_user:
      value:
      - release-name-redis-replicas
      type:
        array: Kube.Name

---
type: KubeCluster
logical_id: KubeCluster-0
attributes:
  cluster_domain_name:
    type: KubeCluster.DomainName

---
type: Secret.Store
logical_id: default
links:
  kube_secret:
  - Kube.Secret[KubeParser.Kube.Secret-1]
components:
- type: Secret
  logical_id: default/member[0]
  fqdn: member[0]

---
type: Source.Reasoner
logical_id: Source.Reasoner-0
attributes:
  name:
    value: ai-reasoner
    type: string

---
