[
  {
    "type": "App",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "App",
      "name": "example-node-app",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.App-0",
    "attributes": [
      {
        "image_name": {
          "type": "Container.Image.Name",
          "value": "COMMON.NONE"
        }
      },
      {
        "image_tag": {
          "type": "Container.Tag.Name",
          "value": "COMMON.NONE"
        }
      },
      {
        "name": {
          "value": "example-node-app",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      }
    ],
    "components": [
      {
        "type": "App.Attribute.Mapping",
        "fqdn": {
          "internal_path": "attribute_mappings[0]",
          "external_path": "spec/attribute_mappings[0]"
        },
        "logical_id": "KubernetesParser.App.Attribute.Mapping-0",
        "link_name": "attribute_mappings",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "http_endpoint",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "semantic_type": {
              "value": "Service.Endpoint",
              "type": "BuiltinSort.SemanticType"
            }
          },
          {
            "value": {
              "value": "{\"protocol\": {\"_value\": \"http\", \"_semantic_type\": \"Network.Protocol\"}, \"port\": {\"_value\": {\"_env\": \"PORT\"}, \"_semantic_type\": \"Network.Port\", \"_default\": \"8080\"}, \"service_type\": {\"_value\": \"MyApp\", \"_semantic_type\": \"Service.Type\"}}",
              "type": "Any.Json"
            }
          }
        ]
      },
      {
        "type": "App.Attribute.Mapping",
        "fqdn": {
          "internal_path": "attribute_mappings[1]",
          "external_path": "spec/attribute_mappings[1]"
        },
        "logical_id": "KubernetesParser.App.Attribute.Mapping-1",
        "link_name": "attribute_mappings",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "node_env",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "semantic_type": {
              "value": "COMMON.NONE",
              "type": "BuiltinSort.SemanticType"
            }
          },
          {
            "value": {
              "value": "{\"_value\": \"_env NODE_ENV\", \"_type\": \"string\"}",
              "type": "Any.Json"
            }
          }
        ]
      },
      {
        "type": "App.Attribute.Mapping",
        "fqdn": {
          "internal_path": "attribute_mappings[2]",
          "external_path": "spec/attribute_mappings[2]"
        },
        "logical_id": "KubernetesParser.App.Attribute.Mapping-2",
        "link_name": "attribute_mappings",
        "array_index": 2,
        "attributes": [
          {
            "name": {
              "value": "redis_endpoint",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "semantic_type": {
              "value": "Service.Conn",
              "type": "BuiltinSort.SemanticType"
            }
          },
          {
            "value": {
              "value": "{\"service_type\": {\"_value\": \"Redis\", \"_semantic_type\": \"Service.Type\"}, \"protocol\": {\"_value\": \"tcp\", \"_semantic_type\": \"Network.Protocol\"}, \"port\": {\"_semantic_type\": \"Network.Port\", \"_value\": {\"_env\": \"DB_PORT\"}, \"_default\": \"6379\"}, \"host_address\": {\"_semantic_type\": \"Network.Address\", \"_value\": {\"_env\": \"DB_HOST\"}}, \"password\": {\"_value\": {\"_env\": \"DB_PASSWORD\"}, \"_secret\": \"true\"}}",
              "type": "Any.Json"
            }
          }
        ]
      },
      {
        "type": "App.Attribute.Mapping",
        "fqdn": {
          "internal_path": "attribute_mappings[3]",
          "external_path": "spec/attribute_mappings[3]"
        },
        "logical_id": "KubernetesParser.App.Attribute.Mapping-3",
        "link_name": "attribute_mappings",
        "array_index": 3,
        "attributes": [
          {
            "name": {
              "value": "config_var_example",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "semantic_type": {
              "value": "Foo.Type",
              "type": "BuiltinSort.SemanticType"
            }
          },
          {
            "value": {
              "value": "{\"_config_attr_ref\": {\"_file_ref\": \"etc_app_conf\", \"_path\": \"top_key/bar\"}}",
              "type": "Any.Json"
            }
          }
        ]
      },
      {
        "type": "App.Service.Conn",
        "fqdn": {
          "internal_path": "service_conns[0]",
          "external_path": "spec/service_conns[0]"
        },
        "logical_id": "KubernetesParser.App.Service.Conn-0",
        "link_name": "service_conns",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "redis_endpoint",
              "type": "Service.Conn.Name"
            }
          },
          {
            "service_type": {
              "value": "Redis",
              "type": "Service.Type"
            }
          }
        ]
      },
      {
        "type": "App.Service.Endpoint",
        "fqdn": {
          "internal_path": "service_endpoints[0]",
          "external_path": "spec/service_endpoints[0]"
        },
        "logical_id": "KubernetesParser.App.Service.Endpoint-0",
        "link_name": "service_endpoints",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "http_endpoint",
              "type": "Service.Endpoint.Name"
            }
          },
          {
            "service_type": {
              "value": "MyApp",
              "type": "Service.Type"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-0"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "App",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "App",
      "name": "redis",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.App-1",
    "attributes": [
      {
        "image_name": {
          "type": "Container.Image.Name",
          "value": "COMMON.NONE"
        }
      },
      {
        "image_tag": {
          "type": "Container.Tag.Name",
          "value": "COMMON.NONE"
        }
      },
      {
        "name": {
          "value": "redis",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      }
    ],
    "components": [
      {
        "type": "App.Attribute.Mapping",
        "fqdn": {
          "internal_path": "attribute_mappings[0]",
          "external_path": "spec/attribute_mappings[0]"
        },
        "logical_id": "KubernetesParser.App.Attribute.Mapping-4",
        "link_name": "attribute_mappings",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "endpoint",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "semantic_type": {
              "value": "Service.Endpoint",
              "type": "BuiltinSort.SemanticType"
            }
          },
          {
            "value": {
              "value": "{\"protocol\": {\"_value\": \"http\", \"_semantic_type\": \"Network.Protocol\"}, \"port\": {\"_value\": {\"_env\": \"REDIS_PORT\"}, \"_semantic_type\": \"Network.Port\", \"_default\": \"6379\"}, \"service_type\": {\"_value\": \"Redis\", \"_semantic_type\": \"Service.Type\"}}",
              "type": "Any.Json"
            }
          }
        ]
      },
      {
        "type": "App.Attribute.Mapping",
        "fqdn": {
          "internal_path": "attribute_mappings[1]",
          "external_path": "spec/attribute_mappings[1]"
        },
        "logical_id": "KubernetesParser.App.Attribute.Mapping-5",
        "link_name": "attribute_mappings",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "replication_mode",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "semantic_type": {
              "value": "COMMON.NONE",
              "type": "BuiltinSort.SemanticType"
            }
          },
          {
            "value": {
              "value": "{\"_value\": \"_env REDIS_REPLICATION_MODE\", \"_type\": \"string\"}",
              "type": "Any.Json"
            }
          }
        ]
      },
      {
        "type": "App.Service.Endpoint",
        "fqdn": {
          "internal_path": "service_endpoints[0]",
          "external_path": "spec/service_endpoints[0]"
        },
        "logical_id": "KubernetesParser.App.Service.Endpoint-1",
        "link_name": "service_endpoints",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "endpoint",
              "type": "Service.Endpoint.Name"
            }
          },
          {
            "service_type": {
              "value": "Redis",
              "type": "Service.Type"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-1"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Config.ManifestSet.Instantiation",
    "logical_id": "Config.ManifestSet.Instantiation-0",
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "HelmParser.Source.FilePath-0"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Helm.Chart",
    "top_component_ref": {
      "resource_type": "helm_chart",
      "sort_name": "Helm.Chart",
      "name": "redis-4.4.0"
    },
    "logical_id": "redis-4.4.0",
    "attributes": [
      {
        "name": {
          "value": "redis",
          "type": "Helm.Name"
        }
      },
      {
        "name_with_version": {
          "value": "redis-4.4.0",
          "type": "Config.Value"
        }
      }
    ],
    "components": [
      {
        "type": "Helm.Template",
        "fqdn": {
          "internal_path": "condition",
          "external_path": "condition"
        },
        "logical_id": "HelmParser.Helm.Template-0",
        "link_name": "condition",
        "attributes": [
          {
            "path": {
              "value": "redis/templates/networkpolicy.yaml",
              "type": "Any.String"
            }
          }
        ],
        "components": [
          {
            "type": "Helm.Template.Condition",
            "fqdn": {
              "internal_path": "condition/condition",
              "external_path": "condition/condition"
            },
            "logical_id": "HelmParser.Helm.Template.Condition-0",
            "link_name": "condition",
            "attributes": [
              {
                "exists_kube_networkpolicy": {
                  "type": "BuiltinSort.Bool",
                  "function": {
                    "encoding": "tuple_encoding",
                    "encoded_function": {
                      "_fn": [
                        "default_manifest_value",
                        "Config.Value",
                        {
                          "_const": [
                            "networkPolicy.enabled",
                            "Config.Name"
                          ]
                        },
                        {
                          "_range_value": false
                        }
                      ]
                    },
                    "user_friendly_form": "default_manifest_value(networkPolicy.enabled)"
                  }
                }
              }
            ]
          }
        ],
        "links": [
          {
            "link_name": "_source",
            "endpoint_type": "Source.FilePath",
            "endpoints": [
              {
                "component_ref": {
                  "logical_id": "HelmParser.Source.FilePath-1"
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Helm.Template",
        "fqdn": {
          "internal_path": "condition",
          "external_path": "condition"
        },
        "logical_id": "HelmParser.Helm.Template-1",
        "link_name": "condition",
        "attributes": [
          {
            "path": {
              "value": "redis/templates/servicemonitor.yaml",
              "type": "Any.String"
            }
          }
        ],
        "components": [
          {
            "type": "Helm.Template.Condition",
            "fqdn": {
              "internal_path": "condition/condition",
              "external_path": "condition/condition"
            },
            "logical_id": "HelmParser.Helm.Template.Condition-1",
            "link_name": "condition",
            "attributes": [
              {
                "exists_kube_servicemonitor": {
                  "type": "BuiltinSort.Bool",
                  "function": {
                    "encoding": "tuple_encoding",
                    "encoded_function": {
                      "_fn": [
                        "__and",
                        "BuiltinSort.Bool",
                        {
                          "_fn": [
                            "default_manifest_value",
                            "Config.Value",
                            {
                              "_const": [
                                "metrics.isEnabled",
                                "Config.Name"
                              ]
                            },
                            {
                              "_range_value": false
                            }
                          ]
                        },
                        {
                          "_fn": [
                            "__not",
                            "BuiltinSort.Bool",
                            {
                              "_fn": [
                                "default_manifest_value",
                                "Config.Value",
                                {
                                  "_const": [
                                    "metrics.useServiceMonitor",
                                    "Config.Name"
                                  ]
                                },
                                {
                                  "_range_value": false
                                }
                              ]
                            },
                            {
                              "_range_value": true
                            }
                          ]
                        },
                        {
                          "_range_value": false
                        }
                      ]
                    },
                    "user_friendly_form": "__and(default_manifest_value(metrics.isEnabled), __not(default_manifest_value(metrics.useServiceMonitor)))"
                  }
                }
              }
            ]
          }
        ],
        "links": [
          {
            "link_name": "_source",
            "endpoint_type": "Source.FilePath",
            "endpoints": [
              {
                "component_ref": {
                  "logical_id": "HelmParser.Source.FilePath-2"
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Helm.Chart.Release",
        "fqdn": {
          "internal_path": "release[0]",
          "external_path": "release[0]"
        },
        "logical_id": "redis-4.4.0/redis",
        "link_name": "release",
        "attributes": [
          {
            "manifest_set": {
              "value": "Config.ManifestSet.Instantiation-0",
              "type": "Config.ManifestSet.Instantiation"
            }
          },
          {
            "release_name": {
              "value": "redis",
              "type": "Config.Value"
            }
          }
        ],
        "components": [
          {
            "type": "Helm.Chart.Release.Values",
            "fqdn": {
              "internal_path": "release[0]/values",
              "external_path": "release[0]/values"
            },
            "logical_id": "HelmParser.Helm.Chart.Release.Values-0",
            "link_name": "values",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "image.debug": {
                  "value": false,
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "image.pullPolicy": {
                  "value": "IfNotPresent",
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "image.pullSecrets": {
                  "value": [],
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "image.repository": {
                  "value": "bitnami/redis",
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "image.tag": {
                  "value": "6.2.4-debian-10-r13",
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "master.containerPort": {
                  "value": 6379,
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "master.service.port": {
                  "value": 6379,
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "master.service.type": {
                  "value": "ExternalName",
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "metrics.isEnabled": {
                  "value": false,
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "metrics.useServiceMonitor": {
                  "value": false,
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              },
              {
                "networkPolicy.enabled": {
                  "value": false,
                  "type": {
                    "indexed": {
                      "index_type": "Config.Name",
                      "value_type": "Config.Value"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "HelmParser.Source.FilePath-0"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.ConfigMap",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.ConfigMap",
      "name": "redis-configuration",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.ConfigMap-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "binary_data": {
          "type": "Kube.ConfigMap.BinaryData",
          "value": "COMMON.NONE"
        }
      },
      {
        "immutable": {
          "value": "COMMON.NONE",
          "type": "Kube.ConfigMap.Immutable"
        }
      },
      {
        "name": {
          "value": "redis-configuration",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-1",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-6"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.ConfigMap",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.ConfigMap",
      "name": "redis-health",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.ConfigMap-1",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "binary_data": {
          "type": "Kube.ConfigMap.BinaryData",
          "value": "COMMON.NONE"
        }
      },
      {
        "immutable": {
          "value": "COMMON.NONE",
          "type": "Kube.ConfigMap.Immutable"
        }
      },
      {
        "name": {
          "value": "redis-health",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-2",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-7"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.ConfigMap",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.ConfigMap",
      "name": "redis-scripts",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.ConfigMap-2",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "binary_data": {
          "type": "Kube.ConfigMap.BinaryData",
          "value": "COMMON.NONE"
        }
      },
      {
        "immutable": {
          "value": "COMMON.NONE",
          "type": "Kube.ConfigMap.Immutable"
        }
      },
      {
        "name": {
          "value": "redis-scripts",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-3",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-8"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Deployment",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Deployment",
      "name": "node-app2-dep",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Deployment-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "apps/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "min_ready_seconds": {
          "value": "COMMON.NONE",
          "type": "Kube.Min.Ready.Seconds"
        }
      },
      {
        "name": {
          "value": "node-app2-dep",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      },
      {
        "paused": {
          "value": "COMMON.NONE",
          "type": "Kube.Deployment.Paused"
        }
      },
      {
        "progress_deadline_seconds": {
          "value": "COMMON.NONE",
          "type": "Kube.Progress.Deadline.Seconds"
        }
      },
      {
        "replicas": {
          "value": "1",
          "type": "Kube.Replicas"
        }
      },
      {
        "revision_history_limit": {
          "value": "COMMON.NONE",
          "type": "Kube.Revision.History.Limit"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "KubernetesParser.Kube.Labels-1",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app": {
              "value": "node"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[0]",
          "external_path": "spec/selector/match_labels[0]"
        },
        "logical_id": "KubernetesParser.Kube.Selector-1",
        "link_name": "match_labels",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "node-app2",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Deployment.Strategy",
        "fqdn": {
          "internal_path": "strategy",
          "external_path": "spec/strategy"
        },
        "logical_id": "KubernetesParser.Kube.Deployment.Strategy-0",
        "link_name": "strategy",
        "attributes": [
          {
            "type": {
              "value": "RollingUpdate",
              "type": "BuiltinSort.Z3String"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Deployment.Strategy.Rolling.Update",
            "fqdn": {
              "internal_path": "strategy/rolling_update",
              "external_path": "spec/strategy/rolling_update"
            },
            "logical_id": "KubernetesParser.Kube.Deployment.Strategy.Rolling.Update-0",
            "link_name": "rolling_update",
            "attributes": [
              {
                "max_surge": {
                  "value": "1",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "max_unavailable": {
                  "value": "0",
                  "type": "BuiltinSort.Z3String"
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.Pod.Template",
        "fqdn": {
          "internal_path": "template",
          "external_path": "spec/template"
        },
        "logical_id": "KubernetesParser.Kube.Pod.Template-0",
        "link_name": "template",
        "attributes": [
          {
            "affinity": {
              "type": "Kube.Affinity",
              "value": "COMMON.NONE"
            }
          },
          {
            "annotations": {
              "type": "Kube.Annotations",
              "value": "COMMON.NONE"
            }
          },
          {
            "name": {
              "value": "COMMON.NONE",
              "type": "Kube.Name"
            }
          },
          {
            "namespace": {
              "value": "COMMON.NONE",
              "type": "Kube.Namespace"
            }
          },
          {
            "node_name": {
              "value": "COMMON.NONE",
              "type": "Kube.Node.Name"
            }
          },
          {
            "node_selector": {
              "type": "Kube.Node.Selector",
              "value": "COMMON.NONE"
            }
          },
          {
            "restart_policy": {
              "value": "COMMON.NONE",
              "type": "Kube.Restart.Policy"
            }
          },
          {
            "security_context": {
              "type": "Kube.Pod.SecurityContext",
              "value": "COMMON.NONE"
            }
          },
          {
            "service_account_name": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.Account.Name"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Container",
            "fqdn": {
              "internal_path": "template/containers[0]",
              "external_path": "spec/template/spec/containers[0]"
            },
            "logical_id": "KubernetesParser.Kube.Container-0",
            "link_name": "containers",
            "array_index": 0,
            "attributes": [
              {
                "args": {
                  "value": "COMMON.NONE",
                  "type": "Any.Json"
                }
              },
              {
                "command": {
                  "type": "Any.Json",
                  "value": "COMMON.NONE"
                }
              },
              {
                "image": {
                  "value": "getdtk/graph-example2-app",
                  "type": "Kube.Container.ImageRef"
                }
              },
              {
                "image_pull_policy": {
                  "value": "COMMON.NONE",
                  "type": "Kube.Container.ImagePullPolicy"
                }
              },
              {
                "lifecycle": {
                  "type": "Kube.Container.Lifecycle",
                  "value": "COMMON.NONE"
                }
              },
              {
                "liveness_probe": {
                  "type": "Kube.Container.LivenessProbe",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "node",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "readiness_probe": {
                  "type": "Kube.Container.ReadinessProbe",
                  "value": "COMMON.NONE"
                }
              },
              {
                "security_context": {
                  "type": "Kube.Container.SecurityContext",
                  "value": "COMMON.NONE"
                }
              },
              {
                "startup_probe": {
                  "type": "Kube.Container.StartupProbe",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Container.EnvVarsConfig",
                "fqdn": {
                  "internal_path": "template/containers[0]/env_vars_config",
                  "external_path": "spec/template/spec/containers[0]/env"
                },
                "logical_id": "KubernetesParser.Kube.Container.EnvVarsConfig-0",
                "link_name": "env_vars_config",
                "attributes_type": {
                  "indexed": {
                    "index_type": "Kube.Container.EnvVarName",
                    "value_type": "Kube.Container.EnvVarConfig"
                  }
                },
                "attributes": [
                  {
                    "DB_HOST": {
                      "value": {
                        "value": "my-release-redis-master"
                      }
                    }
                  },
                  {
                    "DB_PASSWORD": {
                      "value": {
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "node-app2-secret",
                            "key": "db_password"
                          }
                        }
                      }
                    }
                  },
                  {
                    "DB_PORT": {
                      "value": {
                        "value": "6379"
                      }
                    }
                  },
                  {
                    "NODE_ENV": {
                      "value": {
                        "value": "production"
                      }
                    }
                  },
                  {
                    "PORT": {
                      "value": {
                        "value": "8080"
                      }
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.PortItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/ports[0]",
                  "external_path": "spec/template/spec/containers[0]/ports[0]"
                },
                "logical_id": "KubernetesParser.Kube.Container.PortItem-0",
                "link_name": "ports",
                "array_index": 0,
                "attributes": [
                  {
                    "container_port": {
                      "value": "8080",
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "host_ip": {
                      "value": "COMMON.NONE",
                      "type": "Network.Address"
                    }
                  },
                  {
                    "host_port": {
                      "value": "COMMON.NONE",
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "name": {
                      "value": "COMMON.NONE",
                      "type": "Network.Port"
                    }
                  },
                  {
                    "protocol": {
                      "value": "COMMON.NONE",
                      "type": "Network.Protocol"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.Resources",
                "fqdn": {
                  "internal_path": "template/containers[0]/resources",
                  "external_path": "spec/template/spec/containers[0]/resources"
                },
                "logical_id": "KubernetesParser.Kube.Container.Resources-0",
                "link_name": "resources",
                "components": [
                  {
                    "type": "Kube.Container.ResourcesLimits",
                    "logical_id": "KubernetesParser.Kube.Container.ResourcesLimits-0",
                    "link_name": "limits",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "200m",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "200Mi",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  },
                  {
                    "type": "Kube.Container.ResourcesRequests",
                    "logical_id": "KubernetesParser.Kube.Container.ResourcesRequests-0",
                    "link_name": "requests",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "100m",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "100Mi",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Labels",
            "fqdn": {
              "internal_path": "template/labels",
              "external_path": "spec/template/metadata/labels"
            },
            "logical_id": "KubernetesParser.Kube.Labels-2",
            "link_name": "labels",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "app": {
                  "value": "node-app2"
                }
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-2"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Deployment",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Deployment",
      "name": "node-app1-dep",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Deployment-1",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "apps/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "min_ready_seconds": {
          "value": "COMMON.NONE",
          "type": "Kube.Min.Ready.Seconds"
        }
      },
      {
        "name": {
          "value": "node-app1-dep",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      },
      {
        "paused": {
          "value": "COMMON.NONE",
          "type": "Kube.Deployment.Paused"
        }
      },
      {
        "progress_deadline_seconds": {
          "value": "COMMON.NONE",
          "type": "Kube.Progress.Deadline.Seconds"
        }
      },
      {
        "replicas": {
          "value": "1",
          "type": "Kube.Replicas"
        }
      },
      {
        "revision_history_limit": {
          "value": "COMMON.NONE",
          "type": "Kube.Revision.History.Limit"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "KubernetesParser.Kube.Labels-4",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app": {
              "value": "node-app1"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[0]",
          "external_path": "spec/selector/match_labels[0]"
        },
        "logical_id": "KubernetesParser.Kube.Selector-3",
        "link_name": "match_labels",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "node-app1",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Deployment.Strategy",
        "fqdn": {
          "internal_path": "strategy",
          "external_path": "spec/strategy"
        },
        "logical_id": "KubernetesParser.Kube.Deployment.Strategy-1",
        "link_name": "strategy",
        "attributes": [
          {
            "type": {
              "value": "RollingUpdate",
              "type": "BuiltinSort.Z3String"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Deployment.Strategy.Rolling.Update",
            "fqdn": {
              "internal_path": "strategy/rolling_update",
              "external_path": "spec/strategy/rolling_update"
            },
            "logical_id": "KubernetesParser.Kube.Deployment.Strategy.Rolling.Update-1",
            "link_name": "rolling_update",
            "attributes": [
              {
                "max_surge": {
                  "value": "1",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "max_unavailable": {
                  "value": "0",
                  "type": "BuiltinSort.Z3String"
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.Pod.Template",
        "fqdn": {
          "internal_path": "template",
          "external_path": "spec/template"
        },
        "logical_id": "KubernetesParser.Kube.Pod.Template-1",
        "link_name": "template",
        "attributes": [
          {
            "affinity": {
              "type": "Kube.Affinity",
              "value": "COMMON.NONE"
            }
          },
          {
            "annotations": {
              "type": "Kube.Annotations",
              "value": "COMMON.NONE"
            }
          },
          {
            "name": {
              "value": "COMMON.NONE",
              "type": "Kube.Name"
            }
          },
          {
            "namespace": {
              "value": "COMMON.NONE",
              "type": "Kube.Namespace"
            }
          },
          {
            "node_name": {
              "value": "COMMON.NONE",
              "type": "Kube.Node.Name"
            }
          },
          {
            "node_selector": {
              "type": "Kube.Node.Selector",
              "value": "COMMON.NONE"
            }
          },
          {
            "restart_policy": {
              "value": "COMMON.NONE",
              "type": "Kube.Restart.Policy"
            }
          },
          {
            "security_context": {
              "type": "Kube.Pod.SecurityContext",
              "value": "COMMON.NONE"
            }
          },
          {
            "service_account_name": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.Account.Name"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Container",
            "fqdn": {
              "internal_path": "template/containers[0]",
              "external_path": "spec/template/spec/containers[0]"
            },
            "logical_id": "KubernetesParser.Kube.Container-1",
            "link_name": "containers",
            "array_index": 0,
            "attributes": [
              {
                "args": {
                  "value": "COMMON.NONE",
                  "type": "Any.Json"
                }
              },
              {
                "command": {
                  "type": "Any.Json",
                  "value": "COMMON.NONE"
                }
              },
              {
                "image": {
                  "value": "getdtk/graph-example1-app",
                  "type": "Kube.Container.ImageRef"
                }
              },
              {
                "image_pull_policy": {
                  "value": "COMMON.NONE",
                  "type": "Kube.Container.ImagePullPolicy"
                }
              },
              {
                "lifecycle": {
                  "type": "Kube.Container.Lifecycle",
                  "value": "COMMON.NONE"
                }
              },
              {
                "liveness_probe": {
                  "type": "Kube.Container.LivenessProbe",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "node",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "readiness_probe": {
                  "type": "Kube.Container.ReadinessProbe",
                  "value": "COMMON.NONE"
                }
              },
              {
                "security_context": {
                  "type": "Kube.Container.SecurityContext",
                  "value": "COMMON.NONE"
                }
              },
              {
                "startup_probe": {
                  "type": "Kube.Container.StartupProbe",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Container.EnvVarsConfig",
                "fqdn": {
                  "internal_path": "template/containers[0]/env_vars_config",
                  "external_path": "spec/template/spec/containers[0]/env"
                },
                "logical_id": "KubernetesParser.Kube.Container.EnvVarsConfig-1",
                "link_name": "env_vars_config",
                "attributes_type": {
                  "indexed": {
                    "index_type": "Kube.Container.EnvVarName",
                    "value_type": "Kube.Container.EnvVarConfig"
                  }
                },
                "attributes": [
                  {
                    "DB_HOST": {
                      "value": {
                        "value": "my-release-redis-master"
                      }
                    }
                  },
                  {
                    "DB_PASSWORD": {
                      "value": {
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "node-app1-secret",
                            "key": "db_password"
                          }
                        }
                      }
                    }
                  },
                  {
                    "DB_PORT": {
                      "value": {
                        "value": "6379"
                      }
                    }
                  },
                  {
                    "NODE_ENV": {
                      "value": {
                        "value": "production"
                      }
                    }
                  },
                  {
                    "PORT": {
                      "value": {
                        "value": "8080"
                      }
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.PortItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/ports[0]",
                  "external_path": "spec/template/spec/containers[0]/ports[0]"
                },
                "logical_id": "KubernetesParser.Kube.Container.PortItem-1",
                "link_name": "ports",
                "array_index": 0,
                "attributes": [
                  {
                    "container_port": {
                      "value": "8080",
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "host_ip": {
                      "value": "COMMON.NONE",
                      "type": "Network.Address"
                    }
                  },
                  {
                    "host_port": {
                      "value": "COMMON.NONE",
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "name": {
                      "value": "COMMON.NONE",
                      "type": "Network.Port"
                    }
                  },
                  {
                    "protocol": {
                      "value": "COMMON.NONE",
                      "type": "Network.Protocol"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.Resources",
                "fqdn": {
                  "internal_path": "template/containers[0]/resources",
                  "external_path": "spec/template/spec/containers[0]/resources"
                },
                "logical_id": "KubernetesParser.Kube.Container.Resources-1",
                "link_name": "resources",
                "components": [
                  {
                    "type": "Kube.Container.ResourcesLimits",
                    "logical_id": "KubernetesParser.Kube.Container.ResourcesLimits-1",
                    "link_name": "limits",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "200m",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "200Mi",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  },
                  {
                    "type": "Kube.Container.ResourcesRequests",
                    "logical_id": "KubernetesParser.Kube.Container.ResourcesRequests-1",
                    "link_name": "requests",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "100m",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "100Mi",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Labels",
            "fqdn": {
              "internal_path": "template/labels",
              "external_path": "spec/template/metadata/labels"
            },
            "logical_id": "KubernetesParser.Kube.Labels-5",
            "link_name": "labels",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "app": {
                  "value": "node-app1"
                }
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-3"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Ingress",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Ingress",
      "name": "ingress1-matches-app1-with-default",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Ingress-0",
    "attributes": [
      {
        "api_version": {
          "value": "networking.k8s.io/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "ingress_class_name": {
          "value": "nginx",
          "type": "Kube.Name"
        }
      },
      {
        "labels": {
          "type": "Kube.Labels",
          "value": "COMMON.NONE"
        }
      },
      {
        "name": {
          "value": "ingress1-matches-app1-with-default",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Annotations",
        "fqdn": {
          "internal_path": "annotations",
          "external_path": "metadata/annotations"
        },
        "logical_id": "KubernetesParser.Kube.Annotations-0",
        "link_name": "annotations",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "nginx.ingress.kubernetes.io/rewrite-target": {
              "value": "/"
            }
          }
        ]
      },
      {
        "type": "Kube.Ingress.DefaultBackend",
        "fqdn": {
          "internal_path": "default_backend",
          "external_path": "spec/default_backend"
        },
        "logical_id": "KubernetesParser.Kube.Ingress.DefaultBackend-0",
        "link_name": "default_backend",
        "attributes": [
          {
            "resource": {
              "value": "COMMON.NONE",
              "type": "Kube.Ingress.Backend.Resource"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Ingress.Backend.Service",
            "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service-0",
            "link_name": "service",
            "attributes": [
              {
                "name": {
                  "value": "nginx-ingress-controller",
                  "type": "Kube.Name"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Ingress.Backend.Service.Port",
                "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service.Port-0",
                "link_name": "port",
                "attributes": [
                  {
                    "name": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "number": {
                      "value": "80",
                      "type": "Network.Port"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.Ingress.Rule",
        "fqdn": {
          "internal_path": "rules[0]",
          "external_path": "spec/rules[0]"
        },
        "logical_id": "KubernetesParser.Kube.Ingress.Rule-0",
        "link_name": "rules",
        "array_index": 0,
        "attributes": [
          {
            "host": {
              "value": "COMMON.NONE",
              "type": "Network.Http.HostPattern"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Ingress.Rule.HttpPath",
            "fqdn": {
              "internal_path": "rules[0]/paths[0]",
              "external_path": "spec/rules[0]/http/paths[0]"
            },
            "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath-0",
            "link_name": "paths",
            "array_index": 0,
            "attributes": [
              {
                "path": {
                  "value": "/testpath",
                  "type": "Network.Http.PathPattern"
                }
              },
              {
                "path_type": {
                  "value": "Prefix",
                  "type": "Kube.Ingress.Rule.HttpPath.PathType"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Ingress.Rule.HttpPath.Backend",
                "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0",
                "link_name": "backend",
                "attributes": [
                  {
                    "resource": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Ingress.Backend.Resource"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Ingress.Backend.Service",
                    "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service-1",
                    "link_name": "service",
                    "attributes": [
                      {
                        "name": {
                          "value": "node-app1-svc",
                          "type": "Kube.Name"
                        }
                      }
                    ],
                    "components": [
                      {
                        "type": "Kube.Ingress.Backend.Service.Port",
                        "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service.Port-1",
                        "link_name": "port",
                        "attributes": [
                          {
                            "name": {
                              "value": "COMMON.NONE",
                              "type": "BuiltinSort.Z3String"
                            }
                          },
                          {
                            "number": {
                              "value": "80",
                              "type": "Network.Port"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-4"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Ingress",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Ingress",
      "name": "ingress2-simple-service-bad-default",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Ingress-1",
    "attributes": [
      {
        "api_version": {
          "value": "networking.k8s.io/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "ingress_class_name": {
          "value": "COMMON.NONE",
          "type": "Kube.Name"
        }
      },
      {
        "labels": {
          "type": "Kube.Labels",
          "value": "COMMON.NONE"
        }
      },
      {
        "name": {
          "value": "ingress2-simple-service-bad-default",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Annotations",
        "fqdn": {
          "internal_path": "annotations",
          "external_path": "metadata/annotations"
        },
        "logical_id": "KubernetesParser.Kube.Annotations-1",
        "link_name": "annotations",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "nginx.ingress.kubernetes.io/rewrite-target": {
              "value": "/"
            }
          }
        ]
      },
      {
        "type": "Kube.Ingress.DefaultBackend",
        "fqdn": {
          "internal_path": "default_backend",
          "external_path": "spec/default_backend"
        },
        "logical_id": "KubernetesParser.Kube.Ingress.DefaultBackend-1",
        "link_name": "default_backend",
        "attributes": [
          {
            "resource": {
              "value": "COMMON.NONE",
              "type": "Kube.Ingress.Backend.Resource"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Ingress.Backend.Service",
            "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service-2",
            "link_name": "service",
            "attributes": [
              {
                "name": {
                  "value": "test2",
                  "type": "Kube.Name"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Ingress.Backend.Service.Port",
                "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service.Port-2",
                "link_name": "port",
                "attributes": [
                  {
                    "name": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "number": {
                      "value": "80",
                      "type": "Network.Port"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.Ingress.Rule",
        "fqdn": {
          "internal_path": "rules[0]",
          "external_path": "spec/rules[0]"
        },
        "logical_id": "KubernetesParser.Kube.Ingress.Rule-1",
        "link_name": "rules",
        "array_index": 0,
        "attributes": [
          {
            "host": {
              "value": "COMMON.NONE",
              "type": "Network.Http.HostPattern"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Ingress.Rule.HttpPath",
            "fqdn": {
              "internal_path": "rules[0]/paths[0]",
              "external_path": "spec/rules[0]/http/paths[0]"
            },
            "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath-1",
            "link_name": "paths",
            "array_index": 0,
            "attributes": [
              {
                "path": {
                  "value": "/testpath",
                  "type": "Network.Http.PathPattern"
                }
              },
              {
                "path_type": {
                  "value": "Prefix",
                  "type": "Kube.Ingress.Rule.HttpPath.PathType"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Ingress.Rule.HttpPath.Backend",
                "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1",
                "link_name": "backend",
                "attributes": [
                  {
                    "resource": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Ingress.Backend.Resource"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Ingress.Backend.Service",
                    "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service-3",
                    "link_name": "service",
                    "attributes": [
                      {
                        "name": {
                          "value": "node-app-svc",
                          "type": "Kube.Name"
                        }
                      }
                    ],
                    "components": [
                      {
                        "type": "Kube.Ingress.Backend.Service.Port",
                        "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service.Port-3",
                        "link_name": "port",
                        "attributes": [
                          {
                            "name": {
                              "value": "COMMON.NONE",
                              "type": "BuiltinSort.Z3String"
                            }
                          },
                          {
                            "number": {
                              "value": "80",
                              "type": "Network.Port"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-4"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Ingress",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Ingress",
      "name": "ingress3-simple-fanout",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Ingress-2",
    "attributes": [
      {
        "api_version": {
          "value": "networking.k8s.io/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "default_backend": {
          "type": "Kube.Ingress.DefaultBackend",
          "value": "COMMON.NONE"
        }
      },
      {
        "ingress_class_name": {
          "value": "COMMON.NONE",
          "type": "Kube.Name"
        }
      },
      {
        "labels": {
          "type": "Kube.Labels",
          "value": "COMMON.NONE"
        }
      },
      {
        "name": {
          "value": "ingress3-simple-fanout",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Annotations",
        "fqdn": {
          "internal_path": "annotations",
          "external_path": "metadata/annotations"
        },
        "logical_id": "KubernetesParser.Kube.Annotations-2",
        "link_name": "annotations",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "nginx.ingress.kubernetes.io/rewrite-target": {
              "value": "/"
            }
          }
        ]
      },
      {
        "type": "Kube.Ingress.Rule",
        "fqdn": {
          "internal_path": "rules[0]",
          "external_path": "spec/rules[0]"
        },
        "logical_id": "KubernetesParser.Kube.Ingress.Rule-2",
        "link_name": "rules",
        "array_index": 0,
        "attributes": [
          {
            "host": {
              "value": "foo.bar.com",
              "type": "Network.Http.HostPattern"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Ingress.Rule.HttpPath",
            "fqdn": {
              "internal_path": "rules[0]/paths[0]",
              "external_path": "spec/rules[0]/http/paths[0]"
            },
            "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath-2",
            "link_name": "paths",
            "array_index": 0,
            "attributes": [
              {
                "path": {
                  "value": "/app1",
                  "type": "Network.Http.PathPattern"
                }
              },
              {
                "path_type": {
                  "value": "Prefix",
                  "type": "Kube.Ingress.Rule.HttpPath.PathType"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Ingress.Rule.HttpPath.Backend",
                "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2",
                "link_name": "backend",
                "attributes": [
                  {
                    "resource": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Ingress.Backend.Resource"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Ingress.Backend.Service",
                    "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service-4",
                    "link_name": "service",
                    "attributes": [
                      {
                        "name": {
                          "value": "node-app1-svc",
                          "type": "Kube.Name"
                        }
                      }
                    ],
                    "components": [
                      {
                        "type": "Kube.Ingress.Backend.Service.Port",
                        "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service.Port-4",
                        "link_name": "port",
                        "attributes": [
                          {
                            "name": {
                              "value": "COMMON.NONE",
                              "type": "BuiltinSort.Z3String"
                            }
                          },
                          {
                            "number": {
                              "value": "80",
                              "type": "Network.Port"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Ingress.Rule.HttpPath",
            "fqdn": {
              "internal_path": "rules[0]/paths[1]",
              "external_path": "spec/rules[0]/http/paths[1]"
            },
            "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath-3",
            "link_name": "paths",
            "array_index": 1,
            "attributes": [
              {
                "path": {
                  "value": "/app2",
                  "type": "Network.Http.PathPattern"
                }
              },
              {
                "path_type": {
                  "value": "Prefix",
                  "type": "Kube.Ingress.Rule.HttpPath.PathType"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Ingress.Rule.HttpPath.Backend",
                "logical_id": "KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3",
                "link_name": "backend",
                "attributes": [
                  {
                    "resource": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Ingress.Backend.Resource"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Ingress.Backend.Service",
                    "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service-5",
                    "link_name": "service",
                    "attributes": [
                      {
                        "name": {
                          "value": "node-app2-svc",
                          "type": "Kube.Name"
                        }
                      }
                    ],
                    "components": [
                      {
                        "type": "Kube.Ingress.Backend.Service.Port",
                        "logical_id": "KubernetesParser.Kube.Ingress.Backend.Service.Port-5",
                        "link_name": "port",
                        "attributes": [
                          {
                            "name": {
                              "value": "COMMON.NONE",
                              "type": "BuiltinSort.Z3String"
                            }
                          },
                          {
                            "number": {
                              "value": "80",
                              "type": "Network.Port"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-4"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.NetworkPolicy",
    "logical_id": "HelmParser.Kube.NetworkPolicy-0",
    "attributes": [
      {
        "_exists": {
          "type": "BuiltinSort.Bool",
          "function": {
            "encoding": "tuple_encoding",
            "encoded_function": {
              "_fn": [
                "exists_kube_networkpolicy",
                "Config.Value",
                {
                  "_const": [
                    "HelmParser.Helm.Template.Condition-0",
                    "Helm.Template.Condition"
                  ]
                },
                {
                  "_range_value": false
                }
              ]
            },
            "user_friendly_form": "exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0)"
          }
        }
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "HelmParser.Source.FilePath-1"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Secret",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Secret",
      "name": "redis",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.Secret-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "immutable": {
          "value": "COMMON.NONE",
          "type": "Kube.Secret.Immutable"
        }
      },
      {
        "key_names": {
          "type": "Common.Array",
          "value": [
            "redis-password"
          ],
          "element_type": "Kube.Secret.Key"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "redis",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      },
      {
        "string_data_key": {
          "type": "Kube.Secret.Key",
          "value": "COMMON.NONE"
        }
      },
      {
        "type": {
          "value": "Opaque",
          "type": "Kube.Secret.Type"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-0",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-5"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Secret",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Secret",
      "name": "node-app2-secret",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Secret-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "immutable": {
          "value": "COMMON.NONE",
          "type": "Kube.Secret.Immutable"
        }
      },
      {
        "key_names": {
          "type": "Common.Array",
          "value": [
            "db_password"
          ],
          "element_type": "Kube.Secret.Key"
        }
      },
      {
        "labels": {
          "type": "Kube.Labels",
          "value": "COMMON.NONE"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "node-app2-secret",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      },
      {
        "string_data_key": {
          "type": "Kube.Secret.Key",
          "value": "COMMON.NONE"
        }
      },
      {
        "type": {
          "value": "COMMON.NONE",
          "type": "Kube.Secret.Type"
        }
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-2"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Secret",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Secret",
      "name": "node-app1-secret",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Secret-1",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "immutable": {
          "value": "COMMON.NONE",
          "type": "Kube.Secret.Immutable"
        }
      },
      {
        "key_names": {
          "type": "Common.Array",
          "value": [
            "db_password"
          ],
          "element_type": "Kube.Secret.Key"
        }
      },
      {
        "labels": {
          "type": "Kube.Labels",
          "value": "COMMON.NONE"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "node-app1-secret",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      },
      {
        "string_data_key": {
          "type": "Kube.Secret.Key",
          "value": "COMMON.NONE"
        }
      },
      {
        "type": {
          "value": "COMMON.NONE",
          "type": "Kube.Secret.Type"
        }
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-3"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.ServiceMonitor",
    "logical_id": "HelmParser.Kube.ServiceMonitor-0",
    "attributes": [
      {
        "_exists": {
          "type": "BuiltinSort.Bool",
          "function": {
            "encoding": "tuple_encoding",
            "encoded_function": {
              "_fn": [
                "exists_kube_servicemonitor",
                "Config.Value",
                {
                  "_const": [
                    "HelmParser.Helm.Template.Condition-1",
                    "Helm.Template.Condition"
                  ]
                },
                {
                  "_range_value": false
                }
              ]
            },
            "user_friendly_form": "exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1)"
          }
        }
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "HelmParser.Source.FilePath-2"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Service",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Service",
      "name": "redis-headless",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.Service-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "cluster_ip": {
          "value": "COMMON.NONE",
          "type": "Kube.Service.ClusterIp"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "redis-headless",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      },
      {
        "type": {
          "type": "Kube.Service.Type",
          "value": "ClusterIP"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-4",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      },
      {
        "type": "Kube.Service.ServicePort",
        "fqdn": {
          "internal_path": "ports[0]",
          "external_path": "spec/ports[0]"
        },
        "logical_id": "HelmParser.Kube.Service.ServicePort-0",
        "link_name": "ports",
        "array_index": 0,
        "attributes": [
          {
            "app_protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "name": {
              "value": "tcp-redis",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "node_port": {
              "value": "COMMON.NONE",
              "type": "Network.Port.Number"
            }
          },
          {
            "port": {
              "value": "6379",
              "type": "Network.Port.Number",
              "function": {
                "encoding": "attribute_link",
                "encoded_function": {
                  "attribute_name": "value",
                  "attribute_type": "Config.Value",
                  "base_component": {
                    "name": "HelmParser.Helm.Chart.Release.Values-0",
                    "type": "Helm.Chart.Release.Values"
                  },
                  "key": {
                    "name": "master.service.port",
                    "type": "Config.Name"
                  }
                },
                "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/master.service.port"
              }
            }
          },
          {
            "protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "target_port": {
              "value": "redis",
              "type": "Network.Port"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[0]",
          "external_path": "spec/selector[0]"
        },
        "logical_id": "HelmParser.Kube.Selector-0",
        "link_name": "selector",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/name",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[1]",
          "external_path": "spec/selector[1]"
        },
        "logical_id": "HelmParser.Kube.Selector-1",
        "link_name": "selector",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/instance",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-9"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Service",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Service",
      "name": "redis-master",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.Service-1",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "cluster_ip": {
          "value": "COMMON.NONE",
          "type": "Kube.Service.ClusterIp"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "redis-master",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      },
      {
        "type": {
          "type": "Kube.Service.Type",
          "value": "ExternalName",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "value",
              "attribute_type": "Config.Value",
              "base_component": {
                "name": "HelmParser.Helm.Chart.Release.Values-0",
                "type": "Helm.Chart.Release.Values"
              },
              "key": {
                "name": "master.service.type",
                "type": "Config.Name"
              }
            },
            "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/master.service.type"
          }
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-5",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/component": {
              "value": "master"
            }
          },
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      },
      {
        "type": "Kube.Service.ServicePort",
        "fqdn": {
          "internal_path": "ports[0]",
          "external_path": "spec/ports[0]"
        },
        "logical_id": "HelmParser.Kube.Service.ServicePort-1",
        "link_name": "ports",
        "array_index": 0,
        "attributes": [
          {
            "app_protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "name": {
              "value": "tcp-redis",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "node_port": {
              "value": "COMMON.NONE",
              "type": "Network.Port.Number"
            }
          },
          {
            "port": {
              "value": "6379",
              "type": "Network.Port.Number",
              "function": {
                "encoding": "attribute_link",
                "encoded_function": {
                  "attribute_name": "value",
                  "attribute_type": "Config.Value",
                  "base_component": {
                    "name": "HelmParser.Helm.Chart.Release.Values-0",
                    "type": "Helm.Chart.Release.Values"
                  },
                  "key": {
                    "name": "master.service.port",
                    "type": "Config.Name"
                  }
                },
                "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/master.service.port"
              }
            }
          },
          {
            "protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "target_port": {
              "value": "redis",
              "type": "Network.Port"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[0]",
          "external_path": "spec/selector[0]"
        },
        "logical_id": "HelmParser.Kube.Selector-2",
        "link_name": "selector",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/name",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[1]",
          "external_path": "spec/selector[1]"
        },
        "logical_id": "HelmParser.Kube.Selector-3",
        "link_name": "selector",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/instance",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[2]",
          "external_path": "spec/selector[2]"
        },
        "logical_id": "HelmParser.Kube.Selector-4",
        "link_name": "selector",
        "array_index": 2,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/component",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "master",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-10"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Service",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Service",
      "name": "redis-replicas",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.Service-2",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "cluster_ip": {
          "value": "COMMON.NONE",
          "type": "Kube.Service.ClusterIp"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "redis-replicas",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      },
      {
        "type": {
          "type": "Kube.Service.Type",
          "value": "ClusterIP"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-6",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/component": {
              "value": "replica"
            }
          },
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      },
      {
        "type": "Kube.Service.ServicePort",
        "fqdn": {
          "internal_path": "ports[0]",
          "external_path": "spec/ports[0]"
        },
        "logical_id": "HelmParser.Kube.Service.ServicePort-2",
        "link_name": "ports",
        "array_index": 0,
        "attributes": [
          {
            "app_protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "name": {
              "value": "tcp-redis",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "node_port": {
              "value": "COMMON.NONE",
              "type": "Network.Port.Number"
            }
          },
          {
            "port": {
              "value": 6379,
              "type": "Network.Port.Number"
            }
          },
          {
            "protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "target_port": {
              "value": "redis",
              "type": "Network.Port"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[0]",
          "external_path": "spec/selector[0]"
        },
        "logical_id": "HelmParser.Kube.Selector-5",
        "link_name": "selector",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/name",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[1]",
          "external_path": "spec/selector[1]"
        },
        "logical_id": "HelmParser.Kube.Selector-6",
        "link_name": "selector",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/instance",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[2]",
          "external_path": "spec/selector[2]"
        },
        "logical_id": "HelmParser.Kube.Selector-7",
        "link_name": "selector",
        "array_index": 2,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/component",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "replica",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-11"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Service",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Service",
      "name": "node-app2-svc",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Service-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "cluster_ip": {
          "value": "COMMON.NONE",
          "type": "Kube.Service.ClusterIp"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "node-app2-svc",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      },
      {
        "type": {
          "type": "Kube.Service.Type",
          "value": "NodePort"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "KubernetesParser.Kube.Labels-0",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app": {
              "value": "node"
            }
          }
        ]
      },
      {
        "type": "Kube.Service.ServicePort",
        "fqdn": {
          "internal_path": "ports[0]",
          "external_path": "spec/ports[0]"
        },
        "logical_id": "KubernetesParser.Kube.Service.ServicePort-0",
        "link_name": "ports",
        "array_index": 0,
        "attributes": [
          {
            "app_protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "name": {
              "value": "COMMON.NONE",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "node_port": {
              "value": "31112",
              "type": "Network.Port.Number"
            }
          },
          {
            "port": {
              "value": "8080",
              "type": "Network.Port.Number"
            }
          },
          {
            "protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "target_port": {
              "value": "8081",
              "type": "Network.Port"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[0]",
          "external_path": "spec/selector[0]"
        },
        "logical_id": "KubernetesParser.Kube.Selector-0",
        "link_name": "selector",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "node-app2",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-2"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.Service",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.Service",
      "name": "node-app1-svc",
      "namespace": "default"
    },
    "logical_id": "KubernetesParser.Kube.Service-1",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "cluster_ip": {
          "value": "COMMON.NONE",
          "type": "Kube.Service.ClusterIp"
        }
      },
      {
        "manifest_set": {
          "type": "Config.ManifestSet.Instantiation",
          "value": "Config.ManifestSet.Instantiation-0"
        }
      },
      {
        "name": {
          "value": "node-app1-svc",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": null,
          "type": "Kube.Namespace",
          "function": {
            "encoding": "attribute_link",
            "encoded_function": {
              "attribute_name": "namespace",
              "attribute_type": "Kube.Namespace",
              "base_component": {
                "name": "Config.ManifestSet.Instantiation-0",
                "type": "Config.ManifestSet.Instantiation"
              }
            },
            "user_friendly_form": "namespace(Config.ManifestSet.Instantiation-0)"
          }
        }
      },
      {
        "type": {
          "type": "Kube.Service.Type",
          "value": "NodePort"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "KubernetesParser.Kube.Labels-3",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app": {
              "value": "node"
            }
          }
        ]
      },
      {
        "type": "Kube.Service.ServicePort",
        "fqdn": {
          "internal_path": "ports[0]",
          "external_path": "spec/ports[0]"
        },
        "logical_id": "KubernetesParser.Kube.Service.ServicePort-1",
        "link_name": "ports",
        "array_index": 0,
        "attributes": [
          {
            "app_protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "name": {
              "value": "COMMON.NONE",
              "type": "BuiltinSort.Z3String"
            }
          },
          {
            "node_port": {
              "value": "31112",
              "type": "Network.Port.Number"
            }
          },
          {
            "port": {
              "value": "8080",
              "type": "Network.Port.Number"
            }
          },
          {
            "protocol": {
              "value": "COMMON.NONE",
              "type": "Kube.Service.ServicePort.Protocol"
            }
          },
          {
            "target_port": {
              "value": "8081",
              "type": "Network.Port"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "selector[0]",
          "external_path": "spec/selector[0]"
        },
        "logical_id": "KubernetesParser.Kube.Selector-2",
        "link_name": "selector",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "node",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-3"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.StatefulSet",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.StatefulSet",
      "name": "redis-master",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.StatefulSet-0",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "apps/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "manifest_set": {
          "value": "COMMON.NONE",
          "type": "Config.ManifestSet.Instantiation"
        }
      },
      {
        "name": {
          "value": "redis-master",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      },
      {
        "pod_management_policy": {
          "value": "COMMON.NONE",
          "type": "Kube.StatefulSet.Pod.Management.Policy"
        }
      },
      {
        "replicas": {
          "value": 1,
          "type": "BuiltinSort.Z3Integer"
        }
      },
      {
        "revision_history_limit": {
          "value": "COMMON.NONE",
          "type": "Kube.Revision.History.Limit"
        }
      },
      {
        "service_name": {
          "value": "redis-headless",
          "type": "Kube.Name"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-7",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/component": {
              "value": "master"
            }
          },
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[0]",
          "external_path": "spec/selector/match_labels[0]"
        },
        "logical_id": "HelmParser.Kube.Selector-8",
        "link_name": "match_labels",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/name",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[1]",
          "external_path": "spec/selector/match_labels[1]"
        },
        "logical_id": "HelmParser.Kube.Selector-9",
        "link_name": "match_labels",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/instance",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[2]",
          "external_path": "spec/selector/match_labels[2]"
        },
        "logical_id": "HelmParser.Kube.Selector-10",
        "link_name": "match_labels",
        "array_index": 2,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/component",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "master",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Pod.Template",
        "fqdn": {
          "internal_path": "template",
          "external_path": "spec/template"
        },
        "logical_id": "HelmParser.Kube.Pod.Template-0",
        "link_name": "template",
        "attributes": [
          {
            "name": {
              "value": "COMMON.NONE",
              "type": "Kube.Name"
            }
          },
          {
            "namespace": {
              "value": "COMMON.NONE",
              "type": "Kube.Namespace"
            }
          },
          {
            "node_name": {
              "value": "COMMON.NONE",
              "type": "Kube.Node.Name"
            }
          },
          {
            "node_selector": {
              "type": "Kube.Node.Selector",
              "value": "COMMON.NONE"
            }
          },
          {
            "restart_policy": {
              "value": "COMMON.NONE",
              "type": "Kube.Restart.Policy"
            }
          },
          {
            "service_account_name": {
              "value": "redis",
              "type": "Kube.Service.Account.Name"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Affinity",
            "fqdn": {
              "internal_path": "template/affinity",
              "external_path": "spec/template/spec/affinity"
            },
            "logical_id": "HelmParser.Kube.Affinity-0",
            "link_name": "affinity",
            "attributes": [
              {
                "node_affinity": {
                  "type": "Kube.Affinity.NodeAffinity",
                  "value": "COMMON.NONE"
                }
              },
              {
                "pod_affinity": {
                  "type": "Kube.Affinity.PodAffinity",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Affinity.PodAntiAffinity",
                "fqdn": {
                  "internal_path": "template/affinity/pod_anti_affinity",
                  "external_path": "spec/template/spec/affinity/pod_anti_affinity"
                },
                "logical_id": "HelmParser.Kube.Affinity.PodAntiAffinity-0",
                "link_name": "pod_anti_affinity",
                "components": [
                  {
                    "type": "Kube.Affinity.PodAffinitySchedulingItem",
                    "fqdn": {
                      "internal_path": "template/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]",
                      "external_path": "spec/template/spec/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]"
                    },
                    "logical_id": "HelmParser.Kube.Affinity.PodAffinitySchedulingItem-0",
                    "link_name": "preferred_during_scheduling_ignored_during_execution",
                    "array_index": 0,
                    "attributes": [
                      {
                        "weight": {
                          "value": 1,
                          "type": "Any.Integer"
                        }
                      }
                    ],
                    "components": [
                      {
                        "type": "Kube.Affinity.PodAffinitySchedulingItemPodAffinityTerm",
                        "fqdn": {
                          "internal_path": "template/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term",
                          "external_path": "spec/template/spec/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term"
                        },
                        "logical_id": "HelmParser.Kube.Affinity.PodAffinitySchedulingItemPodAffinityTerm-0",
                        "link_name": "pod_affinity_term",
                        "attributes": [
                          {
                            "namespaces": {
                              "value": [
                                "default"
                              ],
                              "type": "BuiltinSort.Z3String"
                            }
                          },
                          {
                            "topology_key": {
                              "value": "kubernetes.io/hostname",
                              "type": "BuiltinSort.Z3String"
                            }
                          }
                        ],
                        "components": [
                          {
                            "type": "Kube.Affinity.LabelSelector",
                            "fqdn": {
                              "internal_path": "template/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term/label_selector",
                              "external_path": "spec/template/spec/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term/label_selector"
                            },
                            "logical_id": "HelmParser.Kube.Affinity.LabelSelector-0",
                            "link_name": "label_selector",
                            "attributes": [
                              {
                                "match_labels": {
                                  "value": {
                                    "app.kubernetes.io/name": "redis",
                                    "app.kubernetes.io/instance": "redis",
                                    "app.kubernetes.io/component": "master"
                                  },
                                  "type": "BuiltinSort.Z3String"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Annotations",
            "fqdn": {
              "internal_path": "template/annotations",
              "external_path": "spec/template/metadata/annotations"
            },
            "logical_id": "HelmParser.Kube.Annotations-0",
            "link_name": "annotations",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "checksum/configmap": {
                  "value": "442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634"
                }
              },
              {
                "checksum/health": {
                  "value": "44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6"
                }
              },
              {
                "checksum/scripts": {
                  "value": "f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9"
                }
              },
              {
                "checksum/secret": {
                  "value": "8679d9a94a8356d93113a80b6b831c94387f2b72e1c0688249d3327275c32b7d"
                }
              }
            ]
          },
          {
            "type": "Kube.Container",
            "fqdn": {
              "internal_path": "template/containers[0]",
              "external_path": "spec/template/spec/containers[0]"
            },
            "logical_id": "HelmParser.Kube.Container-0",
            "link_name": "containers",
            "array_index": 0,
            "attributes": [
              {
                "args": {
                  "value": "[\"-c\", \"/opt/bitnami/scripts/start-scripts/start-master.sh\"]",
                  "type": "Any.Json"
                }
              },
              {
                "command": {
                  "type": "Any.Json",
                  "value": "[\"/bin/bash\"]"
                }
              },
              {
                "image": {
                  "value": "docker.io/bitnami/redis:6.2.4-debian-10-r13",
                  "type": "Kube.Container.ImageRef",
                  "function": {
                    "encoding": "tuple_encoding",
                    "encoded_function": {
                      "_fn": [
                        "__concat",
                        "Any.Concat",
                        {
                          "_const": [
                            "docker.io/",
                            "Any.String"
                          ]
                        },
                        {
                          "_fn": [
                            "helm_name_value_info",
                            "Any.Json",
                            {
                              "_const": [
                                "redis",
                                "Any.String"
                              ]
                            },
                            {
                              "_const": [
                                "image.repository",
                                "Config.Name"
                              ]
                            },
                            {
                              "_const": [
                                "bitnami/redis",
                                "Config.Value"
                              ]
                            },
                            {
                              "_range_value": "bitnami/redis"
                            }
                          ]
                        },
                        {
                          "_const": [
                            ":",
                            "Any.String"
                          ]
                        },
                        {
                          "_fn": [
                            "helm_name_value_info",
                            "Any.Json",
                            {
                              "_const": [
                                "redis",
                                "Any.String"
                              ]
                            },
                            {
                              "_const": [
                                "image.tag",
                                "Config.Name"
                              ]
                            },
                            {
                              "_const": [
                                "6.2.4-debian-10-r13",
                                "Config.Value"
                              ]
                            },
                            {
                              "_range_value": "6.2.4-debian-10-r13"
                            }
                          ]
                        },
                        {
                          "_range_value": "docker.io/bitnami/redis:6.2.4-debian-10-r13"
                        }
                      ]
                    },
                    "user_friendly_form": "__concat(docker.io/, helm_name_value_info(redis, image.repository, bitnami/redis), :, helm_name_value_info(redis, image.tag, 6.2.4-debian-10-r13))"
                  }
                }
              },
              {
                "image_pull_policy": {
                  "value": "IfNotPresent",
                  "type": "Kube.Container.ImagePullPolicy",
                  "function": {
                    "encoding": "attribute_link",
                    "encoded_function": {
                      "attribute_name": "value",
                      "attribute_type": "Config.Value",
                      "base_component": {
                        "name": "HelmParser.Helm.Chart.Release.Values-0",
                        "type": "Helm.Chart.Release.Values"
                      },
                      "key": {
                        "name": "image.pullPolicy",
                        "type": "Config.Name"
                      }
                    },
                    "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/image.pullPolicy"
                  }
                }
              },
              {
                "lifecycle": {
                  "type": "Kube.Container.Lifecycle",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "redis",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "startup_probe": {
                  "type": "Kube.Container.StartupProbe",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Container.EnvVarsConfig",
                "fqdn": {
                  "internal_path": "template/containers[0]/env_vars_config",
                  "external_path": "spec/template/spec/containers[0]/env"
                },
                "logical_id": "HelmParser.Kube.Container.EnvVarsConfig-0",
                "link_name": "env_vars_config",
                "attributes_type": {
                  "indexed": {
                    "index_type": "Kube.Container.EnvVarName",
                    "value_type": "Kube.Container.EnvVarConfig"
                  }
                },
                "attributes": [
                  {
                    "ALLOW_EMPTY_PASSWORD": {
                      "value": {
                        "value": "no"
                      }
                    }
                  },
                  {
                    "BITNAMI_DEBUG": {
                      "value": {
                        "value": "false"
                      }
                    }
                  },
                  {
                    "REDIS_PASSWORD": {
                      "value": {
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "redis",
                            "key": "redis-password"
                          }
                        }
                      }
                    }
                  },
                  {
                    "REDIS_PORT": {
                      "value": {
                        "value": "6379"
                      },
                      "function": {
                        "encoding": "attribute_link",
                        "encoded_function": {
                          "attribute_name": "value",
                          "attribute_type": "Config.Value",
                          "base_component": {
                            "name": "HelmParser.Helm.Chart.Release.Values-0",
                            "type": "Helm.Chart.Release.Values"
                          },
                          "key": {
                            "name": "master.containerPort",
                            "type": "Config.Name"
                          }
                        },
                        "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/master.containerPort"
                      }
                    }
                  },
                  {
                    "REDIS_REPLICATION_MODE": {
                      "value": {
                        "value": "master"
                      }
                    }
                  },
                  {
                    "REDIS_TLS_ENABLED": {
                      "value": {
                        "value": "no"
                      }
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.LivenessProbe",
                "fqdn": {
                  "internal_path": "template/containers[0]/liveness_probe",
                  "external_path": "spec/template/spec/containers[0]/liveness_probe"
                },
                "logical_id": "HelmParser.Kube.Container.LivenessProbe-0",
                "link_name": "liveness_probe",
                "attributes": [
                  {
                    "failure_threshold": {
                      "value": 5,
                      "type": "Kube.Container.LivenessProbe.FailureThreshold"
                    }
                  },
                  {
                    "http_get": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.HttpGetAction"
                    }
                  },
                  {
                    "initial_delay_seconds": {
                      "value": 5,
                      "type": "Kube.Container.LivenessProbe.InitialDelaySeconds"
                    }
                  },
                  {
                    "period_seconds": {
                      "value": 5,
                      "type": "Kube.Container.LivenessProbe.PeriodSeconds"
                    }
                  },
                  {
                    "success_threshold": {
                      "value": 1,
                      "type": "Kube.Container.LivenessProbe.SuccessThreshold"
                    }
                  },
                  {
                    "tcp_socket": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.TcpSocketAction"
                    }
                  },
                  {
                    "timeout_seconds": {
                      "value": 6,
                      "type": "Kube.Container.LivenessProbe.TimeoutSeconds"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Container.ExecAction",
                    "logical_id": "HelmParser.Kube.Container.ExecAction-0",
                    "link_name": "exec",
                    "attributes": [
                      {
                        "command": {
                          "value": "[\"sh\", \"-c\", \"/health/ping_liveness_local.sh 5\"]",
                          "type": "Any.Json"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "Kube.Container.PortItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/ports[0]",
                  "external_path": "spec/template/spec/containers[0]/ports[0]"
                },
                "logical_id": "HelmParser.Kube.Container.PortItem-0",
                "link_name": "ports",
                "array_index": 0,
                "attributes": [
                  {
                    "container_port": {
                      "value": "6379",
                      "type": "Network.Port.Number",
                      "function": {
                        "encoding": "attribute_link",
                        "encoded_function": {
                          "attribute_name": "value",
                          "attribute_type": "Config.Value",
                          "base_component": {
                            "name": "HelmParser.Helm.Chart.Release.Values-0",
                            "type": "Helm.Chart.Release.Values"
                          },
                          "key": {
                            "name": "master.containerPort",
                            "type": "Config.Name"
                          }
                        },
                        "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/master.containerPort"
                      }
                    }
                  },
                  {
                    "host_ip": {
                      "value": "COMMON.NONE",
                      "type": "Network.Address"
                    }
                  },
                  {
                    "host_port": {
                      "value": "COMMON.NONE",
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "name": {
                      "value": "redis",
                      "type": "Network.Port"
                    }
                  },
                  {
                    "protocol": {
                      "value": "COMMON.NONE",
                      "type": "Network.Protocol"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.ReadinessProbe",
                "fqdn": {
                  "internal_path": "template/containers[0]/readiness_probe",
                  "external_path": "spec/template/spec/containers[0]/readiness_probe"
                },
                "logical_id": "HelmParser.Kube.Container.ReadinessProbe-0",
                "link_name": "readiness_probe",
                "attributes": [
                  {
                    "failure_threshold": {
                      "value": 5,
                      "type": "Kube.Container.ReadinessProbe.FailureThreshold"
                    }
                  },
                  {
                    "http_get": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.HttpGetAction"
                    }
                  },
                  {
                    "initial_delay_seconds": {
                      "value": 5,
                      "type": "Kube.Container.ReadinessProbe.InitialDelaySeconds"
                    }
                  },
                  {
                    "period_seconds": {
                      "value": 5,
                      "type": "Kube.Container.ReadinessProbe.PeriodSeconds"
                    }
                  },
                  {
                    "success_threshold": {
                      "value": 1,
                      "type": "Kube.Container.ReadinessProbe.SuccessThreshold"
                    }
                  },
                  {
                    "tcp_socket": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.TcpSocketAction"
                    }
                  },
                  {
                    "timeout_seconds": {
                      "value": 2,
                      "type": "Kube.Container.ReadinessProbe.TimeoutSeconds"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Container.ExecAction",
                    "logical_id": "HelmParser.Kube.Container.ExecAction-1",
                    "link_name": "exec",
                    "attributes": [
                      {
                        "command": {
                          "value": "[\"sh\", \"-c\", \"/health/ping_readiness_local.sh 1\"]",
                          "type": "Any.Json"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "Kube.Container.Resources",
                "fqdn": {
                  "internal_path": "template/containers[0]/resources",
                  "external_path": "spec/template/spec/containers[0]/resources"
                },
                "logical_id": "HelmParser.Kube.Container.Resources-0",
                "link_name": "resources",
                "components": [
                  {
                    "type": "Kube.Container.ResourcesLimits",
                    "logical_id": "HelmParser.Kube.Container.ResourcesLimits-0",
                    "link_name": "limits",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  },
                  {
                    "type": "Kube.Container.ResourcesRequests",
                    "logical_id": "HelmParser.Kube.Container.ResourcesRequests-0",
                    "link_name": "requests",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "Kube.Container.SecurityContext",
                "fqdn": {
                  "internal_path": "template/containers[0]/security_context",
                  "external_path": "spec/template/spec/containers[0]/security_context"
                },
                "logical_id": "HelmParser.Kube.Container.SecurityContext-0",
                "link_name": "security_context",
                "attributes": [
                  {
                    "fs_group": {
                      "value": "COMMON.NONE",
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "fs_group_change_policy": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "run_as_group": {
                      "value": "COMMON.NONE",
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "run_as_non_root": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "run_as_user": {
                      "value": 1001,
                      "type": "Any.Integer"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[0]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[0]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-0",
                "link_name": "volume_mounts",
                "array_index": 0,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/opt/bitnami/scripts/start-scripts",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "start-scripts",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[1]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[1]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-1",
                "link_name": "volume_mounts",
                "array_index": 1,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/health",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "health",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[2]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[2]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-2",
                "link_name": "volume_mounts",
                "array_index": 2,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/data",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-data",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[3]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[3]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-3",
                "link_name": "volume_mounts",
                "array_index": 3,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/opt/bitnami/redis/mounted-etc",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "config",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[4]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[4]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-4",
                "link_name": "volume_mounts",
                "array_index": 4,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/opt/bitnami/redis/etc/",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-tmp-conf",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[5]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[5]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-5",
                "link_name": "volume_mounts",
                "array_index": 5,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/tmp",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "tmp",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Labels",
            "fqdn": {
              "internal_path": "template/labels",
              "external_path": "spec/template/metadata/labels"
            },
            "logical_id": "HelmParser.Kube.Labels-8",
            "link_name": "labels",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "app.kubernetes.io/component": {
                  "value": "master"
                }
              },
              {
                "app.kubernetes.io/instance": {
                  "value": "redis"
                }
              },
              {
                "app.kubernetes.io/managed-by": {
                  "value": "Helm"
                }
              },
              {
                "app.kubernetes.io/name": {
                  "value": "redis"
                }
              },
              {
                "helm.sh/chart": {
                  "value": "redis-14.4.0"
                }
              }
            ]
          },
          {
            "type": "Kube.Pod.SecurityContext",
            "fqdn": {
              "internal_path": "template/security_context",
              "external_path": "spec/template/spec/security_context"
            },
            "logical_id": "HelmParser.Kube.Pod.SecurityContext-0",
            "link_name": "security_context",
            "attributes": [
              {
                "fs_group": {
                  "value": 1001,
                  "type": "Any.Integer"
                }
              },
              {
                "fs_group_change_policy": {
                  "value": "COMMON.NONE",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "run_as_group": {
                  "value": "COMMON.NONE",
                  "type": "Any.Integer"
                }
              },
              {
                "run_as_non_root": {
                  "value": "COMMON.NONE",
                  "type": "BuiltinSort.Bool"
                }
              },
              {
                "run_as_user": {
                  "value": "COMMON.NONE",
                  "type": "Any.Integer"
                }
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[0]",
              "external_path": "spec/template/spec/volumes[0]"
            },
            "logical_id": "HelmParser.Kube.Volume-0",
            "link_name": "volumes",
            "array_index": 0,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "empty_dir": {
                  "type": "Kube.Volume.EmptyDir",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "start-scripts",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.ConfigMap",
                "fqdn": {
                  "internal_path": "template/volumes[0]/config_map",
                  "external_path": "spec/template/spec/volumes[0]/config_map"
                },
                "logical_id": "HelmParser.Kube.Volume.ConfigMap-0",
                "link_name": "config_map",
                "attributes": [
                  {
                    "default_mode": {
                      "value": 493,
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "items": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Volume.ConfigMap.Item"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-scripts",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "optional": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[1]",
              "external_path": "spec/template/spec/volumes[1]"
            },
            "logical_id": "HelmParser.Kube.Volume-1",
            "link_name": "volumes",
            "array_index": 1,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "empty_dir": {
                  "type": "Kube.Volume.EmptyDir",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "health",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.ConfigMap",
                "fqdn": {
                  "internal_path": "template/volumes[1]/config_map",
                  "external_path": "spec/template/spec/volumes[1]/config_map"
                },
                "logical_id": "HelmParser.Kube.Volume.ConfigMap-1",
                "link_name": "config_map",
                "attributes": [
                  {
                    "default_mode": {
                      "value": 493,
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "items": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Volume.ConfigMap.Item"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-health",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "optional": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[2]",
              "external_path": "spec/template/spec/volumes[2]"
            },
            "logical_id": "HelmParser.Kube.Volume-2",
            "link_name": "volumes",
            "array_index": 2,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "empty_dir": {
                  "type": "Kube.Volume.EmptyDir",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "config",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.ConfigMap",
                "fqdn": {
                  "internal_path": "template/volumes[2]/config_map",
                  "external_path": "spec/template/spec/volumes[2]/config_map"
                },
                "logical_id": "HelmParser.Kube.Volume.ConfigMap-2",
                "link_name": "config_map",
                "attributes": [
                  {
                    "default_mode": {
                      "value": "COMMON.NONE",
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "items": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Volume.ConfigMap.Item"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-configuration",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "optional": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[3]",
              "external_path": "spec/template/spec/volumes[3]"
            },
            "logical_id": "HelmParser.Kube.Volume-3",
            "link_name": "volumes",
            "array_index": 3,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "config_map": {
                  "type": "Kube.Volume.ConfigMap",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "redis-tmp-conf",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.EmptyDir",
                "fqdn": {
                  "internal_path": "template/volumes[3]/empty_dir",
                  "external_path": "spec/template/spec/volumes[3]/empty_dir"
                },
                "logical_id": "HelmParser.Kube.Volume.EmptyDir-0",
                "link_name": "empty_dir",
                "attributes": [
                  {
                    "medium": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "size_limit": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[4]",
              "external_path": "spec/template/spec/volumes[4]"
            },
            "logical_id": "HelmParser.Kube.Volume-4",
            "link_name": "volumes",
            "array_index": 4,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "config_map": {
                  "type": "Kube.Volume.ConfigMap",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "tmp",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.EmptyDir",
                "fqdn": {
                  "internal_path": "template/volumes[4]/empty_dir",
                  "external_path": "spec/template/spec/volumes[4]/empty_dir"
                },
                "logical_id": "HelmParser.Kube.Volume.EmptyDir-1",
                "link_name": "empty_dir",
                "attributes": [
                  {
                    "medium": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "size_limit": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.StatefulSet.Update.Strategy",
        "fqdn": {
          "internal_path": "update_strategy",
          "external_path": "spec/update_strategy"
        },
        "logical_id": "HelmParser.Kube.StatefulSet.Update.Strategy-0",
        "link_name": "update_strategy",
        "attributes": [
          {
            "type": {
              "value": "RollingUpdate",
              "type": "BuiltinSort.Z3String"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.StatefulSet.Update.Strategy.Rolling.Update",
            "fqdn": {
              "internal_path": "update_strategy/rolling_update",
              "external_path": "spec/update_strategy/rolling_update"
            },
            "logical_id": "HelmParser.Kube.StatefulSet.Update.Strategy.Rolling.Update-0",
            "link_name": "rolling_update",
            "attributes": [
              {
                "partition": {
                  "value": "COMMON.NONE",
                  "type": "BuiltinSort.Z3String"
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.PersistentVolumeClaim",
        "fqdn": {
          "internal_path": "volume_claim_templates[0]",
          "external_path": "spec/volume_claim_templates[0]"
        },
        "logical_id": "HelmParser.Kube.PersistentVolumeClaim-0",
        "link_name": "volume_claim_templates",
        "array_index": 0,
        "attributes": [
          {
            "access_modes": {
              "type": "Common.Array",
              "value": [
                "ReadWriteOnce"
              ],
              "element_type": "Kube.PersistentVolumeClaim.AccessMode.Item"
            }
          },
          {
            "annotations": {
              "type": "Kube.Annotations",
              "value": "COMMON.NONE"
            }
          },
          {
            "api_version": {
              "value": "COMMON.NONE",
              "type": "Kube.ApiVersion"
            }
          },
          {
            "data_source": {
              "type": "Kube.PersistentVolumeClaim.DataSource",
              "value": "COMMON.NONE"
            }
          },
          {
            "name": {
              "value": "redis-data",
              "type": "Kube.Name"
            }
          },
          {
            "namespace": {
              "value": "COMMON.NONE",
              "type": "Kube.Namespace"
            }
          },
          {
            "storage_class_name": {
              "value": "COMMON.NONE",
              "type": "Kube.PersistentVolumeClaim.StorageClassName"
            }
          },
          {
            "volume_mode": {
              "value": "COMMON.NONE",
              "type": "Kube.PersistentVolumeClaim.VolumeMode"
            }
          },
          {
            "volume_name": {
              "value": "COMMON.NONE",
              "type": "Kube.PersistentVolumeClaim.VolumeName"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Labels",
            "fqdn": {
              "internal_path": "volume_claim_templates[0]/labels",
              "external_path": "spec/volume_claim_templates[0]/metadata/labels"
            },
            "logical_id": "HelmParser.Kube.Labels-9",
            "link_name": "labels",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "app.kubernetes.io/component": {
                  "value": "master"
                }
              },
              {
                "app.kubernetes.io/instance": {
                  "value": "redis"
                }
              },
              {
                "app.kubernetes.io/name": {
                  "value": "redis"
                }
              }
            ]
          },
          {
            "type": "Kube.PersistentVolumeClaim.Resources",
            "fqdn": {
              "internal_path": "volume_claim_templates[0]/resources",
              "external_path": "spec/volume_claim_templates[0]/spec/resources"
            },
            "logical_id": "HelmParser.Kube.PersistentVolumeClaim.Resources-0",
            "link_name": "resources",
            "attributes": [
              {
                "limits": {
                  "value": "COMMON.NONE",
                  "type": "Kube.PersistentVolumeClaim.ResourcesLimits"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.PersistentVolumeClaim.ResourcesRequests",
                "logical_id": "HelmParser.Kube.PersistentVolumeClaim.ResourcesRequests-0",
                "link_name": "requests",
                "attributes": [
                  {
                    "storage": {
                      "value": "8Gi",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-12"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Kube.StatefulSet",
    "top_component_ref": {
      "resource_type": "kubernetes",
      "sort_name": "Kube.StatefulSet",
      "name": "redis-replicas",
      "namespace": "default"
    },
    "logical_id": "HelmParser.Kube.StatefulSet-1",
    "attributes": [
      {
        "annotations": {
          "type": "Kube.Annotations",
          "value": "COMMON.NONE"
        }
      },
      {
        "api_version": {
          "value": "apps/v1",
          "type": "Kube.ApiVersion"
        }
      },
      {
        "manifest_set": {
          "value": "COMMON.NONE",
          "type": "Config.ManifestSet.Instantiation"
        }
      },
      {
        "name": {
          "value": "redis-replicas",
          "type": "Kube.Name"
        }
      },
      {
        "namespace": {
          "value": "default",
          "type": "Kube.Namespace"
        }
      },
      {
        "pod_management_policy": {
          "value": "COMMON.NONE",
          "type": "Kube.StatefulSet.Pod.Management.Policy"
        }
      },
      {
        "replicas": {
          "value": 3,
          "type": "BuiltinSort.Z3Integer"
        }
      },
      {
        "revision_history_limit": {
          "value": "COMMON.NONE",
          "type": "Kube.Revision.History.Limit"
        }
      },
      {
        "service_name": {
          "value": "redis-headless",
          "type": "Kube.Name"
        }
      }
    ],
    "components": [
      {
        "type": "Kube.Labels",
        "fqdn": {
          "internal_path": "labels",
          "external_path": "metadata/labels"
        },
        "logical_id": "HelmParser.Kube.Labels-10",
        "link_name": "labels",
        "attributes_type": {
          "indexed": {
            "index_type": "Config.Name",
            "value_type": "Config.Value"
          }
        },
        "attributes": [
          {
            "app.kubernetes.io/component": {
              "value": "replica"
            }
          },
          {
            "app.kubernetes.io/instance": {
              "value": "redis"
            }
          },
          {
            "app.kubernetes.io/managed-by": {
              "value": "Helm"
            }
          },
          {
            "app.kubernetes.io/name": {
              "value": "redis"
            }
          },
          {
            "helm.sh/chart": {
              "value": "redis-14.4.0"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[0]",
          "external_path": "spec/selector/match_labels[0]"
        },
        "logical_id": "HelmParser.Kube.Selector-11",
        "link_name": "match_labels",
        "array_index": 0,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/name",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[1]",
          "external_path": "spec/selector/match_labels[1]"
        },
        "logical_id": "HelmParser.Kube.Selector-12",
        "link_name": "match_labels",
        "array_index": 1,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/instance",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "redis",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Selector",
        "fqdn": {
          "internal_path": "match_labels[2]",
          "external_path": "spec/selector/match_labels[2]"
        },
        "logical_id": "HelmParser.Kube.Selector-13",
        "link_name": "match_labels",
        "array_index": 2,
        "attributes": [
          {
            "name": {
              "value": "app.kubernetes.io/component",
              "type": "Kube.Selector.Name"
            }
          },
          {
            "value": {
              "value": "replica",
              "type": "Kube.Selector.Value"
            }
          }
        ]
      },
      {
        "type": "Kube.Pod.Template",
        "fqdn": {
          "internal_path": "template",
          "external_path": "spec/template"
        },
        "logical_id": "HelmParser.Kube.Pod.Template-1",
        "link_name": "template",
        "attributes": [
          {
            "name": {
              "value": "COMMON.NONE",
              "type": "Kube.Name"
            }
          },
          {
            "namespace": {
              "value": "COMMON.NONE",
              "type": "Kube.Namespace"
            }
          },
          {
            "node_name": {
              "value": "COMMON.NONE",
              "type": "Kube.Node.Name"
            }
          },
          {
            "node_selector": {
              "type": "Kube.Node.Selector",
              "value": "COMMON.NONE"
            }
          },
          {
            "restart_policy": {
              "value": "COMMON.NONE",
              "type": "Kube.Restart.Policy"
            }
          },
          {
            "service_account_name": {
              "value": "redis",
              "type": "Kube.Service.Account.Name"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Affinity",
            "fqdn": {
              "internal_path": "template/affinity",
              "external_path": "spec/template/spec/affinity"
            },
            "logical_id": "HelmParser.Kube.Affinity-1",
            "link_name": "affinity",
            "attributes": [
              {
                "node_affinity": {
                  "type": "Kube.Affinity.NodeAffinity",
                  "value": "COMMON.NONE"
                }
              },
              {
                "pod_affinity": {
                  "type": "Kube.Affinity.PodAffinity",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Affinity.PodAntiAffinity",
                "fqdn": {
                  "internal_path": "template/affinity/pod_anti_affinity",
                  "external_path": "spec/template/spec/affinity/pod_anti_affinity"
                },
                "logical_id": "HelmParser.Kube.Affinity.PodAntiAffinity-1",
                "link_name": "pod_anti_affinity",
                "components": [
                  {
                    "type": "Kube.Affinity.PodAffinitySchedulingItem",
                    "fqdn": {
                      "internal_path": "template/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]",
                      "external_path": "spec/template/spec/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]"
                    },
                    "logical_id": "HelmParser.Kube.Affinity.PodAffinitySchedulingItem-1",
                    "link_name": "preferred_during_scheduling_ignored_during_execution",
                    "array_index": 0,
                    "attributes": [
                      {
                        "weight": {
                          "value": 1,
                          "type": "Any.Integer"
                        }
                      }
                    ],
                    "components": [
                      {
                        "type": "Kube.Affinity.PodAffinitySchedulingItemPodAffinityTerm",
                        "fqdn": {
                          "internal_path": "template/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term",
                          "external_path": "spec/template/spec/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term"
                        },
                        "logical_id": "HelmParser.Kube.Affinity.PodAffinitySchedulingItemPodAffinityTerm-1",
                        "link_name": "pod_affinity_term",
                        "attributes": [
                          {
                            "namespaces": {
                              "value": [
                                "default"
                              ],
                              "type": "BuiltinSort.Z3String"
                            }
                          },
                          {
                            "topology_key": {
                              "value": "kubernetes.io/hostname",
                              "type": "BuiltinSort.Z3String"
                            }
                          }
                        ],
                        "components": [
                          {
                            "type": "Kube.Affinity.LabelSelector",
                            "fqdn": {
                              "internal_path": "template/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term/label_selector",
                              "external_path": "spec/template/spec/affinity/pod_anti_affinity/preferred_during_scheduling_ignored_during_execution[0]/pod_affinity_term/label_selector"
                            },
                            "logical_id": "HelmParser.Kube.Affinity.LabelSelector-1",
                            "link_name": "label_selector",
                            "attributes": [
                              {
                                "match_labels": {
                                  "value": {
                                    "app.kubernetes.io/name": "redis",
                                    "app.kubernetes.io/instance": "redis",
                                    "app.kubernetes.io/component": "replica"
                                  },
                                  "type": "BuiltinSort.Z3String"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Annotations",
            "fqdn": {
              "internal_path": "template/annotations",
              "external_path": "spec/template/metadata/annotations"
            },
            "logical_id": "HelmParser.Kube.Annotations-1",
            "link_name": "annotations",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "checksum/configmap": {
                  "value": "442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634"
                }
              },
              {
                "checksum/health": {
                  "value": "44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6"
                }
              },
              {
                "checksum/scripts": {
                  "value": "f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9"
                }
              },
              {
                "checksum/secret": {
                  "value": "ca4e8e130aadab2c76b7dbc7707864e4bddd395ff1b4a01265d442d879a9f5d9"
                }
              }
            ]
          },
          {
            "type": "Kube.Container",
            "fqdn": {
              "internal_path": "template/containers[0]",
              "external_path": "spec/template/spec/containers[0]"
            },
            "logical_id": "HelmParser.Kube.Container-1",
            "link_name": "containers",
            "array_index": 0,
            "attributes": [
              {
                "args": {
                  "value": "[\"-c\", \"/opt/bitnami/scripts/start-scripts/start-replica.sh\"]",
                  "type": "Any.Json"
                }
              },
              {
                "command": {
                  "type": "Any.Json",
                  "value": "[\"/bin/bash\"]"
                }
              },
              {
                "image": {
                  "value": "docker.io/bitnami/redis:6.2.4-debian-10-r13",
                  "type": "Kube.Container.ImageRef",
                  "function": {
                    "encoding": "tuple_encoding",
                    "encoded_function": {
                      "_fn": [
                        "__concat",
                        "Any.Concat",
                        {
                          "_const": [
                            "docker.io/",
                            "Any.String"
                          ]
                        },
                        {
                          "_fn": [
                            "helm_name_value_info",
                            "Any.Json",
                            {
                              "_const": [
                                "redis",
                                "Any.String"
                              ]
                            },
                            {
                              "_const": [
                                "image.repository",
                                "Config.Name"
                              ]
                            },
                            {
                              "_const": [
                                "bitnami/redis",
                                "Config.Value"
                              ]
                            },
                            {
                              "_range_value": "bitnami/redis"
                            }
                          ]
                        },
                        {
                          "_const": [
                            ":",
                            "Any.String"
                          ]
                        },
                        {
                          "_fn": [
                            "helm_name_value_info",
                            "Any.Json",
                            {
                              "_const": [
                                "redis",
                                "Any.String"
                              ]
                            },
                            {
                              "_const": [
                                "image.tag",
                                "Config.Name"
                              ]
                            },
                            {
                              "_const": [
                                "6.2.4-debian-10-r13",
                                "Config.Value"
                              ]
                            },
                            {
                              "_range_value": "6.2.4-debian-10-r13"
                            }
                          ]
                        },
                        {
                          "_range_value": "docker.io/bitnami/redis:6.2.4-debian-10-r13"
                        }
                      ]
                    },
                    "user_friendly_form": "__concat(docker.io/, helm_name_value_info(redis, image.repository, bitnami/redis), :, helm_name_value_info(redis, image.tag, 6.2.4-debian-10-r13))"
                  }
                }
              },
              {
                "image_pull_policy": {
                  "value": "IfNotPresent",
                  "type": "Kube.Container.ImagePullPolicy",
                  "function": {
                    "encoding": "attribute_link",
                    "encoded_function": {
                      "attribute_name": "value",
                      "attribute_type": "Config.Value",
                      "base_component": {
                        "name": "HelmParser.Helm.Chart.Release.Values-0",
                        "type": "Helm.Chart.Release.Values"
                      },
                      "key": {
                        "name": "image.pullPolicy",
                        "type": "Config.Name"
                      }
                    },
                    "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/image.pullPolicy"
                  }
                }
              },
              {
                "lifecycle": {
                  "type": "Kube.Container.Lifecycle",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "redis",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "startup_probe": {
                  "type": "Kube.Container.StartupProbe",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Container.EnvVarsConfig",
                "fqdn": {
                  "internal_path": "template/containers[0]/env_vars_config",
                  "external_path": "spec/template/spec/containers[0]/env"
                },
                "logical_id": "HelmParser.Kube.Container.EnvVarsConfig-1",
                "link_name": "env_vars_config",
                "attributes_type": {
                  "indexed": {
                    "index_type": "Kube.Container.EnvVarName",
                    "value_type": "Kube.Container.EnvVarConfig"
                  }
                },
                "attributes": [
                  {
                    "ALLOW_EMPTY_PASSWORD": {
                      "value": {
                        "value": "no"
                      }
                    }
                  },
                  {
                    "BITNAMI_DEBUG": {
                      "value": {
                        "value": "false"
                      }
                    }
                  },
                  {
                    "REDIS_MASTER_HOST": {
                      "value": {
                        "value": "redis-master-0.redis-headless.default.svc.cluster.local"
                      }
                    }
                  },
                  {
                    "REDIS_MASTER_PASSWORD": {
                      "value": {
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "redis",
                            "key": "redis-password"
                          }
                        }
                      }
                    }
                  },
                  {
                    "REDIS_MASTER_PORT_NUMBER": {
                      "value": {
                        "value": "6379"
                      },
                      "function": {
                        "encoding": "attribute_link",
                        "encoded_function": {
                          "attribute_name": "value",
                          "attribute_type": "Config.Value",
                          "base_component": {
                            "name": "HelmParser.Helm.Chart.Release.Values-0",
                            "type": "Helm.Chart.Release.Values"
                          },
                          "key": {
                            "name": "master.service.port",
                            "type": "Config.Name"
                          }
                        },
                        "user_friendly_form": "Helm.Chart[redis-4.4.0]/release[0]/values/master.service.port"
                      }
                    }
                  },
                  {
                    "REDIS_PASSWORD": {
                      "value": {
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "redis",
                            "key": "redis-password"
                          }
                        }
                      }
                    }
                  },
                  {
                    "REDIS_PORT": {
                      "value": {
                        "value": "6379"
                      }
                    }
                  },
                  {
                    "REDIS_REPLICATION_MODE": {
                      "value": {
                        "value": "slave"
                      }
                    }
                  },
                  {
                    "REDIS_TLS_ENABLED": {
                      "value": {
                        "value": "no"
                      }
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.LivenessProbe",
                "fqdn": {
                  "internal_path": "template/containers[0]/liveness_probe",
                  "external_path": "spec/template/spec/containers[0]/liveness_probe"
                },
                "logical_id": "HelmParser.Kube.Container.LivenessProbe-1",
                "link_name": "liveness_probe",
                "attributes": [
                  {
                    "failure_threshold": {
                      "value": 5,
                      "type": "Kube.Container.LivenessProbe.FailureThreshold"
                    }
                  },
                  {
                    "http_get": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.HttpGetAction"
                    }
                  },
                  {
                    "initial_delay_seconds": {
                      "value": 5,
                      "type": "Kube.Container.LivenessProbe.InitialDelaySeconds"
                    }
                  },
                  {
                    "period_seconds": {
                      "value": 5,
                      "type": "Kube.Container.LivenessProbe.PeriodSeconds"
                    }
                  },
                  {
                    "success_threshold": {
                      "value": 1,
                      "type": "Kube.Container.LivenessProbe.SuccessThreshold"
                    }
                  },
                  {
                    "tcp_socket": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.TcpSocketAction"
                    }
                  },
                  {
                    "timeout_seconds": {
                      "value": 6,
                      "type": "Kube.Container.LivenessProbe.TimeoutSeconds"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Container.ExecAction",
                    "logical_id": "HelmParser.Kube.Container.ExecAction-2",
                    "link_name": "exec",
                    "attributes": [
                      {
                        "command": {
                          "value": "[\"sh\", \"-c\", \"/health/ping_liveness_local_and_master.sh 5\"]",
                          "type": "Any.Json"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "Kube.Container.PortItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/ports[0]",
                  "external_path": "spec/template/spec/containers[0]/ports[0]"
                },
                "logical_id": "HelmParser.Kube.Container.PortItem-1",
                "link_name": "ports",
                "array_index": 0,
                "attributes": [
                  {
                    "container_port": {
                      "value": 6379,
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "host_ip": {
                      "value": "COMMON.NONE",
                      "type": "Network.Address"
                    }
                  },
                  {
                    "host_port": {
                      "value": "COMMON.NONE",
                      "type": "Network.Port.Number"
                    }
                  },
                  {
                    "name": {
                      "value": "redis",
                      "type": "Network.Port"
                    }
                  },
                  {
                    "protocol": {
                      "value": "COMMON.NONE",
                      "type": "Network.Protocol"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.ReadinessProbe",
                "fqdn": {
                  "internal_path": "template/containers[0]/readiness_probe",
                  "external_path": "spec/template/spec/containers[0]/readiness_probe"
                },
                "logical_id": "HelmParser.Kube.Container.ReadinessProbe-1",
                "link_name": "readiness_probe",
                "attributes": [
                  {
                    "failure_threshold": {
                      "value": 5,
                      "type": "Kube.Container.ReadinessProbe.FailureThreshold"
                    }
                  },
                  {
                    "http_get": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.HttpGetAction"
                    }
                  },
                  {
                    "initial_delay_seconds": {
                      "value": 5,
                      "type": "Kube.Container.ReadinessProbe.InitialDelaySeconds"
                    }
                  },
                  {
                    "period_seconds": {
                      "value": 5,
                      "type": "Kube.Container.ReadinessProbe.PeriodSeconds"
                    }
                  },
                  {
                    "success_threshold": {
                      "value": 1,
                      "type": "Kube.Container.ReadinessProbe.SuccessThreshold"
                    }
                  },
                  {
                    "tcp_socket": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Container.TcpSocketAction"
                    }
                  },
                  {
                    "timeout_seconds": {
                      "value": 2,
                      "type": "Kube.Container.ReadinessProbe.TimeoutSeconds"
                    }
                  }
                ],
                "components": [
                  {
                    "type": "Kube.Container.ExecAction",
                    "logical_id": "HelmParser.Kube.Container.ExecAction-3",
                    "link_name": "exec",
                    "attributes": [
                      {
                        "command": {
                          "value": "[\"sh\", \"-c\", \"/health/ping_readiness_local_and_master.sh 1\"]",
                          "type": "Any.Json"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "Kube.Container.Resources",
                "fqdn": {
                  "internal_path": "template/containers[0]/resources",
                  "external_path": "spec/template/spec/containers[0]/resources"
                },
                "logical_id": "HelmParser.Kube.Container.Resources-1",
                "link_name": "resources",
                "components": [
                  {
                    "type": "Kube.Container.ResourcesLimits",
                    "logical_id": "HelmParser.Kube.Container.ResourcesLimits-1",
                    "link_name": "limits",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  },
                  {
                    "type": "Kube.Container.ResourcesRequests",
                    "logical_id": "HelmParser.Kube.Container.ResourcesRequests-1",
                    "link_name": "requests",
                    "attributes": [
                      {
                        "cpu": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      },
                      {
                        "memory": {
                          "value": "COMMON.NONE",
                          "type": "BuiltinSort.Z3String"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "Kube.Container.SecurityContext",
                "fqdn": {
                  "internal_path": "template/containers[0]/security_context",
                  "external_path": "spec/template/spec/containers[0]/security_context"
                },
                "logical_id": "HelmParser.Kube.Container.SecurityContext-1",
                "link_name": "security_context",
                "attributes": [
                  {
                    "fs_group": {
                      "value": "COMMON.NONE",
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "fs_group_change_policy": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "run_as_group": {
                      "value": "COMMON.NONE",
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "run_as_non_root": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "run_as_user": {
                      "value": 1001,
                      "type": "Any.Integer"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[0]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[0]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-6",
                "link_name": "volume_mounts",
                "array_index": 0,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/opt/bitnami/scripts/start-scripts",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "start-scripts",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[1]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[1]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-7",
                "link_name": "volume_mounts",
                "array_index": 1,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/health",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "health",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[2]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[2]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-8",
                "link_name": "volume_mounts",
                "array_index": 2,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/data",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-data",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[3]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[3]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-9",
                "link_name": "volume_mounts",
                "array_index": 3,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/opt/bitnami/redis/mounted-etc",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "config",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              },
              {
                "type": "Kube.Container.VolumeMountItem",
                "fqdn": {
                  "internal_path": "template/containers[0]/volume_mounts[4]",
                  "external_path": "spec/template/spec/containers[0]/volume_mounts[4]"
                },
                "logical_id": "HelmParser.Kube.Container.VolumeMountItem-10",
                "link_name": "volume_mounts",
                "array_index": 4,
                "attributes": [
                  {
                    "mount_path": {
                      "value": "/opt/bitnami/redis/etc",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "mount_propagation": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-tmp-conf",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "read_only": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  },
                  {
                    "sub_path": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "sub_path_expr": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Labels",
            "fqdn": {
              "internal_path": "template/labels",
              "external_path": "spec/template/metadata/labels"
            },
            "logical_id": "HelmParser.Kube.Labels-11",
            "link_name": "labels",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "app.kubernetes.io/component": {
                  "value": "replica"
                }
              },
              {
                "app.kubernetes.io/instance": {
                  "value": "redis"
                }
              },
              {
                "app.kubernetes.io/managed-by": {
                  "value": "Helm"
                }
              },
              {
                "app.kubernetes.io/name": {
                  "value": "redis"
                }
              },
              {
                "helm.sh/chart": {
                  "value": "redis-14.4.0"
                }
              }
            ]
          },
          {
            "type": "Kube.Pod.SecurityContext",
            "fqdn": {
              "internal_path": "template/security_context",
              "external_path": "spec/template/spec/security_context"
            },
            "logical_id": "HelmParser.Kube.Pod.SecurityContext-1",
            "link_name": "security_context",
            "attributes": [
              {
                "fs_group": {
                  "value": 1001,
                  "type": "Any.Integer"
                }
              },
              {
                "fs_group_change_policy": {
                  "value": "COMMON.NONE",
                  "type": "BuiltinSort.Z3String"
                }
              },
              {
                "run_as_group": {
                  "value": "COMMON.NONE",
                  "type": "Any.Integer"
                }
              },
              {
                "run_as_non_root": {
                  "value": "COMMON.NONE",
                  "type": "BuiltinSort.Bool"
                }
              },
              {
                "run_as_user": {
                  "value": "COMMON.NONE",
                  "type": "Any.Integer"
                }
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[0]",
              "external_path": "spec/template/spec/volumes[0]"
            },
            "logical_id": "HelmParser.Kube.Volume-5",
            "link_name": "volumes",
            "array_index": 0,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "empty_dir": {
                  "type": "Kube.Volume.EmptyDir",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "start-scripts",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.ConfigMap",
                "fqdn": {
                  "internal_path": "template/volumes[0]/config_map",
                  "external_path": "spec/template/spec/volumes[0]/config_map"
                },
                "logical_id": "HelmParser.Kube.Volume.ConfigMap-3",
                "link_name": "config_map",
                "attributes": [
                  {
                    "default_mode": {
                      "value": 493,
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "items": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Volume.ConfigMap.Item"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-scripts",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "optional": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[1]",
              "external_path": "spec/template/spec/volumes[1]"
            },
            "logical_id": "HelmParser.Kube.Volume-6",
            "link_name": "volumes",
            "array_index": 1,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "empty_dir": {
                  "type": "Kube.Volume.EmptyDir",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "health",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.ConfigMap",
                "fqdn": {
                  "internal_path": "template/volumes[1]/config_map",
                  "external_path": "spec/template/spec/volumes[1]/config_map"
                },
                "logical_id": "HelmParser.Kube.Volume.ConfigMap-4",
                "link_name": "config_map",
                "attributes": [
                  {
                    "default_mode": {
                      "value": 493,
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "items": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Volume.ConfigMap.Item"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-health",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "optional": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[2]",
              "external_path": "spec/template/spec/volumes[2]"
            },
            "logical_id": "HelmParser.Kube.Volume-7",
            "link_name": "volumes",
            "array_index": 2,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "empty_dir": {
                  "type": "Kube.Volume.EmptyDir",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "config",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.ConfigMap",
                "fqdn": {
                  "internal_path": "template/volumes[2]/config_map",
                  "external_path": "spec/template/spec/volumes[2]/config_map"
                },
                "logical_id": "HelmParser.Kube.Volume.ConfigMap-5",
                "link_name": "config_map",
                "attributes": [
                  {
                    "default_mode": {
                      "value": "COMMON.NONE",
                      "type": "Any.Integer"
                    }
                  },
                  {
                    "items": {
                      "value": "COMMON.NONE",
                      "type": "Kube.Volume.ConfigMap.Item"
                    }
                  },
                  {
                    "name": {
                      "value": "redis-configuration",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "optional": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Bool"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "Kube.Volume",
            "fqdn": {
              "internal_path": "template/volumes[3]",
              "external_path": "spec/template/spec/volumes[3]"
            },
            "logical_id": "HelmParser.Kube.Volume-8",
            "link_name": "volumes",
            "array_index": 3,
            "attributes": [
              {
                "aws_elastic_block_store": {
                  "type": "Kube.Volume.AwsElasticBlockStore",
                  "value": "COMMON.NONE"
                }
              },
              {
                "config_map": {
                  "type": "Kube.Volume.ConfigMap",
                  "value": "COMMON.NONE"
                }
              },
              {
                "downward_api": {
                  "type": "Kube.Volume.DownwardApi",
                  "value": "COMMON.NONE"
                }
              },
              {
                "ephemeral": {
                  "type": "Kube.Volume.Ephemeral",
                  "value": "COMMON.NONE"
                }
              },
              {
                "git_repo": {
                  "type": "Kube.Volume.GitRepo",
                  "value": "COMMON.NONE"
                }
              },
              {
                "host_path": {
                  "type": "Kube.Volume.HostPath",
                  "value": "COMMON.NONE"
                }
              },
              {
                "name": {
                  "value": "redis-tmp-conf",
                  "type": "Kube.Volume.Name"
                }
              },
              {
                "nfs": {
                  "type": "Kube.Volume.Nfs",
                  "value": "COMMON.NONE"
                }
              },
              {
                "persistent_volume_claim": {
                  "type": "Kube.Volume.PersistentVolumeClaim",
                  "value": "COMMON.NONE"
                }
              },
              {
                "projected": {
                  "type": "Kube.Volume.Projected",
                  "value": "COMMON.NONE"
                }
              },
              {
                "secret": {
                  "type": "Kube.Volume.Secret",
                  "value": "COMMON.NONE"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.Volume.EmptyDir",
                "fqdn": {
                  "internal_path": "template/volumes[3]/empty_dir",
                  "external_path": "spec/template/spec/volumes[3]/empty_dir"
                },
                "logical_id": "HelmParser.Kube.Volume.EmptyDir-2",
                "link_name": "empty_dir",
                "attributes": [
                  {
                    "medium": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  },
                  {
                    "size_limit": {
                      "value": "COMMON.NONE",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.StatefulSet.Update.Strategy",
        "fqdn": {
          "internal_path": "update_strategy",
          "external_path": "spec/update_strategy"
        },
        "logical_id": "HelmParser.Kube.StatefulSet.Update.Strategy-1",
        "link_name": "update_strategy",
        "attributes": [
          {
            "type": {
              "value": "RollingUpdate",
              "type": "BuiltinSort.Z3String"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.StatefulSet.Update.Strategy.Rolling.Update",
            "fqdn": {
              "internal_path": "update_strategy/rolling_update",
              "external_path": "spec/update_strategy/rolling_update"
            },
            "logical_id": "HelmParser.Kube.StatefulSet.Update.Strategy.Rolling.Update-1",
            "link_name": "rolling_update",
            "attributes": [
              {
                "partition": {
                  "value": "COMMON.NONE",
                  "type": "BuiltinSort.Z3String"
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Kube.PersistentVolumeClaim",
        "fqdn": {
          "internal_path": "volume_claim_templates[0]",
          "external_path": "spec/volume_claim_templates[0]"
        },
        "logical_id": "HelmParser.Kube.PersistentVolumeClaim-1",
        "link_name": "volume_claim_templates",
        "array_index": 0,
        "attributes": [
          {
            "access_modes": {
              "type": "Common.Array",
              "value": [
                "ReadWriteOnce"
              ],
              "element_type": "Kube.PersistentVolumeClaim.AccessMode.Item"
            }
          },
          {
            "annotations": {
              "type": "Kube.Annotations",
              "value": "COMMON.NONE"
            }
          },
          {
            "api_version": {
              "value": "COMMON.NONE",
              "type": "Kube.ApiVersion"
            }
          },
          {
            "data_source": {
              "type": "Kube.PersistentVolumeClaim.DataSource",
              "value": "COMMON.NONE"
            }
          },
          {
            "name": {
              "value": "redis-data",
              "type": "Kube.Name"
            }
          },
          {
            "namespace": {
              "value": "COMMON.NONE",
              "type": "Kube.Namespace"
            }
          },
          {
            "storage_class_name": {
              "value": "COMMON.NONE",
              "type": "Kube.PersistentVolumeClaim.StorageClassName"
            }
          },
          {
            "volume_mode": {
              "value": "COMMON.NONE",
              "type": "Kube.PersistentVolumeClaim.VolumeMode"
            }
          },
          {
            "volume_name": {
              "value": "COMMON.NONE",
              "type": "Kube.PersistentVolumeClaim.VolumeName"
            }
          }
        ],
        "components": [
          {
            "type": "Kube.Labels",
            "fqdn": {
              "internal_path": "volume_claim_templates[0]/labels",
              "external_path": "spec/volume_claim_templates[0]/metadata/labels"
            },
            "logical_id": "HelmParser.Kube.Labels-12",
            "link_name": "labels",
            "attributes_type": {
              "indexed": {
                "index_type": "Config.Name",
                "value_type": "Config.Value"
              }
            },
            "attributes": [
              {
                "app.kubernetes.io/component": {
                  "value": "replica"
                }
              },
              {
                "app.kubernetes.io/instance": {
                  "value": "redis"
                }
              },
              {
                "app.kubernetes.io/name": {
                  "value": "redis"
                }
              }
            ]
          },
          {
            "type": "Kube.PersistentVolumeClaim.Resources",
            "fqdn": {
              "internal_path": "volume_claim_templates[0]/resources",
              "external_path": "spec/volume_claim_templates[0]/spec/resources"
            },
            "logical_id": "HelmParser.Kube.PersistentVolumeClaim.Resources-1",
            "link_name": "resources",
            "attributes": [
              {
                "limits": {
                  "value": "COMMON.NONE",
                  "type": "Kube.PersistentVolumeClaim.ResourcesLimits"
                }
              }
            ],
            "components": [
              {
                "type": "Kube.PersistentVolumeClaim.ResourcesRequests",
                "logical_id": "HelmParser.Kube.PersistentVolumeClaim.ResourcesRequests-1",
                "link_name": "requests",
                "attributes": [
                  {
                    "storage": {
                      "value": "8Gi",
                      "type": "BuiltinSort.Z3String"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "links": [
      {
        "link_name": "_source",
        "endpoint_type": "Source.FilePath",
        "endpoints": [
          {
            "component_ref": {
              "logical_id": "Source.FilePath-13"
            }
          }
        ]
      }
    ]
  },
  {
    "type": "Source.FilePath",
    "logical_id": "HelmParser.Source.FilePath-0",
    "attributes": [
      {
        "Source.FilePath": {
          "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests",
          "type": "Any.String"
        }
      }
    ]
  },
  {
    "type": "Source.FilePath",
    "logical_id": "HelmParser.Source.FilePath-1",
    "attributes": [
      {
        "Source.FilePath": {
          "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/redis/templates/networkpolicy.yaml",
          "type": "Any.String"
        }
      }
    ]
  },
  {
    "type": "Source.FilePath",
    "logical_id": "HelmParser.Source.FilePath-2",
    "attributes": [
      {
        "Source.FilePath": {
          "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/redis/templates/servicemonitor.yaml",
          "type": "Any.String"
        }
      }
    ]
  },
  {
    "type": "Source.GitRepo",
    "logical_id": "Source.GitRepo-0",
    "attributes": [
      {
        "branch": {
          "type": "Any.String",
          "value": "rich_sprint44"
        }
      },
      {
        "provider": {
          "type": "Any.String",
          "value": "github.com"
        }
      },
      {
        "public": {
          "type": "BuiltinSort.Bool",
          "value": "true"
        }
      },
      {
        "url": {
          "type": "Any.String",
          "value": "https://github.com/dtk/ai-reasoner.git"
        }
      }
    ],
    "components": [
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-0",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/app/app.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-1",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/app/redis.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-2",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/app/app2.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-3",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/app/app1.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-4",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/ingress/ingress-examples.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-5",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/secret.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-6",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/configmap.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-7",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/health-configmap.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-8",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/scripts-configmap.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-9",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/headless-svc.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-10",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/service.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-11",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/service.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-12",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/statefulset.yaml"
            }
          }
        ]
      },
      {
        "type": "Source.FilePath",
        "logical_id": "Source.FilePath-13",
        "link_name": "_file_path",
        "attributes": [
          {
            "path": {
              "type": "Any.String",
              "value": "/root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/statefulset.yaml"
            }
          }
        ]
      }
    ]
  }
]
