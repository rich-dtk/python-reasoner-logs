Or(Not(DISTINCT_CONSTANTS-2),
   Distinct(node-app1-dep,
            redis-replicas,
            node-app2-dep,
            nginx-ingress-controller,
            COMMON.NONE,
            node-app1-secret,
            node-app2-secret,
            ingress1-matches-app1-with-default,
            test2,
            ingress2-simple-service-bad-default,
            node-app1-svc,
            redis-headless,
            nginx,
            ingress3-simple-fanout,
            example-node-app,
            redis-master,
            redis,
            node-app-svc,
            node-app2-svc))

Or(Not(DISTINCT_CONSTANTS-3),
   Not(Config.ManifestSet.Instantiation-0 == COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-4),
   Distinct(github.com,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/redis/templates/servicemonitor.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/configmap.yaml,
            https://github.com/dtk/ai-reasoner.git,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/health-configmap.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/service.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/redis/templates/networkpolicy.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/ingress/ingress-examples.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/scripts-configmap.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/app/app2.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/app/app1.yaml,
            COMMON.NONE,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/statefulset.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/app/redis.yaml,
            :,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/service.yaml,
            redis/templates/servicemonitor.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/secret.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/headless-svc.yaml,
            docker.io/,
            redis/templates/networkpolicy.yaml,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/statefulset.yaml,
            rich_sprint44,
            redis,
            /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/app/app.yaml))

Or(Not(DISTINCT_CONSTANTS-5),
   Distinct(image.pullSecrets,
            checksum/health,
            metrics.useServiceMonitor,
            metrics.isEnabled,
            app,
            app.kubernetes.io/component,
            helm.sh/chart,
            image.pullPolicy,
            app.kubernetes.io/name,
            nginx.ingress.kubernetes.io/rewrite-target,
            image.repository,
            checksum/secret,
            image.debug,
            master.containerPort,
            app.kubernetes.io/instance,
            networkPolicy.enabled,
            image.tag,
            checksum/configmap,
            master.service.type,
            app.kubernetes.io/managed-by,
            master.service.port,
            checksum/scripts))

Or(Not(DISTINCT_CONSTANTS-6),
   Distinct(ca4e8e130aadab2c76b7dbc7707864e4bddd395ff1b4a01265d442d879a9f5d9,
            redis-14.4.0,
            Helm,
            442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
            8679d9a94a8356d93113a80b6b831c94387f2b72e1c0688249d3327275c32b7d,
            node-app2,
            master,
            44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
            COMMON.NONE,
            bitnami/redis,
            6.2.4-debian-10-r13,
            False,
            replica,
            ExternalName,
            6379,
            redis-4.4.0,
            node-app1,
            redis,
            node,
            f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
            IfNotPresent,
            no_match_value,
            /))

Or(Not(DISTINCT_CONSTANTS-7), Not(default == COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-8),
   Distinct(DB_PORT,
            PORT,
            DB_HOST,
            DB_PASSWORD,
            ALLOW_EMPTY_PASSWORD,
            REDIS_PASSWORD,
            REDIS_MASTER_PASSWORD,
            REDIS_MASTER_PORT_NUMBER,
            BITNAMI_DEBUG,
            REDIS_MASTER_HOST,
            REDIS_PORT,
            REDIS_TLS_ENABLED,
            NODE_ENV,
            REDIS_REPLICATION_MODE))

Or(Not(DISTINCT_CONSTANTS-9),
   Distinct(6379, 8080, COMMON.NONE, 31112))

Or(Not(DISTINCT_CONSTANTS-10),
   Distinct(ca4e8e130aadab2c76b7dbc7707864e4bddd395ff1b4a01265d442d879a9f5d9,
            redis-14.4.0,
            442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
            Helm,
            8679d9a94a8356d93113a80b6b831c94387f2b72e1c0688249d3327275c32b7d,
            node-app2,
            master,
            44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
            COMMON.NONE,
            bitnami/redis,
            6.2.4-debian-10-r13,
            False,
            replica,
            ExternalName,
            6379,
            redis-4.4.0,
            node-app1,
            redis,
            node,
            f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
            IfNotPresent,
            no_match_value,
            /))

Or(Not(DISTINCT_CONSTANTS-11),
   Distinct(ca4e8e130aadab2c76b7dbc7707864e4bddd395ff1b4a01265d442d879a9f5d9,
            redis-14.4.0,
            442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634,
            Helm,
            8679d9a94a8356d93113a80b6b831c94387f2b72e1c0688249d3327275c32b7d,
            node-app2,
            master,
            44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6,
            COMMON.NONE,
            bitnami/redis,
            6.2.4-debian-10-r13,
            False,
            8081,
            replica,
            ExternalName,
            6379,
            redis-4.4.0,
            node-app1,
            redis,
            node,
            80,
            f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9,
            IfNotPresent,
            no_match_value,
            /))

Or(Not(DISTINCT_CONSTANTS-12),
   Distinct(http, COMMON.NONE, udp, scp, tcp, https))

Or(Not(DISTINCT_CONSTANTS-13),
   Distinct(KubernetesParser.Kube.Ingress.DefaultBackend-0,
            KubernetesParser.Kube.Ingress.DefaultBackend-1,
            COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-14),
   Distinct(KubernetesParser.Kube.Ingress.Backend.Service-2,
            KubernetesParser.Kube.Ingress.Backend.Service-3,
            KubernetesParser.Kube.Ingress.Backend.Service-4,
            KubernetesParser.Kube.Ingress.Backend.Service-0,
            KubernetesParser.Kube.Ingress.Backend.Service-1,
            KubernetesParser.Kube.Ingress.Backend.Service-5))

Or(Not(DISTINCT_CONSTANTS-15),
   Distinct(foo.bar.com, COMMON.NONE, *))

Or(Not(DISTINCT_CONSTANTS-16),
   Distinct(/testpath, /app1, /app2))

Or(Not(DISTINCT_CONSTANTS-17),
   Distinct(db_password, redis-password, COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-18),
   Distinct(HelmParser.Kube.Service-0,
            KubernetesParser.Kube.Service-1,
            KubernetesParser.Kube.Service-0,
            HelmParser.Kube.Service-1,
            HelmParser.Kube.Service-2))

Or(Not(DISTINCT_CONSTANTS-19), Not(Debug2 == Debug1))

Or(Not(DISTINCT_CONSTANTS-20),
   Not(redis == ingress_controller))

Or(Not(DISTINCT_CONSTANTS-21),
   Distinct(Secret, Deployment, StatefulSet))

Or(Not(BASE_FACT-2),
   image_name(KubernetesParser.App-0) == COMMON.NONE)

Or(Not(BASE_FACT-3),
   image_tag(KubernetesParser.App-0) == COMMON.NONE)

Or(Not(BASE_FACT-4),
   image_name(KubernetesParser.App-1) == COMMON.NONE)

Or(Not(BASE_FACT-5),
   image_tag(KubernetesParser.App-1) == COMMON.NONE)

Or(Not(BASE_FACT-6),
   name_with_version(redis-4.4.0) == redis-4.4.0)

Or(Not(PARENT_FACT-2),
   release(redis-4.4.0, redis-4.4.0/redis))

Or(Not(PARENT_FACT-3),
   And(_parent.Helm.Chart(redis-4.4.0/redis) == redis-4.4.0,
       _parent_type(redis-4.4.0/redis) == Helm.Chart))

Or(Not(BASE_FACT-7),
   annotations(KubernetesParser.Kube.Deployment-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-8),
   annotations(KubernetesParser.Kube.Pod.Template-0) ==
   COMMON.NONE)

Or(Not(PARENT_FACT-4),
   labels(KubernetesParser.Kube.Deployment-0) ==
   KubernetesParser.Kube.Labels-1)

Or(Not(PARENT_FACT-5),
   And(_parent.Kube.Deployment(KubernetesParser.Kube.Labels-1) ==
       KubernetesParser.Kube.Deployment-0,
       _parent_type(KubernetesParser.Kube.Labels-1) ==
       Kube.Deployment))

Or(Not(PARENT_FACT-6),
   Kube.Deployment.match_labels(KubernetesParser.Kube.Deployment-0,
                                KubernetesParser.Kube.Selector-1))

Or(Not(PARENT_FACT-7),
   And(_parent.Kube.Deployment(KubernetesParser.Kube.Selector-1) ==
       KubernetesParser.Kube.Deployment-0,
       _parent_type(KubernetesParser.Kube.Selector-1) ==
       Kube.Deployment))

Or(Not(PARENT_FACT-8),
   Kube.Deployment.template(KubernetesParser.Kube.Deployment-0) ==
   KubernetesParser.Kube.Pod.Template-0)

Or(Not(PARENT_FACT-9),
   And(_parent.Kube.Deployment(KubernetesParser.Kube.Pod.Template-0) ==
       KubernetesParser.Kube.Deployment-0,
       _parent_type(KubernetesParser.Kube.Pod.Template-0) ==
       Kube.Deployment))

Or(Not(BASE_FACT-9),
   annotations(KubernetesParser.Kube.Pod.Template-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-10),
   Kube.Container.command(KubernetesParser.Kube.Container-0) ==
   COMMON.NONE)

Or(Not(PARENT_FACT-10),
   Kube.Pod.Template.containers(KubernetesParser.Kube.Pod.Template-0,
                                KubernetesParser.Kube.Container-0))

Or(Not(PARENT_FACT-11),
   And(_parent.Kube.Pod.Template(KubernetesParser.Kube.Container-0) ==
       KubernetesParser.Kube.Pod.Template-0,
       _parent_type(KubernetesParser.Kube.Container-0) ==
       Kube.Pod.Template))

Or(Not(PARENT_FACT-12),
   labels(KubernetesParser.Kube.Pod.Template-0) ==
   KubernetesParser.Kube.Labels-2)

Or(Not(PARENT_FACT-13),
   And(_parent.Kube.Pod.Template(KubernetesParser.Kube.Labels-2) ==
       KubernetesParser.Kube.Pod.Template-0,
       _parent_type(KubernetesParser.Kube.Labels-2) ==
       Kube.Pod.Template))

Or(Not(BASE_FACT-11),
   Kube.Container.command(KubernetesParser.Kube.Container-0) ==
   COMMON.NONE)

Or(Not(PARENT_FACT-14),
   env_vars_config(KubernetesParser.Kube.Container-0) ==
   KubernetesParser.Kube.Container.EnvVarsConfig-0)

Or(Not(PARENT_FACT-15),
   And(_parent.Kube.Container(KubernetesParser.Kube.Container.EnvVarsConfig-0) ==
       KubernetesParser.Kube.Container-0,
       _parent_type(KubernetesParser.Kube.Container.EnvVarsConfig-0) ==
       Kube.Container))

Or(Not(PARENT_FACT-16),
   Kube.Container.ports(KubernetesParser.Kube.Container-0,
                        KubernetesParser.Kube.Container.PortItem-0))

Or(Not(PARENT_FACT-17),
   And(_parent.Kube.Container(KubernetesParser.Kube.Container.PortItem-0) ==
       KubernetesParser.Kube.Container-0,
       _parent_type(KubernetesParser.Kube.Container.PortItem-0) ==
       Kube.Container))

Or(Not(BASE_FACT-12),
   annotations(KubernetesParser.Kube.Deployment-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-13),
   annotations(KubernetesParser.Kube.Pod.Template-1) ==
   COMMON.NONE)

Or(Not(PARENT_FACT-18),
   labels(KubernetesParser.Kube.Deployment-1) ==
   KubernetesParser.Kube.Labels-4)

Or(Not(PARENT_FACT-19),
   And(_parent.Kube.Deployment(KubernetesParser.Kube.Labels-4) ==
       KubernetesParser.Kube.Deployment-1,
       _parent_type(KubernetesParser.Kube.Labels-4) ==
       Kube.Deployment))

Or(Not(PARENT_FACT-20),
   Kube.Deployment.match_labels(KubernetesParser.Kube.Deployment-1,
                                KubernetesParser.Kube.Selector-3))

Or(Not(PARENT_FACT-21),
   And(_parent.Kube.Deployment(KubernetesParser.Kube.Selector-3) ==
       KubernetesParser.Kube.Deployment-1,
       _parent_type(KubernetesParser.Kube.Selector-3) ==
       Kube.Deployment))

Or(Not(PARENT_FACT-22),
   Kube.Deployment.template(KubernetesParser.Kube.Deployment-1) ==
   KubernetesParser.Kube.Pod.Template-1)

Or(Not(PARENT_FACT-23),
   And(_parent.Kube.Deployment(KubernetesParser.Kube.Pod.Template-1) ==
       KubernetesParser.Kube.Deployment-1,
       _parent_type(KubernetesParser.Kube.Pod.Template-1) ==
       Kube.Deployment))

Or(Not(BASE_FACT-14),
   annotations(KubernetesParser.Kube.Pod.Template-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-15),
   Kube.Container.command(KubernetesParser.Kube.Container-1) ==
   COMMON.NONE)

Or(Not(PARENT_FACT-24),
   Kube.Pod.Template.containers(KubernetesParser.Kube.Pod.Template-1,
                                KubernetesParser.Kube.Container-1))

Or(Not(PARENT_FACT-25),
   And(_parent.Kube.Pod.Template(KubernetesParser.Kube.Container-1) ==
       KubernetesParser.Kube.Pod.Template-1,
       _parent_type(KubernetesParser.Kube.Container-1) ==
       Kube.Pod.Template))

Or(Not(PARENT_FACT-26),
   labels(KubernetesParser.Kube.Pod.Template-1) ==
   KubernetesParser.Kube.Labels-5)

Or(Not(PARENT_FACT-27),
   And(_parent.Kube.Pod.Template(KubernetesParser.Kube.Labels-5) ==
       KubernetesParser.Kube.Pod.Template-1,
       _parent_type(KubernetesParser.Kube.Labels-5) ==
       Kube.Pod.Template))

Or(Not(BASE_FACT-16),
   Kube.Container.command(KubernetesParser.Kube.Container-1) ==
   COMMON.NONE)

Or(Not(PARENT_FACT-28),
   env_vars_config(KubernetesParser.Kube.Container-1) ==
   KubernetesParser.Kube.Container.EnvVarsConfig-1)

Or(Not(PARENT_FACT-29),
   And(_parent.Kube.Container(KubernetesParser.Kube.Container.EnvVarsConfig-1) ==
       KubernetesParser.Kube.Container-1,
       _parent_type(KubernetesParser.Kube.Container.EnvVarsConfig-1) ==
       Kube.Container))

Or(Not(PARENT_FACT-30),
   Kube.Container.ports(KubernetesParser.Kube.Container-1,
                        KubernetesParser.Kube.Container.PortItem-1))

Or(Not(PARENT_FACT-31),
   And(_parent.Kube.Container(KubernetesParser.Kube.Container.PortItem-1) ==
       KubernetesParser.Kube.Container-1,
       _parent_type(KubernetesParser.Kube.Container.PortItem-1) ==
       Kube.Container))

Or(Not(BASE_FACT-17),
   labels(KubernetesParser.Kube.Ingress-0) == COMMON.NONE)

Or(Not(PARENT_FACT-32),
   annotations(KubernetesParser.Kube.Ingress-0) ==
   KubernetesParser.Kube.Annotations-0)

Or(Not(PARENT_FACT-33),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Annotations-0) ==
       KubernetesParser.Kube.Ingress-0,
       _parent_type(KubernetesParser.Kube.Annotations-0) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-34),
   default_backend(KubernetesParser.Kube.Ingress-0) ==
   KubernetesParser.Kube.Ingress.DefaultBackend-0)

Or(Not(PARENT_FACT-35),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Ingress.DefaultBackend-0) ==
       KubernetesParser.Kube.Ingress-0,
       _parent_type(KubernetesParser.Kube.Ingress.DefaultBackend-0) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-36),
   Kube.Ingress.rules(KubernetesParser.Kube.Ingress-0,
                      KubernetesParser.Kube.Ingress.Rule-0))

Or(Not(PARENT_FACT-37),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Ingress.Rule-0) ==
       KubernetesParser.Kube.Ingress-0,
       _parent_type(KubernetesParser.Kube.Ingress.Rule-0) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-38),
   Kube.Ingress.Rule.paths(KubernetesParser.Kube.Ingress.Rule-0,
                           KubernetesParser.Kube.Ingress.Rule.HttpPath-0))

Or(Not(PARENT_FACT-39),
   And(_parent.Kube.Ingress.Rule(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
       KubernetesParser.Kube.Ingress.Rule-0,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
       Kube.Ingress.Rule))

Or(Not(BASE_FACT-18),
   labels(KubernetesParser.Kube.Ingress-1) == COMMON.NONE)

Or(Not(PARENT_FACT-40),
   annotations(KubernetesParser.Kube.Ingress-1) ==
   KubernetesParser.Kube.Annotations-1)

Or(Not(PARENT_FACT-41),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Annotations-1) ==
       KubernetesParser.Kube.Ingress-1,
       _parent_type(KubernetesParser.Kube.Annotations-1) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-42),
   default_backend(KubernetesParser.Kube.Ingress-1) ==
   KubernetesParser.Kube.Ingress.DefaultBackend-1)

Or(Not(PARENT_FACT-43),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Ingress.DefaultBackend-1) ==
       KubernetesParser.Kube.Ingress-1,
       _parent_type(KubernetesParser.Kube.Ingress.DefaultBackend-1) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-44),
   Kube.Ingress.rules(KubernetesParser.Kube.Ingress-1,
                      KubernetesParser.Kube.Ingress.Rule-1))

Or(Not(PARENT_FACT-45),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Ingress.Rule-1) ==
       KubernetesParser.Kube.Ingress-1,
       _parent_type(KubernetesParser.Kube.Ingress.Rule-1) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-46),
   Kube.Ingress.Rule.paths(KubernetesParser.Kube.Ingress.Rule-1,
                           KubernetesParser.Kube.Ingress.Rule.HttpPath-1))

Or(Not(PARENT_FACT-47),
   And(_parent.Kube.Ingress.Rule(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
       KubernetesParser.Kube.Ingress.Rule-1,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
       Kube.Ingress.Rule))

Or(Not(BASE_FACT-19),
   default_backend(KubernetesParser.Kube.Ingress-2) ==
   COMMON.NONE)

Or(Not(BASE_FACT-20),
   labels(KubernetesParser.Kube.Ingress-2) == COMMON.NONE)

Or(Not(PARENT_FACT-48),
   annotations(KubernetesParser.Kube.Ingress-2) ==
   KubernetesParser.Kube.Annotations-2)

Or(Not(PARENT_FACT-49),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Annotations-2) ==
       KubernetesParser.Kube.Ingress-2,
       _parent_type(KubernetesParser.Kube.Annotations-2) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-50),
   Kube.Ingress.rules(KubernetesParser.Kube.Ingress-2,
                      KubernetesParser.Kube.Ingress.Rule-2))

Or(Not(PARENT_FACT-51),
   And(_parent.Kube.Ingress(KubernetesParser.Kube.Ingress.Rule-2) ==
       KubernetesParser.Kube.Ingress-2,
       _parent_type(KubernetesParser.Kube.Ingress.Rule-2) ==
       Kube.Ingress))

Or(Not(PARENT_FACT-52),
   And(Kube.Ingress.Rule.paths(KubernetesParser.Kube.Ingress.Rule-2,
                               KubernetesParser.Kube.Ingress.Rule.HttpPath-2),
       Kube.Ingress.Rule.paths(KubernetesParser.Kube.Ingress.Rule-2,
                               KubernetesParser.Kube.Ingress.Rule.HttpPath-3)))

Or(Not(PARENT_FACT-53),
   And(_parent.Kube.Ingress.Rule(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
       KubernetesParser.Kube.Ingress.Rule-2,
       _parent.Kube.Ingress.Rule(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
       KubernetesParser.Kube.Ingress.Rule-2,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
       Kube.Ingress.Rule,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
       Kube.Ingress.Rule))

Or(Not(BASE_FACT-21),
   annotations(HelmParser.Kube.Secret-0) == COMMON.NONE)

Or(Not(BASE_FACT-22),
   key_names(HelmParser.Kube.Secret-0, redis-password))

Or(Not(BASE_FACT-23),
   string_data_key(HelmParser.Kube.Secret-0) == COMMON.NONE)

Or(Not(PARENT_FACT-54),
   labels(HelmParser.Kube.Secret-0) ==
   HelmParser.Kube.Labels-0)

Or(Not(PARENT_FACT-55),
   And(_parent.Kube.Secret(HelmParser.Kube.Labels-0) ==
       HelmParser.Kube.Secret-0,
       _parent_type(HelmParser.Kube.Labels-0) == Kube.Secret))

Or(Not(BASE_FACT-24),
   annotations(KubernetesParser.Kube.Secret-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-25),
   key_names(KubernetesParser.Kube.Secret-0, db_password))

Or(Not(BASE_FACT-26),
   labels(KubernetesParser.Kube.Secret-0) == COMMON.NONE)

Or(Not(BASE_FACT-27),
   string_data_key(KubernetesParser.Kube.Secret-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-28),
   annotations(KubernetesParser.Kube.Secret-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-29),
   key_names(KubernetesParser.Kube.Secret-1, db_password))

Or(Not(BASE_FACT-30),
   labels(KubernetesParser.Kube.Secret-1) == COMMON.NONE)

Or(Not(BASE_FACT-31),
   string_data_key(KubernetesParser.Kube.Secret-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-32),
   annotations(HelmParser.Kube.Service-0) == COMMON.NONE)

Or(Not(BASE_FACT-33),
   Kube.Service.type(HelmParser.Kube.Service-0) == ClusterIP)

Or(Not(PARENT_FACT-56),
   labels(HelmParser.Kube.Service-0) ==
   HelmParser.Kube.Labels-4)

Or(Not(PARENT_FACT-57),
   And(_parent.Kube.Service(HelmParser.Kube.Labels-4) ==
       HelmParser.Kube.Service-0,
       _parent_type(HelmParser.Kube.Labels-4) ==
       Kube.Service))

Or(Not(PARENT_FACT-58),
   ports(HelmParser.Kube.Service-0,
         HelmParser.Kube.Service.ServicePort-0))

Or(Not(PARENT_FACT-59),
   And(_parent.Kube.Service(HelmParser.Kube.Service.ServicePort-0) ==
       HelmParser.Kube.Service-0,
       _parent_type(HelmParser.Kube.Service.ServicePort-0) ==
       Kube.Service))

Or(Not(PARENT_FACT-60),
   And(selector(HelmParser.Kube.Service-0,
                HelmParser.Kube.Selector-0),
       selector(HelmParser.Kube.Service-0,
                HelmParser.Kube.Selector-1)))

Or(Not(PARENT_FACT-61),
   And(_parent.Kube.Service(HelmParser.Kube.Selector-0) ==
       HelmParser.Kube.Service-0,
       _parent.Kube.Service(HelmParser.Kube.Selector-1) ==
       HelmParser.Kube.Service-0,
       _parent_type(HelmParser.Kube.Selector-0) ==
       Kube.Service,
       _parent_type(HelmParser.Kube.Selector-1) ==
       Kube.Service))

Or(Not(BASE_FACT-34),
   annotations(HelmParser.Kube.Service-1) == COMMON.NONE)

Or(Not(BASE_FACT-35),
   Kube.Service.type(HelmParser.Kube.Service-1) ==
   ExternalName)

Or(Not(PARENT_FACT-62),
   labels(HelmParser.Kube.Service-1) ==
   HelmParser.Kube.Labels-5)

Or(Not(PARENT_FACT-63),
   And(_parent.Kube.Service(HelmParser.Kube.Labels-5) ==
       HelmParser.Kube.Service-1,
       _parent_type(HelmParser.Kube.Labels-5) ==
       Kube.Service))

Or(Not(PARENT_FACT-64),
   ports(HelmParser.Kube.Service-1,
         HelmParser.Kube.Service.ServicePort-1))

Or(Not(PARENT_FACT-65),
   And(_parent.Kube.Service(HelmParser.Kube.Service.ServicePort-1) ==
       HelmParser.Kube.Service-1,
       _parent_type(HelmParser.Kube.Service.ServicePort-1) ==
       Kube.Service))

Or(Not(PARENT_FACT-66),
   And(selector(HelmParser.Kube.Service-1,
                HelmParser.Kube.Selector-2),
       selector(HelmParser.Kube.Service-1,
                HelmParser.Kube.Selector-3),
       selector(HelmParser.Kube.Service-1,
                HelmParser.Kube.Selector-4)))

Or(Not(PARENT_FACT-67),
   And(_parent.Kube.Service(HelmParser.Kube.Selector-2) ==
       HelmParser.Kube.Service-1,
       _parent.Kube.Service(HelmParser.Kube.Selector-3) ==
       HelmParser.Kube.Service-1,
       _parent.Kube.Service(HelmParser.Kube.Selector-4) ==
       HelmParser.Kube.Service-1,
       _parent_type(HelmParser.Kube.Selector-2) ==
       Kube.Service,
       _parent_type(HelmParser.Kube.Selector-3) ==
       Kube.Service,
       _parent_type(HelmParser.Kube.Selector-4) ==
       Kube.Service))

Or(Not(BASE_FACT-36),
   annotations(HelmParser.Kube.Service-2) == COMMON.NONE)

Or(Not(BASE_FACT-37),
   Kube.Service.type(HelmParser.Kube.Service-2) == ClusterIP)

Or(Not(PARENT_FACT-68),
   labels(HelmParser.Kube.Service-2) ==
   HelmParser.Kube.Labels-6)

Or(Not(PARENT_FACT-69),
   And(_parent.Kube.Service(HelmParser.Kube.Labels-6) ==
       HelmParser.Kube.Service-2,
       _parent_type(HelmParser.Kube.Labels-6) ==
       Kube.Service))

Or(Not(PARENT_FACT-70),
   ports(HelmParser.Kube.Service-2,
         HelmParser.Kube.Service.ServicePort-2))

Or(Not(PARENT_FACT-71),
   And(_parent.Kube.Service(HelmParser.Kube.Service.ServicePort-2) ==
       HelmParser.Kube.Service-2,
       _parent_type(HelmParser.Kube.Service.ServicePort-2) ==
       Kube.Service))

Or(Not(PARENT_FACT-72),
   And(selector(HelmParser.Kube.Service-2,
                HelmParser.Kube.Selector-5),
       selector(HelmParser.Kube.Service-2,
                HelmParser.Kube.Selector-6),
       selector(HelmParser.Kube.Service-2,
                HelmParser.Kube.Selector-7)))

Or(Not(PARENT_FACT-73),
   And(_parent.Kube.Service(HelmParser.Kube.Selector-5) ==
       HelmParser.Kube.Service-2,
       _parent.Kube.Service(HelmParser.Kube.Selector-6) ==
       HelmParser.Kube.Service-2,
       _parent.Kube.Service(HelmParser.Kube.Selector-7) ==
       HelmParser.Kube.Service-2,
       _parent_type(HelmParser.Kube.Selector-5) ==
       Kube.Service,
       _parent_type(HelmParser.Kube.Selector-6) ==
       Kube.Service,
       _parent_type(HelmParser.Kube.Selector-7) ==
       Kube.Service))

Or(Not(BASE_FACT-38),
   annotations(KubernetesParser.Kube.Service-0) ==
   COMMON.NONE)

Or(Not(BASE_FACT-39),
   Kube.Service.type(KubernetesParser.Kube.Service-0) ==
   NodePort)

Or(Not(PARENT_FACT-74),
   labels(KubernetesParser.Kube.Service-0) ==
   KubernetesParser.Kube.Labels-0)

Or(Not(PARENT_FACT-75),
   And(_parent.Kube.Service(KubernetesParser.Kube.Labels-0) ==
       KubernetesParser.Kube.Service-0,
       _parent_type(KubernetesParser.Kube.Labels-0) ==
       Kube.Service))

Or(Not(PARENT_FACT-76),
   ports(KubernetesParser.Kube.Service-0,
         KubernetesParser.Kube.Service.ServicePort-0))

Or(Not(PARENT_FACT-77),
   And(_parent.Kube.Service(KubernetesParser.Kube.Service.ServicePort-0) ==
       KubernetesParser.Kube.Service-0,
       _parent_type(KubernetesParser.Kube.Service.ServicePort-0) ==
       Kube.Service))

Or(Not(PARENT_FACT-78),
   selector(KubernetesParser.Kube.Service-0,
            KubernetesParser.Kube.Selector-0))

Or(Not(PARENT_FACT-79),
   And(_parent.Kube.Service(KubernetesParser.Kube.Selector-0) ==
       KubernetesParser.Kube.Service-0,
       _parent_type(KubernetesParser.Kube.Selector-0) ==
       Kube.Service))

Or(Not(BASE_FACT-40),
   annotations(KubernetesParser.Kube.Service-1) ==
   COMMON.NONE)

Or(Not(BASE_FACT-41),
   Kube.Service.type(KubernetesParser.Kube.Service-1) ==
   NodePort)

Or(Not(PARENT_FACT-80),
   labels(KubernetesParser.Kube.Service-1) ==
   KubernetesParser.Kube.Labels-3)

Or(Not(PARENT_FACT-81),
   And(_parent.Kube.Service(KubernetesParser.Kube.Labels-3) ==
       KubernetesParser.Kube.Service-1,
       _parent_type(KubernetesParser.Kube.Labels-3) ==
       Kube.Service))

Or(Not(PARENT_FACT-82),
   ports(KubernetesParser.Kube.Service-1,
         KubernetesParser.Kube.Service.ServicePort-1))

Or(Not(PARENT_FACT-83),
   And(_parent.Kube.Service(KubernetesParser.Kube.Service.ServicePort-1) ==
       KubernetesParser.Kube.Service-1,
       _parent_type(KubernetesParser.Kube.Service.ServicePort-1) ==
       Kube.Service))

Or(Not(PARENT_FACT-84),
   selector(KubernetesParser.Kube.Service-1,
            KubernetesParser.Kube.Selector-2))

Or(Not(PARENT_FACT-85),
   And(_parent.Kube.Service(KubernetesParser.Kube.Selector-2) ==
       KubernetesParser.Kube.Service-1,
       _parent_type(KubernetesParser.Kube.Selector-2) ==
       Kube.Service))

Or(Not(BASE_FACT-42),
   annotations(HelmParser.Kube.StatefulSet-0) == COMMON.NONE)

Or(Not(PARENT_FACT-86),
   labels(HelmParser.Kube.StatefulSet-0) ==
   HelmParser.Kube.Labels-7)

Or(Not(PARENT_FACT-87),
   And(_parent.Kube.StatefulSet(HelmParser.Kube.Labels-7) ==
       HelmParser.Kube.StatefulSet-0,
       _parent_type(HelmParser.Kube.Labels-7) ==
       Kube.StatefulSet))

Or(Not(PARENT_FACT-88),
   And(Kube.StatefulSet.match_labels(HelmParser.Kube.StatefulSet-0,
                                     HelmParser.Kube.Selector-8),
       Kube.StatefulSet.match_labels(HelmParser.Kube.StatefulSet-0,
                                     HelmParser.Kube.Selector-9),
       Kube.StatefulSet.match_labels(HelmParser.Kube.StatefulSet-0,
                                     HelmParser.Kube.Selector-10)))

Or(Not(PARENT_FACT-89),
   And(_parent.Kube.StatefulSet(HelmParser.Kube.Selector-8) ==
       HelmParser.Kube.StatefulSet-0,
       _parent.Kube.StatefulSet(HelmParser.Kube.Selector-9) ==
       HelmParser.Kube.StatefulSet-0,
       _parent.Kube.StatefulSet(HelmParser.Kube.Selector-10) ==
       HelmParser.Kube.StatefulSet-0,
       _parent_type(HelmParser.Kube.Selector-8) ==
       Kube.StatefulSet,
       _parent_type(HelmParser.Kube.Selector-9) ==
       Kube.StatefulSet,
       _parent_type(HelmParser.Kube.Selector-10) ==
       Kube.StatefulSet))

Or(Not(PARENT_FACT-90),
   Kube.StatefulSet.template(HelmParser.Kube.StatefulSet-0) ==
   HelmParser.Kube.Pod.Template-0)

Or(Not(PARENT_FACT-91),
   And(_parent.Kube.StatefulSet(HelmParser.Kube.Pod.Template-0) ==
       HelmParser.Kube.StatefulSet-0,
       _parent_type(HelmParser.Kube.Pod.Template-0) ==
       Kube.StatefulSet))

Or(Not(BASE_FACT-43),
   Kube.Container.command(HelmParser.Kube.Container-0) ==
   ["/bin/bash"])

Or(Not(PARENT_FACT-92),
   annotations(HelmParser.Kube.Pod.Template-0) ==
   HelmParser.Kube.Annotations-0)

Or(Not(PARENT_FACT-93),
   And(_parent.Kube.Pod.Template(HelmParser.Kube.Annotations-0) ==
       HelmParser.Kube.Pod.Template-0,
       _parent_type(HelmParser.Kube.Annotations-0) ==
       Kube.Pod.Template))

Or(Not(PARENT_FACT-94),
   Kube.Pod.Template.containers(HelmParser.Kube.Pod.Template-0,
                                HelmParser.Kube.Container-0))

Or(Not(PARENT_FACT-95),
   And(_parent.Kube.Pod.Template(HelmParser.Kube.Container-0) ==
       HelmParser.Kube.Pod.Template-0,
       _parent_type(HelmParser.Kube.Container-0) ==
       Kube.Pod.Template))

Or(Not(PARENT_FACT-96),
   labels(HelmParser.Kube.Pod.Template-0) ==
   HelmParser.Kube.Labels-8)

Or(Not(PARENT_FACT-97),
   And(_parent.Kube.Pod.Template(HelmParser.Kube.Labels-8) ==
       HelmParser.Kube.Pod.Template-0,
       _parent_type(HelmParser.Kube.Labels-8) ==
       Kube.Pod.Template))

Or(Not(BASE_FACT-44),
   Kube.Container.command(HelmParser.Kube.Container-0) ==
   ["/bin/bash"])

Or(Not(PARENT_FACT-98),
   env_vars_config(HelmParser.Kube.Container-0) ==
   HelmParser.Kube.Container.EnvVarsConfig-0)

Or(Not(PARENT_FACT-99),
   And(_parent.Kube.Container(HelmParser.Kube.Container.EnvVarsConfig-0) ==
       HelmParser.Kube.Container-0,
       _parent_type(HelmParser.Kube.Container.EnvVarsConfig-0) ==
       Kube.Container))

Or(Not(PARENT_FACT-100),
   Kube.Container.ports(HelmParser.Kube.Container-0,
                        HelmParser.Kube.Container.PortItem-0))

Or(Not(PARENT_FACT-101),
   And(_parent.Kube.Container(HelmParser.Kube.Container.PortItem-0) ==
       HelmParser.Kube.Container-0,
       _parent_type(HelmParser.Kube.Container.PortItem-0) ==
       Kube.Container))

Or(Not(BASE_FACT-45),
   annotations(HelmParser.Kube.StatefulSet-1) == COMMON.NONE)

Or(Not(PARENT_FACT-102),
   labels(HelmParser.Kube.StatefulSet-1) ==
   HelmParser.Kube.Labels-10)

Or(Not(PARENT_FACT-103),
   And(_parent.Kube.StatefulSet(HelmParser.Kube.Labels-10) ==
       HelmParser.Kube.StatefulSet-1,
       _parent_type(HelmParser.Kube.Labels-10) ==
       Kube.StatefulSet))

Or(Not(PARENT_FACT-104),
   And(Kube.StatefulSet.match_labels(HelmParser.Kube.StatefulSet-1,
                                     HelmParser.Kube.Selector-11),
       Kube.StatefulSet.match_labels(HelmParser.Kube.StatefulSet-1,
                                     HelmParser.Kube.Selector-12),
       Kube.StatefulSet.match_labels(HelmParser.Kube.StatefulSet-1,
                                     HelmParser.Kube.Selector-13)))

Or(Not(PARENT_FACT-105),
   And(_parent.Kube.StatefulSet(HelmParser.Kube.Selector-11) ==
       HelmParser.Kube.StatefulSet-1,
       _parent.Kube.StatefulSet(HelmParser.Kube.Selector-12) ==
       HelmParser.Kube.StatefulSet-1,
       _parent.Kube.StatefulSet(HelmParser.Kube.Selector-13) ==
       HelmParser.Kube.StatefulSet-1,
       _parent_type(HelmParser.Kube.Selector-11) ==
       Kube.StatefulSet,
       _parent_type(HelmParser.Kube.Selector-12) ==
       Kube.StatefulSet,
       _parent_type(HelmParser.Kube.Selector-13) ==
       Kube.StatefulSet))

Or(Not(PARENT_FACT-106),
   Kube.StatefulSet.template(HelmParser.Kube.StatefulSet-1) ==
   HelmParser.Kube.Pod.Template-1)

Or(Not(PARENT_FACT-107),
   And(_parent.Kube.StatefulSet(HelmParser.Kube.Pod.Template-1) ==
       HelmParser.Kube.StatefulSet-1,
       _parent_type(HelmParser.Kube.Pod.Template-1) ==
       Kube.StatefulSet))

Or(Not(BASE_FACT-46),
   Kube.Container.command(HelmParser.Kube.Container-1) ==
   ["/bin/bash"])

Or(Not(PARENT_FACT-108),
   annotations(HelmParser.Kube.Pod.Template-1) ==
   HelmParser.Kube.Annotations-1)

Or(Not(PARENT_FACT-109),
   And(_parent.Kube.Pod.Template(HelmParser.Kube.Annotations-1) ==
       HelmParser.Kube.Pod.Template-1,
       _parent_type(HelmParser.Kube.Annotations-1) ==
       Kube.Pod.Template))

Or(Not(PARENT_FACT-110),
   Kube.Pod.Template.containers(HelmParser.Kube.Pod.Template-1,
                                HelmParser.Kube.Container-1))

Or(Not(PARENT_FACT-111),
   And(_parent.Kube.Pod.Template(HelmParser.Kube.Container-1) ==
       HelmParser.Kube.Pod.Template-1,
       _parent_type(HelmParser.Kube.Container-1) ==
       Kube.Pod.Template))

Or(Not(PARENT_FACT-112),
   labels(HelmParser.Kube.Pod.Template-1) ==
   HelmParser.Kube.Labels-11)

Or(Not(PARENT_FACT-113),
   And(_parent.Kube.Pod.Template(HelmParser.Kube.Labels-11) ==
       HelmParser.Kube.Pod.Template-1,
       _parent_type(HelmParser.Kube.Labels-11) ==
       Kube.Pod.Template))

Or(Not(BASE_FACT-47),
   Kube.Container.command(HelmParser.Kube.Container-1) ==
   ["/bin/bash"])

Or(Not(PARENT_FACT-114),
   env_vars_config(HelmParser.Kube.Container-1) ==
   HelmParser.Kube.Container.EnvVarsConfig-1)

Or(Not(PARENT_FACT-115),
   And(_parent.Kube.Container(HelmParser.Kube.Container.EnvVarsConfig-1) ==
       HelmParser.Kube.Container-1,
       _parent_type(HelmParser.Kube.Container.EnvVarsConfig-1) ==
       Kube.Container))

Or(Not(PARENT_FACT-116),
   Kube.Container.ports(HelmParser.Kube.Container-1,
                        HelmParser.Kube.Container.PortItem-1))

Or(Not(PARENT_FACT-117),
   And(_parent.Kube.Container(HelmParser.Kube.Container.PortItem-1) ==
       HelmParser.Kube.Container-1,
       _parent_type(HelmParser.Kube.Container.PortItem-1) ==
       Kube.Container))

Or(Not(STRUCT_FACT-2),
   name(KubernetesParser.App-0) == example-node-app)

Or(Not(STRUCT_FACT-3),
   namespace(KubernetesParser.App-0) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(DISTINCT_CONSTANTS-22),
   Not(namespace(Config.ManifestSet.Instantiation-0) ==
       COMMON.NONE))

Or(Not(STRUCT_FACT-4),
   name(KubernetesParser.App-1) == redis)

Or(Not(STRUCT_FACT-5),
   namespace(KubernetesParser.App-1) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-6),
   path(HelmParser.Helm.Template-0) ==
   redis/templates/networkpolicy.yaml)

Or(Not(STRUCT_FACT-7),
   exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0) ==
   cast_to_builtin_sort_bool(default_manifest_value(networkPolicy.enabled)))

Or(Not(TYPE_CAST_FACT-2),
   cast_to_builtin_sort_bool(default_manifest_value(networkPolicy.enabled)) ==
   False)

Or(Not(STRUCT_FACT-8),
   path(HelmParser.Helm.Template-1) ==
   redis/templates/servicemonitor.yaml)

Or(Not(STRUCT_FACT-9),
   exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1) ==
   __and(default_manifest_value(metrics.isEnabled),
         __not(default_manifest_value(metrics.useServiceMonitor))))

Or(Not(STRUCT_FACT-10),
   release_name(redis-4.4.0/redis) == redis)

Or(Not(STRUCT_FACT-11),
   manifest_set(redis-4.4.0/redis) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-12),
   image.debug(HelmParser.Helm.Chart.Release.Values-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-13),
   image.pullPolicy(HelmParser.Helm.Chart.Release.Values-0) ==
   IfNotPresent)

Or(Not(STRUCT_FACT-14),
   image.pullSecrets(HelmParser.Helm.Chart.Release.Values-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-15),
   image.repository(HelmParser.Helm.Chart.Release.Values-0) ==
   bitnami/redis)

Or(Not(STRUCT_FACT-16),
   image.tag(HelmParser.Helm.Chart.Release.Values-0) ==
   6.2.4-debian-10-r13)

Or(Not(STRUCT_FACT-17),
   master.containerPort(HelmParser.Helm.Chart.Release.Values-0) ==
   6379)

Or(Not(STRUCT_FACT-18),
   master.service.port(HelmParser.Helm.Chart.Release.Values-0) ==
   6379)

Or(Not(STRUCT_FACT-19),
   master.service.type(HelmParser.Helm.Chart.Release.Values-0) ==
   ExternalName)

Or(Not(STRUCT_FACT-20),
   metrics.isEnabled(HelmParser.Helm.Chart.Release.Values-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-21),
   metrics.useServiceMonitor(HelmParser.Helm.Chart.Release.Values-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-22),
   networkPolicy.enabled(HelmParser.Helm.Chart.Release.Values-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-23),
   value(HelmParser.Kube.Labels-1,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-24),
   value(HelmParser.Kube.Labels-1,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-25),
   value(HelmParser.Kube.Labels-1, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-26),
   value(HelmParser.Kube.Labels-1, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-27),
   has_key(HelmParser.Kube.Labels-1,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-28),
   has_key(HelmParser.Kube.Labels-1,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-29),
   has_key(HelmParser.Kube.Labels-1, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-30),
   has_key(HelmParser.Kube.Labels-1, helm.sh/chart))

Or(Not(STRUCT_FACT-31),
   ForAll(c!0,
          Or(Not(has_key(HelmParser.Kube.Labels-1, c!0)),
             c!0 == helm.sh/chart,
             c!0 == app.kubernetes.io/name,
             c!0 == app.kubernetes.io/managed-by,
             c!0 == app.kubernetes.io/instance)))

Or(Not(STRUCT_FACT-32),
   value(HelmParser.Kube.Labels-2,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-33),
   value(HelmParser.Kube.Labels-2,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-34),
   value(HelmParser.Kube.Labels-2, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-35),
   value(HelmParser.Kube.Labels-2, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-36),
   has_key(HelmParser.Kube.Labels-2,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-37),
   has_key(HelmParser.Kube.Labels-2,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-38),
   has_key(HelmParser.Kube.Labels-2, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-39),
   has_key(HelmParser.Kube.Labels-2, helm.sh/chart))

Or(Not(STRUCT_FACT-40),
   ForAll(c!1,
          Or(c!1 == helm.sh/chart,
             c!1 == app.kubernetes.io/name,
             c!1 == app.kubernetes.io/managed-by,
             c!1 == app.kubernetes.io/instance,
             Not(has_key(HelmParser.Kube.Labels-2, c!1)))))

Or(Not(STRUCT_FACT-41),
   value(HelmParser.Kube.Labels-3,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-42),
   value(HelmParser.Kube.Labels-3,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-43),
   value(HelmParser.Kube.Labels-3, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-44),
   value(HelmParser.Kube.Labels-3, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-45),
   has_key(HelmParser.Kube.Labels-3,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-46),
   has_key(HelmParser.Kube.Labels-3,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-47),
   has_key(HelmParser.Kube.Labels-3, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-48),
   has_key(HelmParser.Kube.Labels-3, helm.sh/chart))

Or(Not(STRUCT_FACT-49),
   ForAll(c!2,
          Or(c!2 == helm.sh/chart,
             c!2 == app.kubernetes.io/name,
             c!2 == app.kubernetes.io/managed-by,
             c!2 == app.kubernetes.io/instance,
             Not(has_key(HelmParser.Kube.Labels-3, c!2)))))

Or(Not(STRUCT_FACT-50),
   name(KubernetesParser.Kube.Deployment-0) == node-app2-dep)

Or(Not(STRUCT_FACT-51),
   namespace(KubernetesParser.Kube.Deployment-0) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-52),
   manifest_set(KubernetesParser.Kube.Deployment-0) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-53),
   api_version(KubernetesParser.Kube.Deployment-0) ==
   apps/v1)

Or(Not(STRUCT_FACT-54),
   value(KubernetesParser.Kube.Labels-1, app) == node)

Or(Not(STRUCT_FACT-55),
   has_key(KubernetesParser.Kube.Labels-1, app))

Or(Not(STRUCT_FACT-56),
   ForAll(c!3,
          Or(Not(has_key(KubernetesParser.Kube.Labels-1,
                         c!3)),
             c!3 == app)))

Or(Not(STRUCT_FACT-57),
   name(KubernetesParser.Kube.Selector-1) == app)

Or(Not(STRUCT_FACT-58),
   value(KubernetesParser.Kube.Selector-1) == node-app2)

Or(Not(STRUCT_FACT-59),
   name(KubernetesParser.Kube.Pod.Template-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-60),
   namespace(KubernetesParser.Kube.Pod.Template-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-61),
   image(KubernetesParser.Kube.Container-0) ==
   getdtk/graph-example2-app)

Or(Not(STRUCT_FACT-62),
   image_pull_policy(KubernetesParser.Kube.Container-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-63),
   name(KubernetesParser.Kube.Container-0) ==
   Concat(Unit(Char),
          Concat(Unit(Char), Concat(Unit(Char), Unit(Char)))))

Or(Not(STRUCT_FACT-64),
   args(KubernetesParser.Kube.Container-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-65),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-0,
         DB_HOST) ==
   {"value": "my-release-redis-master"})

Or(Not(STRUCT_FACT-66),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-0,
         DB_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "node-app2-secret", "key": "db_password"}}})

Or(Not(STRUCT_FACT-67),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-0,
         DB_PORT) ==
   {"value": "6379"})

Or(Not(STRUCT_FACT-68),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-0,
         NODE_ENV) ==
   {"value": "production"})

Or(Not(STRUCT_FACT-69),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-0,
         PORT) ==
   {"value": "8080"})

Or(Not(STRUCT_FACT-70),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-0,
           DB_HOST))

Or(Not(STRUCT_FACT-71),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-0,
           DB_PASSWORD))

Or(Not(STRUCT_FACT-72),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-0,
           DB_PORT))

Or(Not(STRUCT_FACT-73),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-0,
           NODE_ENV))

Or(Not(STRUCT_FACT-74),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-0,
           PORT))

Or(Not(STRUCT_FACT-75),
   ForAll(c!4,
          Or(Not(has_key(KubernetesParser.Kube.Container.EnvVarsConfig-0,
                         c!4)),
             c!4 == PORT,
             c!4 == NODE_ENV,
             c!4 == DB_PORT,
             c!4 == DB_PASSWORD,
             c!4 == DB_HOST)))

Or(Not(STRUCT_FACT-76),
   container_port(KubernetesParser.Kube.Container.PortItem-0) ==
   8080)

Or(Not(STRUCT_FACT-77),
   host_ip(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-78),
   host_port(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-79),
   name(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-80),
   protocol(KubernetesParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-81),
   value(KubernetesParser.Kube.Labels-2, app) == node-app2)

Or(Not(STRUCT_FACT-82),
   has_key(KubernetesParser.Kube.Labels-2, app))

Or(Not(STRUCT_FACT-83),
   ForAll(c!5,
          Or(c!5 == app,
             Not(has_key(KubernetesParser.Kube.Labels-2,
                         c!5)))))

Or(Not(STRUCT_FACT-84),
   name(KubernetesParser.Kube.Deployment-1) == node-app1-dep)

Or(Not(STRUCT_FACT-85),
   namespace(KubernetesParser.Kube.Deployment-1) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-86),
   manifest_set(KubernetesParser.Kube.Deployment-1) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-87),
   api_version(KubernetesParser.Kube.Deployment-1) ==
   apps/v1)

Or(Not(STRUCT_FACT-88),
   value(KubernetesParser.Kube.Labels-4, app) == node-app1)

Or(Not(STRUCT_FACT-89),
   has_key(KubernetesParser.Kube.Labels-4, app))

Or(Not(STRUCT_FACT-90),
   ForAll(c!6,
          Or(c!6 == app,
             Not(has_key(KubernetesParser.Kube.Labels-4,
                         c!6)))))

Or(Not(STRUCT_FACT-91),
   name(KubernetesParser.Kube.Selector-3) == app)

Or(Not(STRUCT_FACT-92),
   value(KubernetesParser.Kube.Selector-3) == node-app1)

Or(Not(STRUCT_FACT-93),
   name(KubernetesParser.Kube.Pod.Template-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-94),
   namespace(KubernetesParser.Kube.Pod.Template-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-95),
   image(KubernetesParser.Kube.Container-1) ==
   getdtk/graph-example1-app)

Or(Not(STRUCT_FACT-96),
   image_pull_policy(KubernetesParser.Kube.Container-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-97),
   name(KubernetesParser.Kube.Container-1) ==
   Concat(Unit(Char),
          Concat(Unit(Char), Concat(Unit(Char), Unit(Char)))))

Or(Not(STRUCT_FACT-98),
   args(KubernetesParser.Kube.Container-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-99),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-1,
         DB_HOST) ==
   {"value": "my-release-redis-master"})

Or(Not(STRUCT_FACT-100),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-1,
         DB_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "node-app1-secret", "key": "db_password"}}})

Or(Not(STRUCT_FACT-101),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-1,
         DB_PORT) ==
   {"value": "6379"})

Or(Not(STRUCT_FACT-102),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-1,
         NODE_ENV) ==
   {"value": "production"})

Or(Not(STRUCT_FACT-103),
   value(KubernetesParser.Kube.Container.EnvVarsConfig-1,
         PORT) ==
   {"value": "8080"})

Or(Not(STRUCT_FACT-104),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-1,
           DB_HOST))

Or(Not(STRUCT_FACT-105),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-1,
           DB_PASSWORD))

Or(Not(STRUCT_FACT-106),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-1,
           DB_PORT))

Or(Not(STRUCT_FACT-107),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-1,
           NODE_ENV))

Or(Not(STRUCT_FACT-108),
   has_key(KubernetesParser.Kube.Container.EnvVarsConfig-1,
           PORT))

Or(Not(STRUCT_FACT-109),
   ForAll(c!7,
          Or(c!7 == PORT,
             c!7 == NODE_ENV,
             c!7 == DB_PORT,
             c!7 == DB_PASSWORD,
             c!7 == DB_HOST,
             Not(has_key(KubernetesParser.Kube.Container.EnvVarsConfig-1,
                         c!7)))))

Or(Not(STRUCT_FACT-110),
   container_port(KubernetesParser.Kube.Container.PortItem-1) ==
   8080)

Or(Not(STRUCT_FACT-111),
   host_ip(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-112),
   host_port(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-113),
   name(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-114),
   protocol(KubernetesParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-115),
   value(KubernetesParser.Kube.Labels-5, app) == node-app1)

Or(Not(STRUCT_FACT-116),
   has_key(KubernetesParser.Kube.Labels-5, app))

Or(Not(STRUCT_FACT-117),
   ForAll(c!8,
          Or(c!8 == app,
             Not(has_key(KubernetesParser.Kube.Labels-5,
                         c!8)))))

Or(Not(STRUCT_FACT-118),
   name(KubernetesParser.Kube.Ingress-0) ==
   ingress1-matches-app1-with-default)

Or(Not(STRUCT_FACT-119),
   namespace(KubernetesParser.Kube.Ingress-0) == default)

Or(Not(STRUCT_FACT-120),
   ingress_class_name(KubernetesParser.Kube.Ingress-0) ==
   nginx)

Or(Not(STRUCT_FACT-121),
   api_version(KubernetesParser.Kube.Ingress-0) ==
   networking.k8s.io/v1)

Or(Not(STRUCT_FACT-122),
   value(KubernetesParser.Kube.Annotations-0,
         nginx.ingress.kubernetes.io/rewrite-target) ==
   /)

Or(Not(STRUCT_FACT-123),
   has_key(KubernetesParser.Kube.Annotations-0,
           nginx.ingress.kubernetes.io/rewrite-target))

Or(Not(STRUCT_FACT-124),
   ForAll(c!9,
          Or(Not(has_key(KubernetesParser.Kube.Annotations-0,
                         c!9)),
             c!9 ==
             nginx.ingress.kubernetes.io/rewrite-target)))

Or(Not(PARENT_FACT-118),
   service(KubernetesParser.Kube.Ingress.DefaultBackend-0) ==
   KubernetesParser.Kube.Ingress.Backend.Service-0)

Or(Not(PARENT_FACT-119),
   And(_parent.Kube.Ingress.DefaultBackend(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
       KubernetesParser.Kube.Ingress.DefaultBackend-0,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
       Kube.Ingress.DefaultBackend))

Or(Not(STRUCT_FACT-125),
   name(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
   nginx-ingress-controller)

Or(Not(PARENT_FACT-120),
   port(KubernetesParser.Kube.Ingress.Backend.Service-0) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-0)

Or(Not(PARENT_FACT-121),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
       KubernetesParser.Kube.Ingress.Backend.Service-0,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-126),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-127),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-0) ==
   80)

Or(Not(STRUCT_FACT-128),
   host(KubernetesParser.Kube.Ingress.Rule-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-129),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   /testpath)

Or(Not(STRUCT_FACT-130),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   Prefix)

Or(Not(PARENT_FACT-122),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-0) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0)

Or(Not(PARENT_FACT-123),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-0,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(PARENT_FACT-124),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0) ==
   KubernetesParser.Kube.Ingress.Backend.Service-1)

Or(Not(PARENT_FACT-125),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-0,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-131),
   name(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
   node-app1-svc)

Or(Not(PARENT_FACT-126),
   port(KubernetesParser.Kube.Ingress.Backend.Service-1) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-1)

Or(Not(PARENT_FACT-127),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
       KubernetesParser.Kube.Ingress.Backend.Service-1,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-132),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-133),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-1) ==
   80)

Or(Not(STRUCT_FACT-134),
   name(KubernetesParser.Kube.Ingress-1) ==
   ingress2-simple-service-bad-default)

Or(Not(STRUCT_FACT-135),
   namespace(KubernetesParser.Kube.Ingress-1) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-136),
   ingress_class_name(KubernetesParser.Kube.Ingress-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-137),
   api_version(KubernetesParser.Kube.Ingress-1) ==
   networking.k8s.io/v1)

Or(Not(STRUCT_FACT-138),
   value(KubernetesParser.Kube.Annotations-1,
         nginx.ingress.kubernetes.io/rewrite-target) ==
   /)

Or(Not(STRUCT_FACT-139),
   has_key(KubernetesParser.Kube.Annotations-1,
           nginx.ingress.kubernetes.io/rewrite-target))

Or(Not(STRUCT_FACT-140),
   ForAll(c!10,
          Or(c!10 ==
             nginx.ingress.kubernetes.io/rewrite-target,
             Not(has_key(KubernetesParser.Kube.Annotations-1,
                         c!10)))))

Or(Not(PARENT_FACT-128),
   service(KubernetesParser.Kube.Ingress.DefaultBackend-1) ==
   KubernetesParser.Kube.Ingress.Backend.Service-2)

Or(Not(PARENT_FACT-129),
   And(_parent.Kube.Ingress.DefaultBackend(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
       KubernetesParser.Kube.Ingress.DefaultBackend-1,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
       Kube.Ingress.DefaultBackend))

Or(Not(STRUCT_FACT-141),
   name(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
   test2)

Or(Not(PARENT_FACT-130),
   port(KubernetesParser.Kube.Ingress.Backend.Service-2) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-2)

Or(Not(PARENT_FACT-131),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
       KubernetesParser.Kube.Ingress.Backend.Service-2,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-142),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-143),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-2) ==
   80)

Or(Not(STRUCT_FACT-144),
   host(KubernetesParser.Kube.Ingress.Rule-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-145),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   /testpath)

Or(Not(STRUCT_FACT-146),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   Prefix)

Or(Not(PARENT_FACT-132),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-1) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1)

Or(Not(PARENT_FACT-133),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-1,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(PARENT_FACT-134),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1) ==
   KubernetesParser.Kube.Ingress.Backend.Service-3)

Or(Not(PARENT_FACT-135),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-1,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-147),
   name(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
   node-app-svc)

Or(Not(PARENT_FACT-136),
   port(KubernetesParser.Kube.Ingress.Backend.Service-3) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-3)

Or(Not(PARENT_FACT-137),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
       KubernetesParser.Kube.Ingress.Backend.Service-3,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-148),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-149),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-3) ==
   80)

Or(Not(STRUCT_FACT-150),
   name(KubernetesParser.Kube.Ingress-2) ==
   ingress3-simple-fanout)

Or(Not(STRUCT_FACT-151),
   namespace(KubernetesParser.Kube.Ingress-2) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-152),
   ingress_class_name(KubernetesParser.Kube.Ingress-2) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-153),
   api_version(KubernetesParser.Kube.Ingress-2) ==
   networking.k8s.io/v1)

Or(Not(STRUCT_FACT-154),
   value(KubernetesParser.Kube.Annotations-2,
         nginx.ingress.kubernetes.io/rewrite-target) ==
   /)

Or(Not(STRUCT_FACT-155),
   has_key(KubernetesParser.Kube.Annotations-2,
           nginx.ingress.kubernetes.io/rewrite-target))

Or(Not(STRUCT_FACT-156),
   ForAll(c!11,
          Or(c!11 ==
             nginx.ingress.kubernetes.io/rewrite-target,
             Not(has_key(KubernetesParser.Kube.Annotations-2,
                         c!11)))))

Or(Not(STRUCT_FACT-157),
   host(KubernetesParser.Kube.Ingress.Rule-2) == foo.bar.com)

Or(Not(STRUCT_FACT-158),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   /app1)

Or(Not(STRUCT_FACT-159),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   Prefix)

Or(Not(PARENT_FACT-138),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-2) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2)

Or(Not(PARENT_FACT-139),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-2,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(PARENT_FACT-140),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2) ==
   KubernetesParser.Kube.Ingress.Backend.Service-4)

Or(Not(PARENT_FACT-141),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-2,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-160),
   name(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
   node-app1-svc)

Or(Not(PARENT_FACT-142),
   port(KubernetesParser.Kube.Ingress.Backend.Service-4) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-4)

Or(Not(PARENT_FACT-143),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
       KubernetesParser.Kube.Ingress.Backend.Service-4,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-161),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-162),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-4) ==
   80)

Or(Not(STRUCT_FACT-163),
   path(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   /app2)

Or(Not(STRUCT_FACT-164),
   path_type(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   Prefix)

Or(Not(PARENT_FACT-144),
   backend(KubernetesParser.Kube.Ingress.Rule.HttpPath-3) ==
   KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3)

Or(Not(PARENT_FACT-145),
   And(_parent.Kube.Ingress.Rule.HttpPath(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath-3,
       _parent_type(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
       Kube.Ingress.Rule.HttpPath))

Or(Not(PARENT_FACT-146),
   service(KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3) ==
   KubernetesParser.Kube.Ingress.Backend.Service-5)

Or(Not(PARENT_FACT-147),
   And(_parent.Kube.Ingress.Rule.HttpPath.Backend(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
       KubernetesParser.Kube.Ingress.Rule.HttpPath.Backend-3,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
       Kube.Ingress.Rule.HttpPath.Backend))

Or(Not(STRUCT_FACT-165),
   name(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
   node-app2-svc)

Or(Not(PARENT_FACT-148),
   port(KubernetesParser.Kube.Ingress.Backend.Service-5) ==
   KubernetesParser.Kube.Ingress.Backend.Service.Port-5)

Or(Not(PARENT_FACT-149),
   And(_parent.Kube.Ingress.Backend.Service(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
       KubernetesParser.Kube.Ingress.Backend.Service-5,
       _parent_type(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
       Kube.Ingress.Backend.Service))

Or(Not(STRUCT_FACT-166),
   name(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-167),
   number(KubernetesParser.Kube.Ingress.Backend.Service.Port-5) ==
   80)

Or(Not(STRUCT_FACT-168),
   _exists(HelmParser.Kube.NetworkPolicy-0) ==
   cast_to_builtin_sort_bool(exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0)))

Or(Not(TYPE_CAST_FACT-3),
   cast_to_builtin_sort_bool(exists_kube_networkpolicy(HelmParser.Helm.Template.Condition-0)) ==
   False)

Or(Not(STRUCT_FACT-169),
   name(HelmParser.Kube.Secret-0) == redis)

Or(Not(STRUCT_FACT-170),
   namespace(HelmParser.Kube.Secret-0) == default)

Or(Not(STRUCT_FACT-171),
   api_version(HelmParser.Kube.Secret-0) == v1)

Or(Not(STRUCT_FACT-172),
   value(HelmParser.Kube.Labels-0,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-173),
   value(HelmParser.Kube.Labels-0,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-174),
   value(HelmParser.Kube.Labels-0, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-175),
   value(HelmParser.Kube.Labels-0, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-176),
   has_key(HelmParser.Kube.Labels-0,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-177),
   has_key(HelmParser.Kube.Labels-0,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-178),
   has_key(HelmParser.Kube.Labels-0, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-179),
   has_key(HelmParser.Kube.Labels-0, helm.sh/chart))

Or(Not(STRUCT_FACT-180),
   ForAll(c!12,
          Or(c!12 == helm.sh/chart,
             c!12 == app.kubernetes.io/name,
             c!12 == app.kubernetes.io/managed-by,
             c!12 == app.kubernetes.io/instance,
             Not(has_key(HelmParser.Kube.Labels-0, c!12)))))

Or(Not(STRUCT_FACT-181),
   name(KubernetesParser.Kube.Secret-0) == node-app2-secret)

Or(Not(STRUCT_FACT-182),
   namespace(KubernetesParser.Kube.Secret-0) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-183),
   api_version(KubernetesParser.Kube.Secret-0) == v1)

Or(Not(STRUCT_FACT-184),
   name(KubernetesParser.Kube.Secret-1) == node-app1-secret)

Or(Not(STRUCT_FACT-185),
   namespace(KubernetesParser.Kube.Secret-1) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-186),
   api_version(KubernetesParser.Kube.Secret-1) == v1)

Or(Not(STRUCT_FACT-187),
   _exists(HelmParser.Kube.ServiceMonitor-0) ==
   cast_to_builtin_sort_bool(exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1)))

Or(Not(TYPE_CAST_FACT-4),
   cast_to_builtin_sort_bool(exists_kube_servicemonitor(HelmParser.Helm.Template.Condition-1)) ==
   False)

Or(Not(STRUCT_FACT-188),
   name(HelmParser.Kube.Service-0) == redis-headless)

Or(Not(STRUCT_FACT-189),
   namespace(HelmParser.Kube.Service-0) == default)

Or(Not(STRUCT_FACT-190),
   manifest_set(HelmParser.Kube.Service-0) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-191),
   api_version(HelmParser.Kube.Service-0) == v1)

Or(Not(STRUCT_FACT-192),
   value(HelmParser.Kube.Labels-4,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-193),
   value(HelmParser.Kube.Labels-4,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-194),
   value(HelmParser.Kube.Labels-4, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-195),
   value(HelmParser.Kube.Labels-4, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-196),
   has_key(HelmParser.Kube.Labels-4,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-197),
   has_key(HelmParser.Kube.Labels-4,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-198),
   has_key(HelmParser.Kube.Labels-4, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-199),
   has_key(HelmParser.Kube.Labels-4, helm.sh/chart))

Or(Not(STRUCT_FACT-200),
   ForAll(c!13,
          Or(c!13 == helm.sh/chart,
             c!13 == app.kubernetes.io/name,
             c!13 == app.kubernetes.io/managed-by,
             c!13 == app.kubernetes.io/instance,
             Not(has_key(HelmParser.Kube.Labels-4, c!13)))))

Or(Not(STRUCT_FACT-201),
   name(HelmParser.Kube.Service.ServicePort-0) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))

Or(Not(STRUCT_FACT-202),
   node_port(HelmParser.Kube.Service.ServicePort-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-203),
   port(HelmParser.Kube.Service.ServicePort-0) == 6379)

Or(Not(STRUCT_FACT-204),
   target_port(HelmParser.Kube.Service.ServicePort-0) ==
   redis)

Or(Not(STRUCT_FACT-205),
   name(HelmParser.Kube.Selector-0) ==
   app.kubernetes.io/name)

Or(Not(STRUCT_FACT-206),
   value(HelmParser.Kube.Selector-0) == redis)

Or(Not(STRUCT_FACT-207),
   name(HelmParser.Kube.Selector-1) ==
   app.kubernetes.io/instance)

Or(Not(STRUCT_FACT-208),
   value(HelmParser.Kube.Selector-1) == redis)

Or(Not(STRUCT_FACT-209),
   name(HelmParser.Kube.Service-1) == redis-master)

Or(Not(STRUCT_FACT-210),
   namespace(HelmParser.Kube.Service-1) == default)

Or(Not(STRUCT_FACT-211),
   manifest_set(HelmParser.Kube.Service-1) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-212),
   api_version(HelmParser.Kube.Service-1) == v1)

Or(Not(STRUCT_FACT-213),
   value(HelmParser.Kube.Labels-5,
         app.kubernetes.io/component) ==
   master)

Or(Not(STRUCT_FACT-214),
   value(HelmParser.Kube.Labels-5,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-215),
   value(HelmParser.Kube.Labels-5,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-216),
   value(HelmParser.Kube.Labels-5, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-217),
   value(HelmParser.Kube.Labels-5, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-218),
   has_key(HelmParser.Kube.Labels-5,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-219),
   has_key(HelmParser.Kube.Labels-5,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-220),
   has_key(HelmParser.Kube.Labels-5,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-221),
   has_key(HelmParser.Kube.Labels-5, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-222),
   has_key(HelmParser.Kube.Labels-5, helm.sh/chart))

Or(Not(STRUCT_FACT-223),
   ForAll(c!14,
          Or(c!14 == helm.sh/chart,
             c!14 == app.kubernetes.io/name,
             c!14 == app.kubernetes.io/managed-by,
             c!14 == app.kubernetes.io/instance,
             Not(has_key(HelmParser.Kube.Labels-5, c!14)),
             c!14 == app.kubernetes.io/component)))

Or(Not(STRUCT_FACT-224),
   name(HelmParser.Kube.Service.ServicePort-1) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))

Or(Not(STRUCT_FACT-225),
   node_port(HelmParser.Kube.Service.ServicePort-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-226),
   port(HelmParser.Kube.Service.ServicePort-1) == 6379)

Or(Not(STRUCT_FACT-227),
   target_port(HelmParser.Kube.Service.ServicePort-1) ==
   redis)

Or(Not(STRUCT_FACT-228),
   name(HelmParser.Kube.Selector-2) ==
   app.kubernetes.io/name)

Or(Not(STRUCT_FACT-229),
   value(HelmParser.Kube.Selector-2) == redis)

Or(Not(STRUCT_FACT-230),
   name(HelmParser.Kube.Selector-3) ==
   app.kubernetes.io/instance)

Or(Not(STRUCT_FACT-231),
   value(HelmParser.Kube.Selector-3) == redis)

Or(Not(STRUCT_FACT-232),
   name(HelmParser.Kube.Selector-4) ==
   app.kubernetes.io/component)

Or(Not(STRUCT_FACT-233),
   value(HelmParser.Kube.Selector-4) == master)

Or(Not(STRUCT_FACT-234),
   name(HelmParser.Kube.Service-2) == redis-replicas)

Or(Not(STRUCT_FACT-235),
   namespace(HelmParser.Kube.Service-2) == default)

Or(Not(STRUCT_FACT-236),
   manifest_set(HelmParser.Kube.Service-2) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-237),
   api_version(HelmParser.Kube.Service-2) == v1)

Or(Not(STRUCT_FACT-238),
   value(HelmParser.Kube.Labels-6,
         app.kubernetes.io/component) ==
   replica)

Or(Not(STRUCT_FACT-239),
   value(HelmParser.Kube.Labels-6,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-240),
   value(HelmParser.Kube.Labels-6,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-241),
   value(HelmParser.Kube.Labels-6, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-242),
   value(HelmParser.Kube.Labels-6, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-243),
   has_key(HelmParser.Kube.Labels-6,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-244),
   has_key(HelmParser.Kube.Labels-6,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-245),
   has_key(HelmParser.Kube.Labels-6,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-246),
   has_key(HelmParser.Kube.Labels-6, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-247),
   has_key(HelmParser.Kube.Labels-6, helm.sh/chart))

Or(Not(STRUCT_FACT-248),
   ForAll(c!15,
          Or(c!15 == helm.sh/chart,
             c!15 == app.kubernetes.io/name,
             c!15 == app.kubernetes.io/managed-by,
             c!15 == app.kubernetes.io/instance,
             c!15 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-6, c!15)))))

Or(Not(STRUCT_FACT-249),
   name(HelmParser.Kube.Service.ServicePort-2) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))

Or(Not(STRUCT_FACT-250),
   node_port(HelmParser.Kube.Service.ServicePort-2) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-251),
   port(HelmParser.Kube.Service.ServicePort-2) == 6379)

Or(Not(STRUCT_FACT-252),
   target_port(HelmParser.Kube.Service.ServicePort-2) ==
   redis)

Or(Not(STRUCT_FACT-253),
   name(HelmParser.Kube.Selector-5) ==
   app.kubernetes.io/name)

Or(Not(STRUCT_FACT-254),
   value(HelmParser.Kube.Selector-5) == redis)

Or(Not(STRUCT_FACT-255),
   name(HelmParser.Kube.Selector-6) ==
   app.kubernetes.io/instance)

Or(Not(STRUCT_FACT-256),
   value(HelmParser.Kube.Selector-6) == redis)

Or(Not(STRUCT_FACT-257),
   name(HelmParser.Kube.Selector-7) ==
   app.kubernetes.io/component)

Or(Not(STRUCT_FACT-258),
   value(HelmParser.Kube.Selector-7) == replica)

Or(Not(STRUCT_FACT-259),
   name(KubernetesParser.Kube.Service-0) == node-app2-svc)

Or(Not(STRUCT_FACT-260),
   namespace(KubernetesParser.Kube.Service-0) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-261),
   manifest_set(KubernetesParser.Kube.Service-0) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-262),
   api_version(KubernetesParser.Kube.Service-0) == v1)

Or(Not(STRUCT_FACT-263),
   value(KubernetesParser.Kube.Labels-0, app) == node)

Or(Not(STRUCT_FACT-264),
   has_key(KubernetesParser.Kube.Labels-0, app))

Or(Not(STRUCT_FACT-265),
   ForAll(c!16,
          Or(c!16 == app,
             Not(has_key(KubernetesParser.Kube.Labels-0,
                         c!16)))))

Or(Not(STRUCT_FACT-266),
   name(KubernetesParser.Kube.Service.ServicePort-0) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-267),
   node_port(KubernetesParser.Kube.Service.ServicePort-0) ==
   31112)

Or(Not(STRUCT_FACT-268),
   port(KubernetesParser.Kube.Service.ServicePort-0) == 8080)

Or(Not(STRUCT_FACT-269),
   target_port(KubernetesParser.Kube.Service.ServicePort-0) ==
   8081)

Or(Not(STRUCT_FACT-270),
   name(KubernetesParser.Kube.Selector-0) == app)

Or(Not(STRUCT_FACT-271),
   value(KubernetesParser.Kube.Selector-0) == node-app2)

Or(Not(STRUCT_FACT-272),
   name(KubernetesParser.Kube.Service-1) == node-app1-svc)

Or(Not(STRUCT_FACT-273),
   namespace(KubernetesParser.Kube.Service-1) ==
   namespace(Config.ManifestSet.Instantiation-0))

Or(Not(STRUCT_FACT-274),
   manifest_set(KubernetesParser.Kube.Service-1) ==
   Config.ManifestSet.Instantiation-0)

Or(Not(STRUCT_FACT-275),
   api_version(KubernetesParser.Kube.Service-1) == v1)

Or(Not(STRUCT_FACT-276),
   value(KubernetesParser.Kube.Labels-3, app) == node)

Or(Not(STRUCT_FACT-277),
   has_key(KubernetesParser.Kube.Labels-3, app))

Or(Not(STRUCT_FACT-278),
   ForAll(c!17,
          Or(c!17 == app,
             Not(has_key(KubernetesParser.Kube.Labels-3,
                         c!17)))))

Or(Not(STRUCT_FACT-279),
   name(KubernetesParser.Kube.Service.ServicePort-1) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char),
                               Concat(Unit(Char),
                                      Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Concat(Unit(Char),
                                        Unit(Char))))))))))))

Or(Not(STRUCT_FACT-280),
   node_port(KubernetesParser.Kube.Service.ServicePort-1) ==
   31112)

Or(Not(STRUCT_FACT-281),
   port(KubernetesParser.Kube.Service.ServicePort-1) == 8080)

Or(Not(STRUCT_FACT-282),
   target_port(KubernetesParser.Kube.Service.ServicePort-1) ==
   8081)

Or(Not(STRUCT_FACT-283),
   name(KubernetesParser.Kube.Selector-2) == app)

Or(Not(STRUCT_FACT-284),
   value(KubernetesParser.Kube.Selector-2) == node)

Or(Not(STRUCT_FACT-285),
   name(HelmParser.Kube.StatefulSet-0) == redis-master)

Or(Not(STRUCT_FACT-286),
   namespace(HelmParser.Kube.StatefulSet-0) == default)

Or(Not(STRUCT_FACT-287),
   replicas(HelmParser.Kube.StatefulSet-0) == 1)

Or(Not(STRUCT_FACT-288),
   service_name(HelmParser.Kube.StatefulSet-0) ==
   redis-headless)

Or(Not(STRUCT_FACT-289),
   manifest_set(HelmParser.Kube.StatefulSet-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-290),
   api_version(HelmParser.Kube.StatefulSet-0) == apps/v1)

Or(Not(STRUCT_FACT-291),
   value(HelmParser.Kube.Labels-7,
         app.kubernetes.io/component) ==
   master)

Or(Not(STRUCT_FACT-292),
   value(HelmParser.Kube.Labels-7,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-293),
   value(HelmParser.Kube.Labels-7,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-294),
   value(HelmParser.Kube.Labels-7, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-295),
   value(HelmParser.Kube.Labels-7, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-296),
   has_key(HelmParser.Kube.Labels-7,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-297),
   has_key(HelmParser.Kube.Labels-7,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-298),
   has_key(HelmParser.Kube.Labels-7,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-299),
   has_key(HelmParser.Kube.Labels-7, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-300),
   has_key(HelmParser.Kube.Labels-7, helm.sh/chart))

Or(Not(STRUCT_FACT-301),
   ForAll(c!18,
          Or(c!18 == helm.sh/chart,
             c!18 == app.kubernetes.io/name,
             c!18 == app.kubernetes.io/managed-by,
             c!18 == app.kubernetes.io/instance,
             c!18 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-7, c!18)))))

Or(Not(STRUCT_FACT-302),
   name(HelmParser.Kube.Selector-8) ==
   app.kubernetes.io/name)

Or(Not(STRUCT_FACT-303),
   value(HelmParser.Kube.Selector-8) == redis)

Or(Not(STRUCT_FACT-304),
   name(HelmParser.Kube.Selector-9) ==
   app.kubernetes.io/instance)

Or(Not(STRUCT_FACT-305),
   value(HelmParser.Kube.Selector-9) == redis)

Or(Not(STRUCT_FACT-306),
   name(HelmParser.Kube.Selector-10) ==
   app.kubernetes.io/component)

Or(Not(STRUCT_FACT-307),
   value(HelmParser.Kube.Selector-10) == master)

Or(Not(STRUCT_FACT-308),
   name(HelmParser.Kube.Pod.Template-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-309),
   namespace(HelmParser.Kube.Pod.Template-0) == COMMON.NONE)

Or(Not(STRUCT_FACT-310),
   value(HelmParser.Kube.Annotations-0, checksum/configmap) ==
   442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634)

Or(Not(STRUCT_FACT-311),
   value(HelmParser.Kube.Annotations-0, checksum/health) ==
   44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6)

Or(Not(STRUCT_FACT-312),
   value(HelmParser.Kube.Annotations-0, checksum/scripts) ==
   f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9)

Or(Not(STRUCT_FACT-313),
   value(HelmParser.Kube.Annotations-0, checksum/secret) ==
   8679d9a94a8356d93113a80b6b831c94387f2b72e1c0688249d3327275c32b7d)

Or(Not(STRUCT_FACT-314),
   has_key(HelmParser.Kube.Annotations-0,
           checksum/configmap))

Or(Not(STRUCT_FACT-315),
   has_key(HelmParser.Kube.Annotations-0, checksum/health))

Or(Not(STRUCT_FACT-316),
   has_key(HelmParser.Kube.Annotations-0, checksum/scripts))

Or(Not(STRUCT_FACT-317),
   has_key(HelmParser.Kube.Annotations-0, checksum/secret))

Or(Not(STRUCT_FACT-318),
   ForAll(c!19,
          Or(Not(has_key(HelmParser.Kube.Annotations-0,
                         c!19)),
             c!19 == checksum/secret,
             c!19 == checksum/scripts,
             c!19 == checksum/health,
             c!19 == checksum/configmap)))

Or(Not(STRUCT_FACT-319),
   image(HelmParser.Kube.Container-0) ==
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))))

Or(Not(CONCAT_FACT-2),
   __concat(docker.io/,
            helm_name_value_info(redis,
                                 image.repository,
                                 bitnami/redis),
            :,
            helm_name_value_info(redis,
                                 image.tag,
                                 6.2.4-debian-10-r13)) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(TYPE_CAST_FACT-5),
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(STRUCT_FACT-320),
   image_pull_policy(HelmParser.Kube.Container-0) ==
   IfNotPresent)

Or(Not(STRUCT_FACT-321),
   name(HelmParser.Kube.Container-0) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char), Unit(Char))))))

Or(Not(STRUCT_FACT-322),
   args(HelmParser.Kube.Container-0) ==
   ["-c", "/opt/bitnami/scripts/start-scripts/start-master.sh"])

Or(Not(STRUCT_FACT-323),
   value(HelmParser.Kube.Container.EnvVarsConfig-0,
         ALLOW_EMPTY_PASSWORD) ==
   {"value": "no"})

Or(Not(STRUCT_FACT-324),
   value(HelmParser.Kube.Container.EnvVarsConfig-0,
         BITNAMI_DEBUG) ==
   {"value": "false"})

Or(Not(STRUCT_FACT-325),
   value(HelmParser.Kube.Container.EnvVarsConfig-0,
         REDIS_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(STRUCT_FACT-326),
   value(HelmParser.Kube.Container.EnvVarsConfig-0,
         REDIS_PORT) ==
   {"value": "6379"})

Or(Not(STRUCT_FACT-327),
   value(HelmParser.Kube.Container.EnvVarsConfig-0,
         REDIS_REPLICATION_MODE) ==
   {"value": "master"})

Or(Not(STRUCT_FACT-328),
   value(HelmParser.Kube.Container.EnvVarsConfig-0,
         REDIS_TLS_ENABLED) ==
   {"value": "no"})

Or(Not(STRUCT_FACT-329),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
           ALLOW_EMPTY_PASSWORD))

Or(Not(STRUCT_FACT-330),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
           BITNAMI_DEBUG))

Or(Not(STRUCT_FACT-331),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
           REDIS_PASSWORD))

Or(Not(STRUCT_FACT-332),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
           REDIS_PORT))

Or(Not(STRUCT_FACT-333),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
           REDIS_REPLICATION_MODE))

Or(Not(STRUCT_FACT-334),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
           REDIS_TLS_ENABLED))

Or(Not(STRUCT_FACT-335),
   ForAll(c!20,
          Or(Not(has_key(HelmParser.Kube.Container.EnvVarsConfig-0,
                         c!20)),
             c!20 == REDIS_TLS_ENABLED,
             c!20 == REDIS_REPLICATION_MODE,
             c!20 == REDIS_PORT,
             c!20 == REDIS_PASSWORD,
             c!20 == BITNAMI_DEBUG,
             c!20 == ALLOW_EMPTY_PASSWORD)))

Or(Not(STRUCT_FACT-336),
   container_port(HelmParser.Kube.Container.PortItem-0) ==
   6379)

Or(Not(STRUCT_FACT-337),
   host_ip(HelmParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-338),
   host_port(HelmParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-339),
   name(HelmParser.Kube.Container.PortItem-0) == redis)

Or(Not(STRUCT_FACT-340),
   protocol(HelmParser.Kube.Container.PortItem-0) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-341),
   value(HelmParser.Kube.Labels-8,
         app.kubernetes.io/component) ==
   master)

Or(Not(STRUCT_FACT-342),
   value(HelmParser.Kube.Labels-8,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-343),
   value(HelmParser.Kube.Labels-8,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-344),
   value(HelmParser.Kube.Labels-8, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-345),
   value(HelmParser.Kube.Labels-8, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-346),
   has_key(HelmParser.Kube.Labels-8,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-347),
   has_key(HelmParser.Kube.Labels-8,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-348),
   has_key(HelmParser.Kube.Labels-8,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-349),
   has_key(HelmParser.Kube.Labels-8, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-350),
   has_key(HelmParser.Kube.Labels-8, helm.sh/chart))

Or(Not(STRUCT_FACT-351),
   ForAll(c!21,
          Or(c!21 == helm.sh/chart,
             c!21 == app.kubernetes.io/name,
             c!21 == app.kubernetes.io/managed-by,
             c!21 == app.kubernetes.io/instance,
             c!21 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-8, c!21)))))

Or(Not(STRUCT_FACT-352),
   value(HelmParser.Kube.Labels-9,
         app.kubernetes.io/component) ==
   master)

Or(Not(STRUCT_FACT-353),
   value(HelmParser.Kube.Labels-9,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-354),
   value(HelmParser.Kube.Labels-9, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-355),
   has_key(HelmParser.Kube.Labels-9,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-356),
   has_key(HelmParser.Kube.Labels-9,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-357),
   has_key(HelmParser.Kube.Labels-9, app.kubernetes.io/name))

Or(Not(STRUCT_FACT-358),
   ForAll(c!22,
          Or(c!22 == app.kubernetes.io/name,
             c!22 == app.kubernetes.io/instance,
             c!22 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-9, c!22)))))

Or(Not(STRUCT_FACT-359),
   name(HelmParser.Kube.StatefulSet-1) == redis-replicas)

Or(Not(STRUCT_FACT-360),
   namespace(HelmParser.Kube.StatefulSet-1) == default)

Or(Not(STRUCT_FACT-361),
   replicas(HelmParser.Kube.StatefulSet-1) == 3)

Or(Not(STRUCT_FACT-362),
   service_name(HelmParser.Kube.StatefulSet-1) ==
   redis-headless)

Or(Not(STRUCT_FACT-363),
   manifest_set(HelmParser.Kube.StatefulSet-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-364),
   api_version(HelmParser.Kube.StatefulSet-1) == apps/v1)

Or(Not(STRUCT_FACT-365),
   value(HelmParser.Kube.Labels-10,
         app.kubernetes.io/component) ==
   replica)

Or(Not(STRUCT_FACT-366),
   value(HelmParser.Kube.Labels-10,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-367),
   value(HelmParser.Kube.Labels-10,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-368),
   value(HelmParser.Kube.Labels-10, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-369),
   value(HelmParser.Kube.Labels-10, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-370),
   has_key(HelmParser.Kube.Labels-10,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-371),
   has_key(HelmParser.Kube.Labels-10,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-372),
   has_key(HelmParser.Kube.Labels-10,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-373),
   has_key(HelmParser.Kube.Labels-10,
           app.kubernetes.io/name))

Or(Not(STRUCT_FACT-374),
   has_key(HelmParser.Kube.Labels-10, helm.sh/chart))

Or(Not(STRUCT_FACT-375),
   ForAll(c!23,
          Or(c!23 == helm.sh/chart,
             c!23 == app.kubernetes.io/name,
             c!23 == app.kubernetes.io/managed-by,
             c!23 == app.kubernetes.io/instance,
             c!23 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-10, c!23)))))

Or(Not(STRUCT_FACT-376),
   name(HelmParser.Kube.Selector-11) ==
   app.kubernetes.io/name)

Or(Not(STRUCT_FACT-377),
   value(HelmParser.Kube.Selector-11) == redis)

Or(Not(STRUCT_FACT-378),
   name(HelmParser.Kube.Selector-12) ==
   app.kubernetes.io/instance)

Or(Not(STRUCT_FACT-379),
   value(HelmParser.Kube.Selector-12) == redis)

Or(Not(STRUCT_FACT-380),
   name(HelmParser.Kube.Selector-13) ==
   app.kubernetes.io/component)

Or(Not(STRUCT_FACT-381),
   value(HelmParser.Kube.Selector-13) == replica)

Or(Not(STRUCT_FACT-382),
   name(HelmParser.Kube.Pod.Template-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-383),
   namespace(HelmParser.Kube.Pod.Template-1) == COMMON.NONE)

Or(Not(STRUCT_FACT-384),
   value(HelmParser.Kube.Annotations-1, checksum/configmap) ==
   442476b6eef39c39f0c7b62bdbff834dcbc4f00008fc95f44d5adc21083a7634)

Or(Not(STRUCT_FACT-385),
   value(HelmParser.Kube.Annotations-1, checksum/health) ==
   44280ff7498e21a0264b2f9e23b93d6b6ad603b7800ee6586f64b0b41297fab6)

Or(Not(STRUCT_FACT-386),
   value(HelmParser.Kube.Annotations-1, checksum/scripts) ==
   f99788d35f7da4b949f6ff488e93bd7d71a953ab6cf08ac19547c2581ae6ead9)

Or(Not(STRUCT_FACT-387),
   value(HelmParser.Kube.Annotations-1, checksum/secret) ==
   ca4e8e130aadab2c76b7dbc7707864e4bddd395ff1b4a01265d442d879a9f5d9)

Or(Not(STRUCT_FACT-388),
   has_key(HelmParser.Kube.Annotations-1,
           checksum/configmap))

Or(Not(STRUCT_FACT-389),
   has_key(HelmParser.Kube.Annotations-1, checksum/health))

Or(Not(STRUCT_FACT-390),
   has_key(HelmParser.Kube.Annotations-1, checksum/scripts))

Or(Not(STRUCT_FACT-391),
   has_key(HelmParser.Kube.Annotations-1, checksum/secret))

Or(Not(STRUCT_FACT-392),
   ForAll(c!24,
          Or(c!24 == checksum/secret,
             c!24 == checksum/scripts,
             c!24 == checksum/health,
             c!24 == checksum/configmap,
             Not(has_key(HelmParser.Kube.Annotations-1,
                         c!24)))))

Or(Not(STRUCT_FACT-393),
   image(HelmParser.Kube.Container-1) ==
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))))

Or(Not(CONCAT_FACT-3),
   __concat(docker.io/,
            helm_name_value_info(redis,
                                 image.repository,
                                 bitnami/redis),
            :,
            helm_name_value_info(redis,
                                 image.tag,
                                 6.2.4-debian-10-r13)) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(TYPE_CAST_FACT-6),
   cast_to_kube_container_image_ref(__concat(docker.io/,
                                        helm_name_value_info(redis,
                                        image.repository,
                                        bitnami/redis),
                                        :,
                                        helm_name_value_info(redis,
                                        image.tag,
                                        6.2.4-debian-10-r13))) ==
   docker.io/bitnami/redis:6.2.4-debian-10-r13)

Or(Not(STRUCT_FACT-394),
   image_pull_policy(HelmParser.Kube.Container-1) ==
   IfNotPresent)

Or(Not(STRUCT_FACT-395),
   name(HelmParser.Kube.Container-1) ==
   Concat(Unit(Char),
          Concat(Unit(Char),
                 Concat(Unit(Char),
                        Concat(Unit(Char), Unit(Char))))))

Or(Not(STRUCT_FACT-396),
   args(HelmParser.Kube.Container-1) ==
   ["-c", "/opt/bitnami/scripts/start-scripts/start-replica.sh"])

Or(Not(STRUCT_FACT-397),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         ALLOW_EMPTY_PASSWORD) ==
   {"value": "no"})

Or(Not(STRUCT_FACT-398),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         BITNAMI_DEBUG) ==
   {"value": "false"})

Or(Not(STRUCT_FACT-399),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_MASTER_HOST) ==
   {"value": "redis-master-0.redis-headless.default.svc.cluster.local"})

Or(Not(STRUCT_FACT-400),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_MASTER_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(STRUCT_FACT-401),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_MASTER_PORT_NUMBER) ==
   {"value": "6379"})

Or(Not(STRUCT_FACT-402),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_PASSWORD) ==
   {"valueFrom": {"secretKeyRef": {"name": "redis", "key": "redis-password"}}})

Or(Not(STRUCT_FACT-403),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_PORT) ==
   {"value": "6379"})

Or(Not(STRUCT_FACT-404),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_REPLICATION_MODE) ==
   {"value": "slave"})

Or(Not(STRUCT_FACT-405),
   value(HelmParser.Kube.Container.EnvVarsConfig-1,
         REDIS_TLS_ENABLED) ==
   {"value": "no"})

Or(Not(STRUCT_FACT-406),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           ALLOW_EMPTY_PASSWORD))

Or(Not(STRUCT_FACT-407),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           BITNAMI_DEBUG))

Or(Not(STRUCT_FACT-408),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_MASTER_HOST))

Or(Not(STRUCT_FACT-409),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_MASTER_PASSWORD))

Or(Not(STRUCT_FACT-410),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_MASTER_PORT_NUMBER))

Or(Not(STRUCT_FACT-411),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_PASSWORD))

Or(Not(STRUCT_FACT-412),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_PORT))

Or(Not(STRUCT_FACT-413),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_REPLICATION_MODE))

Or(Not(STRUCT_FACT-414),
   has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
           REDIS_TLS_ENABLED))

Or(Not(STRUCT_FACT-415),
   ForAll(c!25,
          Or(c!25 == REDIS_TLS_ENABLED,
             c!25 == REDIS_REPLICATION_MODE,
             c!25 == REDIS_PORT,
             c!25 == REDIS_PASSWORD,
             c!25 == BITNAMI_DEBUG,
             c!25 == ALLOW_EMPTY_PASSWORD,
             Not(has_key(HelmParser.Kube.Container.EnvVarsConfig-1,
                         c!25)),
             c!25 == REDIS_MASTER_PORT_NUMBER,
             c!25 == REDIS_MASTER_PASSWORD,
             c!25 == REDIS_MASTER_HOST)))

Or(Not(STRUCT_FACT-416),
   container_port(HelmParser.Kube.Container.PortItem-1) ==
   6379)

Or(Not(STRUCT_FACT-417),
   host_ip(HelmParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-418),
   host_port(HelmParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-419),
   name(HelmParser.Kube.Container.PortItem-1) == redis)

Or(Not(STRUCT_FACT-420),
   protocol(HelmParser.Kube.Container.PortItem-1) ==
   COMMON.NONE)

Or(Not(STRUCT_FACT-421),
   value(HelmParser.Kube.Labels-11,
         app.kubernetes.io/component) ==
   replica)

Or(Not(STRUCT_FACT-422),
   value(HelmParser.Kube.Labels-11,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-423),
   value(HelmParser.Kube.Labels-11,
         app.kubernetes.io/managed-by) ==
   Helm)

Or(Not(STRUCT_FACT-424),
   value(HelmParser.Kube.Labels-11, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-425),
   value(HelmParser.Kube.Labels-11, helm.sh/chart) ==
   redis-14.4.0)

Or(Not(STRUCT_FACT-426),
   has_key(HelmParser.Kube.Labels-11,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-427),
   has_key(HelmParser.Kube.Labels-11,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-428),
   has_key(HelmParser.Kube.Labels-11,
           app.kubernetes.io/managed-by))

Or(Not(STRUCT_FACT-429),
   has_key(HelmParser.Kube.Labels-11,
           app.kubernetes.io/name))

Or(Not(STRUCT_FACT-430),
   has_key(HelmParser.Kube.Labels-11, helm.sh/chart))

Or(Not(STRUCT_FACT-431),
   ForAll(c!26,
          Or(c!26 == helm.sh/chart,
             c!26 == app.kubernetes.io/name,
             c!26 == app.kubernetes.io/managed-by,
             c!26 == app.kubernetes.io/instance,
             c!26 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-11, c!26)))))

Or(Not(STRUCT_FACT-432),
   value(HelmParser.Kube.Labels-12,
         app.kubernetes.io/component) ==
   replica)

Or(Not(STRUCT_FACT-433),
   value(HelmParser.Kube.Labels-12,
         app.kubernetes.io/instance) ==
   redis)

Or(Not(STRUCT_FACT-434),
   value(HelmParser.Kube.Labels-12, app.kubernetes.io/name) ==
   redis)

Or(Not(STRUCT_FACT-435),
   has_key(HelmParser.Kube.Labels-12,
           app.kubernetes.io/component))

Or(Not(STRUCT_FACT-436),
   has_key(HelmParser.Kube.Labels-12,
           app.kubernetes.io/instance))

Or(Not(STRUCT_FACT-437),
   has_key(HelmParser.Kube.Labels-12,
           app.kubernetes.io/name))

Or(Not(STRUCT_FACT-438),
   ForAll(c!27,
          Or(c!27 == app.kubernetes.io/name,
             c!27 == app.kubernetes.io/instance,
             c!27 == app.kubernetes.io/component,
             Not(has_key(HelmParser.Kube.Labels-12, c!27)))))

Or(Not(STRUCT_FACT-439),
   Source.FilePath(HelmParser.Source.FilePath-0) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests)

Or(Not(STRUCT_FACT-440),
   Source.FilePath(HelmParser.Source.FilePath-1) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/redis/templates/networkpolicy.yaml)

Or(Not(STRUCT_FACT-441),
   Source.FilePath(HelmParser.Source.FilePath-2) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/redis/templates/servicemonitor.yaml)

Or(Not(STRUCT_FACT-442),
   branch(Source.GitRepo-0) == rich_sprint44)

Or(Not(STRUCT_FACT-443),
   provider(Source.GitRepo-0) == github.com)

Or(Not(STRUCT_FACT-444), public(Source.GitRepo-0) == True)

Or(Not(STRUCT_FACT-445),
   url(Source.GitRepo-0) ==
   https://github.com/dtk/ai-reasoner.git)

Or(Not(STRUCT_FACT-446),
   path(Source.FilePath-0) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/app/app.yaml)

Or(Not(STRUCT_FACT-447),
   path(Source.FilePath-1) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/app/redis.yaml)

Or(Not(STRUCT_FACT-448),
   path(Source.FilePath-2) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/app/app2.yaml)

Or(Not(STRUCT_FACT-449),
   path(Source.FilePath-3) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/app/app1.yaml)

Or(Not(STRUCT_FACT-450),
   path(Source.FilePath-4) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/kube/ingress/ingress-examples.yaml)

Or(Not(STRUCT_FACT-451),
   path(Source.FilePath-5) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/secret.yaml)

Or(Not(STRUCT_FACT-452),
   path(Source.FilePath-6) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/configmap.yaml)

Or(Not(STRUCT_FACT-453),
   path(Source.FilePath-7) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/health-configmap.yaml)

Or(Not(STRUCT_FACT-454),
   path(Source.FilePath-8) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/scripts-configmap.yaml)

Or(Not(STRUCT_FACT-455),
   path(Source.FilePath-9) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/headless-svc.yaml)

Or(Not(STRUCT_FACT-456),
   path(Source.FilePath-10) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/service.yaml)

Or(Not(STRUCT_FACT-457),
   path(Source.FilePath-11) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/service.yaml)

Or(Not(STRUCT_FACT-458),
   path(Source.FilePath-12) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/master/statefulset.yaml)

Or(Not(STRUCT_FACT-459),
   path(Source.FilePath-13) ==
   /root/ai_reasoner/examples/kube-ingress-no-controllers/manifests/helm/redis/templates/replicas/statefulset.yaml)

Or(Not(DISTINCT_CONSTANTS-150),
   Not(secret(redis, redis-password:Kube.Secret.Key) ==
       COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-153),
   Not(secret(node-app2-secret, db_password:Kube.Secret.Key) ==
       COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-156),
   Not(secret(node-app1-secret, db_password:Kube.Secret.Key) ==
       COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-175),
   Not(host_pattern(KubernetesParser.Kube.Ingress.Rule-1) ==
       COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-176),
   Not(host_pattern(KubernetesParser.Kube.Ingress.Rule-0) ==
       COMMON.NONE))

Or(Not(DISTINCT_CONSTANTS-177),
   Not(host_pattern(KubernetesParser.Kube.Ingress.Rule-2) ==
       COMMON.NONE))


